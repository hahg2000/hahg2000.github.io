import{_ as t,W as o,X as i,Y as l,Z as e,$ as n,a2 as a,C as c}from"./framework-0bc3c581.js";const r={},u=l("h1",{id:"一、入门",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#一、入门","aria-hidden":"true"},"#"),e(" 一、入门")],-1),d=l("ul",null,[l("li",null,[l("p",null,[e("学习Haskell的契机是想要学习 "),l("strong",null,"函数式编程")])]),l("li",null,[l("p",null,"函数式编程语言有很多，为什么选择 Haskell？因为 Haskell 是纯函数编程语言中最热门的")]),l("li",null,[l("p",null,"代码编辑器选择 VSCode，需要配置插件")])],-1),h=l("p",null,"下面会介绍一些会遇到的名词，可能会不太对（2023年3月12日之前 自己理解的）",-1),p={href:"https://www.haskell.org/",target:"_blank",rel:"noopener noreferrer"},_=a("<li>GHCup：<strong>必装</strong>，管理工具，可以管理 Haskell 所需要的所有工具。注意和 ghc 不是一样的东西 <ul><li>ghc：<strong>必装</strong>，Haskell 编译器，可以使用其来编译 .hs 文件</li><li>HLS：<strong>必装</strong>，Haskell Language Server，Haskell 语言服务器。不会直接 HLS，但 VSCode 需要在后台使用 HLS</li><li>Cabal：Haskell 项目构建工具。简单说就是脚手架，用于生成项目结构</li><li>Stack：Haskell 项目构建工具。也是脚手架，学习视频会使用 Cabal 或者 Stack，建议两个都转上。</li><li>以上在 GHCup 安装的时候都会提示安装，直接全部使用推荐版本，如果使用最新版本可能会有兼容性问题。</li></ul></li>",1),g=l("h1",{id:"二、安装",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#二、安装","aria-hidden":"true"},"#"),e(" 二、安装")],-1),k=l("h2",{id:"_2-1-安装ghcup",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_2-1-安装ghcup","aria-hidden":"true"},"#"),e(" 2.1 安装GHCup")],-1),m={href:"https://www.haskell.org/ghcup/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.haskell.org/ghcup/install/#manual-installation",target:"_blank",rel:"noopener noreferrer"},H=l("li",null,[l("p",null,[e("下载 "),l("code",null,"x86_64-mingw64-ghcup.exe"),e("，不要运行，放到一个不要那么深的目录下，例如 "),l("code",null,"C:\\ghcup\\bin")])],-1),f=l("h2",{id:"_2-2-安装msys2",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_2-2-安装msys2","aria-hidden":"true"},"#"),e(" 2.2 安装MSYS2")],-1),w=l("li",null,"安装这工具因为 GHCup 需要使用",-1),b={href:"https://repo.msys2.org/distrib/msys2-x86_64-latest.exe",target:"_blank",rel:"noopener noreferrer"},x=l("li",null,[e("运行安装，要记住安装路径，例如 "),l("code",null,"C:\\msys64")],-1),y=a(`<h2 id="_2-3-配置环境变量" tabindex="-1"><a class="header-anchor" href="#_2-3-配置环境变量" aria-hidden="true">#</a> 2.3 配置环境变量</h2><ol><li>在 Path 添加 GHCup 的位置，例如 <code>C:\\ghcup\\bin</code></li><li>在用户变量新建一个变量，变量名填写 <code>GHCUP_MSYS2</code>，变量值填写 <code>C:\\msys64</code></li><li>再新建一个变量，变量名为 <code>GHCUP_CURL_OPTS</code> ，变量值填写 <code>-k</code> 。这个变量值的作用是跳过 CURL 的安全检查，CURL 在下载的时候会检查证书，会因为网络原因失败</li><li>然后在 GHCup 的配置文件配置镜像，配置文件位置 ：安装路径下的 <code>config.yaml</code></li><li>TODO：第3点和第4点是否只需要配置一个？需要后续验证</li></ol><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">url-source</span><span class="token punctuation">:</span>
  <span class="token key atrule">OwnSource</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//mirrors.ustc.edu.cn/ghcup/ghcup<span class="token punctuation">-</span>metadata/ghcup<span class="token punctuation">-</span>0.0.7.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后打开 powershell ，运行下面代码</p><ul><li><code>ghcup install ghc </code></li><li><code>ghcup install cabal </code></li><li><code>ghcup install stack </code></li><li><code>ghcup install hls </code></li></ul><p>然后</p>`,6);function S(v,G){const s=c("ExternalLinkIcon");return o(),i("div",null,[u,d,h,l("ul",null,[l("li",null,[e("Haskell：编程语言，官网 "),l("a",p,[e("https://www.haskell.org/"),n(s)])]),_]),g,k,l("ul",null,[l("li",null,[l("p",null,[e("GHCup 官网："),l("a",m,[e("https://www.haskell.org/ghcup/"),n(s)])])]),l("li",null,[l("p",null,[e("理论上一行代码就可以完成安装，就像官网所示。但是由于网络原因，需要手动安装。空降 "),l("a",C,[e("https://www.haskell.org/ghcup/install/#manual-installation"),n(s)])])]),H]),f,l("ul",null,[w,l("li",null,[e("下载链接： "),l("a",b,[e("https://repo.msys2.org/distrib/msys2-x86_64-latest.exe"),n(s)])]),x]),y])}const V=t(r,[["render",S],["__file","一、入门.html.vue"]]);export{V as default};
