import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,e as a,a as s,d as n}from"./app.bda3d84e.js";const l={},o=a(`<h1 id="\u7B97\u6CD5\u4E03" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u4E03" aria-hidden="true">#</a> \u7B97\u6CD5\u4E03</h1><h2 id="\u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F" tabindex="-1"><a class="header-anchor" href="#\u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F" aria-hidden="true">#</a> \u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F</h2><p>\u529B\u6263\u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/stone-game-vi/</p><blockquote><p>Alice \u548C Bob \u8F6E\u6D41\u73A9\u4E00\u4E2A\u6E38\u620F\uFF0CAlice \u5148\u624B\u3002</p><p>\u4E00\u5806\u77F3\u5B50\u91CC\u603B\u5171\u6709 n \u4E2A\u77F3\u5B50\uFF0C\u8F6E\u5230\u67D0\u4E2A\u73A9\u5BB6\u65F6\uFF0C\u4ED6\u53EF\u4EE5 <strong>\u79FB\u51FA</strong> \u4E00\u4E2A\u77F3\u5B50\u5E76\u5F97\u5230\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C\u3002Alice \u548C Bob \u5BF9\u77F3\u5B50\u4EF7\u503C\u6709 <strong>\u4E0D\u4E00\u6837\u7684\u7684\u8BC4\u5224\u6807\u51C6</strong> \u3002\u53CC\u65B9\u90FD\u77E5\u9053\u5BF9\u65B9\u7684\u8BC4\u5224\u6807\u51C6\u3002</p><p>\u7ED9\u4F60\u4E24\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6574\u6570\u6570\u7EC4 aliceValues \u548C bobValues \u3002aliceValues[i] \u548C bobValues[i] \u5206\u522B\u8868\u793A Alice \u548C Bob \u8BA4\u4E3A\u7B2C i \u4E2A\u77F3\u5B50\u7684\u4EF7\u503C\u3002</p><p>\u6240\u6709\u77F3\u5B50\u90FD\u88AB\u53D6\u5B8C\u540E\uFF0C\u5F97\u5206\u8F83\u9AD8\u7684\u4EBA\u4E3A\u80DC\u8005\u3002\u5982\u679C\u4E24\u4E2A\u73A9\u5BB6\u5F97\u5206\u76F8\u540C\uFF0C\u90A3\u4E48\u4E3A\u5E73\u5C40\u3002\u4E24\u4F4D\u73A9\u5BB6\u90FD\u4F1A\u91C7\u7528 <strong>\u6700\u4F18\u7B56\u7565</strong> \u8FDB\u884C\u6E38\u620F\u3002</p><p>\u8BF7\u4F60\u63A8\u65AD\u6E38\u620F\u7684\u7ED3\u679C\uFF0C\u7528\u5982\u4E0B\u7684\u65B9\u5F0F\u8868\u793A\uFF1A</p><p>\u5982\u679C Alice \u8D62\uFF0C\u8FD4\u56DE 1 \u3002\u5982\u679C Bob \u8D62\uFF0C\u8FD4\u56DE -1 \u3002\u5982\u679C\u6E38\u620F\u5E73\u5C40\uFF0C\u8FD4\u56DE 0 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><ul><li>\u8F93\u5165\uFF1AaliceValues = [1,3], bobValues = [2,1]</li><li>\u8F93\u51FA\uFF1A1</li><li>\u89E3\u91CA\uFF1A <ul><li>\u5982\u679C Alice \u62FF\u77F3\u5B50 1 \uFF08\u4E0B\u6807\u4ECE 0\u5F00\u59CB\uFF09\uFF0C\u90A3\u4E48 Alice \u53EF\u4EE5\u5F97\u5230 3 \u5206\u3002</li><li>Bob \u53EA\u80FD\u9009\u62E9\u77F3\u5B50 0 \uFF0C\u5F97\u5230 2 \u5206\u3002</li><li>Alice \u83B7\u80DC\u3002</li></ul></li></ul><p>\u793A\u4F8B 2\uFF1A</p><ul><li>\u8F93\u5165\uFF1AaliceValues = [1,2], bobValues = [3,1]</li><li>\u8F93\u51FA\uFF1A0</li><li>\u89E3\u91CA\uFF1A <ul><li>Alice \u62FF\u77F3\u5B50 0 \uFF0C Bob \u62FF\u77F3\u5B50 1 \uFF0C\u4ED6\u4EEC\u5F97\u5206\u90FD\u4E3A 1 \u5206\u3002</li><li>\u6253\u5E73\u3002</li></ul></li></ul><p>\u63D0\u793A\uFF1A</p><ul><li><code>n == aliceValues.length == bobValues.length</code></li><li><code>1 &lt;= n &lt;= 105</code></li><li><code>1 &lt;= aliceValues[i], bobValues[i] &lt;= 100</code></li></ul></blockquote><h3 id="_1-\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u8D2A\u5FC3\u7B97\u6CD5</h3><p>\u5F53\u62FF\u4E86\u4E00\u4E2A\u77F3\u5B50\u7684\u65F6\u5019\uFF0C\u62FF\u77F3\u5B50\u7684\u4EBA\u65E2 <strong>\u83B7\u53D6\u5230\u7684\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u53C8\u8BA9\u5BF9\u9762 <strong>\u5931\u53BB\u4E86\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C</strong></p><p>\u6240\u4EE5\u9009\u62E9\u77F3\u5B50\u4F18\u5148\u9009\u62E9\uFF1A <strong>\u83B7\u53D6\u5230\u7684\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u52A0\u4E0A <strong>\u5931\u53BB\u4E86\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u6700\u5927\u3002</p><p>\u4F46\u5B9E\u9645\u81EA\u5DF1\u83B7\u53D6\u5230\u53EA\u6709\u81EA\u5DF1\u8BA4\u4E3A\u7684\u4EF7\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">stoneGameVI</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliceValues<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bobValues<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">int</span> n <span class="token operator">=</span> aliceValues<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u5B58\u653E\u603B\u548C\u6570\u7EC4</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BA1\u7B97\u4E24\u4E2A\u6570\u7EC4\u5BF9\u5E94\u683C\u7684\u548C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> aliceValues<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> bobValues<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> sumA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sumB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5206\u522B\u7EDF\u8BA1\u4E24\u4E2A\u73A9\u5BB6\u7684\u5206\u6570</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> index <span class="token operator">=</span> sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        sumA <span class="token operator">+=</span> aliceValues<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        sumB <span class="token operator">+=</span> bobValues<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6839\u636E\u7ED3\u679C\u5206\u522B\u8F93\u51FA\u4E0D\u540C\u7ED3\u679C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sumA <span class="token operator">==</span> sumB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sumA <span class="token operator">&gt;</span> sumB <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">networkDelayTime</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> times<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//\u90BB\u63A5\u77E9\u9635\u521D\u59CB\u5316\u56FE</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u56E0\u4E3A\u53EF\u80FD\u70B9\u4E0E\u70B9\u4E4B\u95F4\u65E0\u8FDE\u63A5\uFF0C\u56E0\u6B64\u521D\u59CB\u5316\u4E3A\u65E0\u7A77\u5927\u3002\u6B64\u5904\u4E3A\u907F\u514D33\u884C\u8BA1\u7B97\u6EA2\u51FA\uFF0C&gt;&gt;2</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> times<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment">//\u6839\u636E\u9898\u76EE\u7ED9\u7684\u4FE1\u606Ftimes\uFF0C\u5BF9graph\u521D\u59CB\u5316\u3002</span>
      <span class="token keyword">int</span> source <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> target <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      graph<span class="token punctuation">[</span>source<span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token comment">//\u521D\u59CB\u503C\u4E3Afalse,\u82E5\u8BBF\u95EE\uFF0C\u5219\u4E3Atrue\u3002</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token comment">//\u8DDD\u79BB\u8868\u3002</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>dist<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u521D\u59CB\u5316\u8DDD\u79BB\u8868\u4E3A\u65E0\u7A77\u3002</span>
    dist<span class="token punctuation">[</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             <span class="token comment">//\u521D\u59CB\u5316\u8D77\u59CB\u70B9K-K\u7684\u8DDD\u79BB\u4E3A0</span>
    <span class="token comment">//dijkstra</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//\u4E00\u6B21\u52A0\u5165\u4E00\u4E2A\u8282\u70B9\u5230\u8DEF\u5F84\u4E2D</span>
      <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//\u627E\u51FA\u8DDD\u79BB\u8868\u4E2D\u6700\u5C0F\u7684\u8282\u70B9 \u6536\u5F55\u8FDB\u6765 \u5373\u9501\u6B7B\u8BE5\u70B9\uFF0C\u4EE5\u540E\u5C31\u4E0D\u7528\u4E86</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>cur <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dist<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//\uFF01vidsited[i]\u5373\u9501\u6B7B\u7684\u4E0D\u7528</span>
          cur <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      visited<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>   <span class="token comment">//\u9501\u6B7B\u4E0A\u8FF0\u627E\u5230\u7684\u8DDD\u79BB\u8868\u4E2D\u6700\u5C0F\u7684\u8282\u70B9\u3002</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//\u66F4\u65B0\u9501\u6B7B\u8282\u70B9\u4E0E\u5176\u76F8\u90BB\u8282\u70B9\u7684dist.</span>
        dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dist<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">+</span> graph<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                      <span class="token comment">//\u9898\u76EE\u8981\u6C42\uFF0C\u82E5dist\u4E2D\u6709\u672A\u5230\u8FBE\u7684\u8282\u70B9\uFF0Creturn-1\uFF1B</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      result <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61" aria-hidden="true">#</a> \u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485658&amp;idx=1&amp;sn=f298abe76d9cc058805b6a18d2523db6&amp;chksm=fd9ca3c5caeb2ad31f6faefd800471b339d21cf54988e123fc507ff07b1447ae31337d826b0e&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C416. \u5206\u5272\u7B49\u548C\u5B50\u96C6\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u542B\u6B63\u6574\u6570\u7684\u975E\u7A7A\u6570\u7EC4\u3002\u662F\u5426\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u6570\u7EC4\u5206\u5272\u6210\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4F7F\u5F97\u4E24\u4E2A\u5B50\u96C6\u7684\u5143\u7D20\u548C\u76F8\u7B49\u3002</p><p>\u6CE8\u610F:</p><ul><li>\u6BCF\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E0D\u4F1A\u8D85\u8FC7 100</li><li>\u6570\u7EC4\u7684\u5927\u5C0F\u4E0D\u4F1A\u8D85\u8FC7 200</li></ul><p>\u793A\u4F8B 1:</p><ul><li><p>\u8F93\u5165: [1, 5, 11, 5]</p></li><li><p>\u8F93\u51FA: true</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u53EF\u4EE5\u5206\u5272\u6210 [1, 5, 5] \u548C [11].</p></li></ul><p>\u793A\u4F8B 2:</p><ul><li><p>\u8F93\u5165: [1, 2, 3, 5]</p></li><li><p>\u8F93\u51FA: false</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u4E0D\u80FD\u5206\u5272\u6210\u4E24\u4E2A\u5143\u7D20\u548C\u76F8\u7B49\u7684\u5B50\u96C6.</p></li></ul></blockquote><h3 id="_1-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u6790" aria-hidden="true">#</a> \uFF081\uFF09\u5206\u6790</h3><p><strong>\u901A\u5E38\u300C\u80CC\u5305\u95EE\u9898\u300D\u76F8\u5173\u7684\u9898\uFF0C\u90FD\u662F\u5728\u8003\u5BDF\u6211\u4EEC\u7684\u300C\u5EFA\u6A21\u300D\u80FD\u529B\uFF0C\u4E5F\u5C31\u662F\u5C06\u95EE\u9898\u8F6C\u6362\u4E3A\u300C\u80CC\u5305\u95EE\u9898\u300D\u7684\u80FD\u529B</strong>\u3002</p><p>\u7531\u4E8E\u672C\u9898\u662F\u95EE\u6211\u4EEC\u80FD\u5426\u5C06\u4E00\u4E2A\u6570\u7EC4\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u300D\u5B50\u96C6\u3002</p><p>\u95EE\u9898\u7B49\u6548\u4E8E**\u300C\u80FD\u5426\u4ECE\u6570\u7EC4\u4E2D\u6311\u9009\u82E5\u5E72\u4E2A\u5143\u7D20\uFF0C\u4F7F\u5F97\u5143\u7D20\u603B\u548C\u7B49\u4E8E\u6240\u6709\u5143\u7D20\u603B\u548C\u7684\u4E00\u534A\u300D**\u3002</p><p>\u8FD9\u9053\u9898\u5982\u679C\u62BD\u8C61\u6210\u300C\u80CC\u5305\u95EE\u9898\u300D\u7684\u8BDD\uFF0C\u5E94\u8BE5\u662F\uFF1A</p>`,18),c=s("p",null,[s("strong",null,[n("\u6211\u4EEC\u80CC\u5305\u5BB9\u91CF\u4E3A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t"),s("mo",null,"="),s("mi",null,"s"),s("mi",null,"u"),s("mi",null,"m"),s("mi",{mathvariant:"normal"},"/"),s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"target = sum / 2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord"},"/2")])])]),n(" \uFF0C\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u7684\u300C\u4EF7\u503C\u300D\u4E0E\u300C\u6210\u672C\u300D\u90FD\u662F\u5176\u6570\u503C\u5927\u5C0F\uFF0C\u6C42\u6211\u4EEC\u80FD\u5426\u88C5\u6EE1\u80CC\u5305\u3002")])],-1),i=a('<h3 id="_2-\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898" aria-hidden="true">#</a> \uFF082\uFF09\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898</h3><p>\u7136\u540E\u5C31\u53EF\u4EE5\u8F6C\u6362\u6210\u80CC\u5305\u95EE\u9898</p><p>\u7531\u4E8E\u6BCF\u4E2A\u6570\u5B57\uFF08\u6570\u7EC4\u5143\u7D20\uFF09\u53EA\u80FD\u88AB\u9009\u4E00\u6B21\uFF0C\u800C\u4E14\u6BCF\u4E2A\u6570\u5B57\u9009\u62E9\u4E0E\u5426\u5BF9\u5E94\u4E86**\u300C\u4EF7\u503C\u300D\u548C\u300C\u6210\u672C\u300D**\uFF0C\u6C42\u89E3\u7684\u95EE\u9898\u4E5F\u4E0E\u300C\u6700\u5927\u4EF7\u503C\u300D\u76F8\u5173\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u300C01 \u80CC\u5305\u300D\u7684\u6A21\u578B\u6765\u505A\u3002</p><p>\u5F53\u6211\u4EEC\u786E\u5B9A\u4E00\u4E2A\u95EE\u9898\u53EF\u4EE5\u8F6C\u5316\u4E3A\u300C01 \u80CC\u5305\u300D\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u5957\u7528\u300C01 \u80CC\u5305\u300D\u7684\u72B6\u6001\u5B9A\u4E49\u8FDB\u884C\u6C42\u89E3\u4E86\u3002</p><p>\u6211\u4EEC\u76F4\u63A5\u5957\u7528\u300C01 \u80CC\u5305\u300D\u7684\u72B6\u6001\u5B9A\u4E49\uFF1A</p><p><code>f[i][j]</code> \u4EE3\u8868\u8003\u8651\u524D <code>i</code> \u4E2A\u6570\u503C\uFF0C\u5176\u9009\u62E9\u6570\u5B57\u603B\u548C\u4E0D\u8D85\u8FC7 <code>j</code> \u7684\u6700\u5927\u4EF7\u503C\u3002</p><p>\u5F53\u6709\u4E86\u300C\u72B6\u6001\u5B9A\u4E49\u300D\u4E4B\u540E\uFF0C\u7ED3\u5408\u6211\u4EEC\u7684\u300C\u6700\u540E\u4E00\u6B65\u5206\u6790\u6CD5\u300D\uFF0C\u6BCF\u4E2A\u6570\u5B57\u90FD\u6709\u300C\u9009\u300D\u548C\u300C\u4E0D\u9009\u300D\u4E24\u79CD\u9009\u62E9\u3002</p><p>\u56E0\u6B64\u4E0D\u96BE\u5F97\u51FA\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1A</p><ul><li><code>f[i - 1, j]</code> \uFF1A\u4E0D\u9009\u8BE5\u6570\u5B57</li><li><code>f[i - 1][j - nums[i]] + nums[j]</code> \uFF1A\u9009\u4E86\u8BE5\u6570\u5B57</li></ul><p><code>f[i][j] = max( f[i - 1, j], f[i - 1][j - nums[i]] + nums[j] )</code></p><p>\u4F18\u5316\uFF1A</p>',12),u=s("ul",null,[s("li",null,[n("\u5982\u679C\u5168\u90E8\u548C\u9664\u4EE5 2 \u4E3A\u5947\u6570\u65F6\uFF0C\u7B49\u548C\u5B50\u96C6\u7684\u76EE\u6807\u548C\u5FC5\u7136\u4E0D\u80FD\u51D1\u6210\u3002 "),s("ul",null,[s("li",null,[n("\u6839\u636E\u9898\u76EE\u5DF2\u77E5\uFF0C\u80FD\u5206\u5272\u5B50\u96C6\u7684\u5F0F\u5B50\uFF1A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"0"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"f[0] + f[1] + ... + f[n-2] = f[n-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])]),n(" \uFF08\u5047\u8BBE\u6570\u7EC4\u5DF2\u7ECF\u5347\u5E8F\u6392\u5E8F\uFF09\uFF0C\u53EF\u4EE5\u63A8\u51FA "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mo",null,"\u2211"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"="),s("mn",null,"0")]),s("mrow",null,[s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1")])]),s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")]),s("mo",null,"="),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"0"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mn",null,"2"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"\\sum_{n=0}^{n-1} {f[n]} = f[0] + f[1] + ... + f[n-2] + f[n-1] = 2f[n-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2537em","vertical-align":"-0.2997em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"\u2211"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.954em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"0")])])]),s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])]),n(" \uFF0C\u5DE6\u53F3\u8FB9\u5168\u90E8\u9664\u4EE5 2\uFF0C"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("msubsup",null,[s("mo",null,"\u2211"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"="),s("mn",null,"0")]),s("mrow",null,[s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1")])]),s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])]),s("mn",null,"2")]),s("mo",null,"="),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"0"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"2"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"\\frac{\\sum_{n=0}^{n-1} {f[n]}}{2} = f[0] + f[1] + ... + f[n-2] + f[n-1]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.5039em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.1589em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.535em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mop mtight"},[s("span",{class:"mop op-symbol small-op mtight",style:{position:"relative",top:"0em"}},"\u2211"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8913em"}},[s("span",{style:{top:"-2.1786em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"0")])])]),s("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3214em"}},[s("span")])])])])]),s("span",{class:"mspace mtight",style:{"margin-right":"0.1952em"}}),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mclose mtight"},"]")])])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]")])])])])])]),s("li",null,"\u4E00\u7EF4\u4E0B\u6807\u4E3A n\uFF0C\u4EE3\u8868\u5728\u8BE5\u4E0B\u6807\u4E4B\u524D\u53D6\u5230\u7684\u6570\u3002\u4F8B\u5982\u4E0B\u6807\u4E3A 2\uFF0C\u4EE3\u8868\u53EF\u4EE5\u53D6\u5230 0\uFF0C1\uFF0C2 \u4E09\u4E2A\u7269\u54C1"),s("li",null,"\u4E8C\u7EF4\u4E0B\u6807\u4E3A \u4EF7\u503C\u6570\u91CF\uFF0C\u4EE3\u8868\u5C0F\u4E8E\u8BE5\u6570\u503C\u7684\u60C5\u51B5\u4E0B\u7684\u6700\u5927\u4EF7\u503C\u3002\u4F8B\u5982\u4E8C\u7EF4\u4E0B\u6807\u4E3A 4\uFF0C\u4EE3\u8868\u4E0D\u8D85\u8FC7\u4EF7\u503C 4 \u7684\u60C5\u51B5\u4E0B\u7684\u6700\u5927\u4EF7\u503C\uFF0C\u6700\u5927\u4EF7\u503C\u662F 4\uFF0C\u4E14\u662F\u6700\u540E\u4E00\u683C\uFF0C\u5219\u8FD4\u56DE\u8BC1\u660E\u53EF\u4EE5\u51D1\u6210\u3002")],-1),r=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">//\u300C\u7B49\u548C\u5B50\u96C6\u300D\u7684\u548C\u5FC5\u7136\u662F\u603B\u548C\u7684\u4E00\u534A</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u5E94\u4E86\u603B\u548C\u4E3A\u5947\u6570\u7684\u60C5\u51B5\uFF0C\u6CE8\u5B9A\u4E0D\u80FD\u88AB\u5206\u4E3A\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u5904\u7406\u8003\u8651\u7B2C 1 \u4EF6\u7269\u54C1\u7684\u60C5\u51B5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> j <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u518D\u5904\u7406\u8003\u8651\u5176\u4F59\u7269\u54C1\u7684\u60C5\u51B5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u904D\u5386\u4EF7\u503C</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> t<span class="token punctuation">]</span> <span class="token operator">+</span> t <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>no<span class="token punctuation">,</span> yes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6700\u5927\u4EF7\u503C\u7B49\u4E8E target\uFF0C\u8BF4\u660E\u53EF\u4EE5\u62C6\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m=s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"},"target")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t")])])]),n(" \u4E3A\u6570\u7EC4\u603B\u548C\u7684\u4E00\u534A\uFF0C"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" \u4E3A\u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u3002\u6216\u8005\u770B\u4E24\u5C42\u5FAA\u73AF\u7684\u957F\u5EA6\u3002\u5171\u6709 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t"),s("mo",null,"\u2217"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"target * n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2217"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" \u4E2A\u72B6\u6001\u9700\u8981\u88AB\u8F6C\u79FB\uFF0C\u590D\u6742\u5EA6\u4E3A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t"),s("mo",null,"\u2217"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2217"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t"),s("mo",null,"\u2217"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2217"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])],-1),k=a(`<h3 id="_3-\u4F18\u5316\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#_3-\u4F18\u5316\u7A7A\u95F4" aria-hidden="true">#</a> \uFF083\uFF09\u4F18\u5316\u7A7A\u95F4</h3><p>\u4E4B\u524D\u4E5F\u8BF4\u8FC7\u52A8\u6001\u89C4\u5212\u4F18\u5316\u7A7A\u95F4\u3002</p><ul><li>\u7B2C 1 \u4E2A\u65B9\u5F0F\u662F\u6EDA\u52A8\u6570\u7EC4\uFF0C\u53EA\u5B58\u653E\u4E24\u884C\u6570\u636E\uFF0C\u5F53\u524D\u884C\u548C\u4E0A\u4E00\u884C\uFF0C\u6BCF\u6B21\u8986\u76D6\u5C06\u4E0B\u4E00\u884C\u7684\u503C\u8986\u76D6\u5230\u4E0A\u4E00\u884C\u7684\u4F4D\u7F6E</li><li>\u7B2C 2 \u4E2A\u65B9\u5F0F\u4F18\u5316\u6210\u4E00\u7EF4\u6570\u7EC4\uFF0C\u5229\u7528\u6BCF\u6B21\u53D6\u6570\u636E\u7684\u65B9\u5411\u3002\u56E0\u4E3A\u6BCF\u6B21\u53D6\u6570\u636E\u7684\u662F\u4E00\u4E2A\u65B9\u5411\uFF0C<strong>\u8986\u76D6\u5DF2\u7ECF\u53D6\u6570\u636E\u7684\u4F4D\u7F6E\u5C31\u884C</strong>\u3002 <ul><li>\u4F46\u5FAA\u73AF\u662F\u5411\u53F3\u904D\u5386\u4ECE <code>0</code> \u5230 <code>target - 1</code> \uFF0C\u800C\u53D6\u6570\u7684\u65B9\u5411\u662F\u5F80\u5DE6\u53D6\u7684\u2014\u2014<code>f[i - 1][j - t]</code> \uFF0C<code>j - t</code> \u4EE3\u8868\u4E86\u662F\u53D6\u5DE6\u8FB9\u7684\u6570\uFF0C\u800C\u4E4B\u524D\u5DE6\u8FB9\u7684\u6570\u88AB\u65B0\u6570\u636E\u8986\u76D6\uFF0C\u53D6\u4E0D\u5230\u65E7\u6570\u636E\u3002</li><li>\u6240\u4EE5\u5FAA\u73AF\u9700\u8981\u6362\u4E2A\u65B9\u5411\uFF0C\u4ECE\u53F3\u5F80\u5DE6\u5FAA\u73AF <code>for (int j = target; j &gt;= 0; j--) {</code></li></ul></li></ul><p>\u5168\u90E8\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u300C\u7269\u54C1\u7EF4\u5EA6\u300D\u53D6\u6D88</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u300C\u5BB9\u91CF\u7EF4\u5EA6\u300D\u6539\u6210\u4ECE\u5927\u5230\u5C0F\u904D\u5386</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> target<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>j<span class="token operator">-</span>t<span class="token punctuation">]</span> <span class="token operator">+</span> t <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>no<span class="token punctuation">,</span> yes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6700\u5927\u4EF7\u503C\u7B49\u4E8E target\uFF0C\u8BF4\u660E\u53EF\u4EE5\u62C6\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C-k-\u5927\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C-k-\u5927\u5143\u7D20" aria-hidden="true">#</a> \u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C K \u5927\u5143\u7D20</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485689&amp;idx=1&amp;sn=a0f92c80f91049d5ca5b0101274b14a6&amp;chksm=fd9ca3e6caeb2af02b761d529eb833ab020694001c9ed7b0cd224dfdf615cb302ae8c28d6738&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C703. \u6570\u636E\u6D41\u4E2D\u7684\u7B2C K \u5927\u5143\u7D20\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>\u300CEasy\u300D</strong>\u3002</p><p>\u8BBE\u8BA1\u4E00\u4E2A\u627E\u5230\u6570\u636E\u6D41\u4E2D\u7B2C k \u5927\u5143\u7D20\u7684\u7C7B\uFF08class\uFF09\u3002</p><p>\u6CE8\u610F\u662F\u6392\u5E8F\u540E\u7684\u7B2C k \u5927\u5143\u7D20\uFF0C\u4E0D\u662F\u7B2C k \u4E2A\u4E0D\u540C\u7684\u5143\u7D20\u3002</p><p>\u8BF7\u5B9E\u73B0 KthLargest \u7C7B\uFF1A</p><ul><li>KthLargest(int k, int[] nums) \u4F7F\u7528\u6574\u6570 k \u548C\u6574\u6570\u6D41 nums \u521D\u59CB\u5316\u5BF9\u8C61\u3002</li><li>int add(int val) \u5C06 val \u63D2\u5165\u6570\u636E\u6D41 nums \u540E\uFF0C\u8FD4\u56DE\u5F53\u524D\u6570\u636E\u6D41\u4E2D\u7B2C k \u5927\u7684\u5143\u7D20\u3002</li></ul><p>\u793A\u4F8B\uFF1A</p><ul><li><p>\u8F93\u5165\uFF1A</p><ul><li><code>[&quot;KthLargest&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;]</code></li><li><code>[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]</code></li></ul></li><li><p>\u8F93\u51FA\uFF1A</p><ul><li><code>[null, 4, 5, 5, 8, 8]</code></li></ul></li><li><p>\u89E3\u91CA\uFF1A</p><ul><li><code>KthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);</code></li><li><code>kthLargest.add(3); // return 4</code></li><li><code>kthLargest.add(5); // return 5</code></li><li><code>kthLargest.add(10); // return 5</code></li><li><code>kthLargest.add(9); // return 8</code></li><li><code>kthLargest.add(4); // return 8</code></li></ul></li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>1 &lt;= k &lt;= 10<sup>4</sup></li><li>0 &lt;= nums.length &lt;= 10<sup>4</sup></li><li>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></li><li>-10<sup>4</sup> &lt;= val &lt;= 10<sup>4</sup></li><li>\u6700\u591A\u8C03\u7528 add \u65B9\u6CD5 10<sup>4</sup> \u6B21</li><li>\u9898\u76EE\u6570\u636E\u4FDD\u8BC1\uFF0C\u5728\u67E5\u627E\u7B2C k \u5927\u5143\u7D20\u65F6\uFF0C\u6570\u7EC4\u4E2D\u81F3\u5C11\u6709 k \u4E2A\u5143\u7D20</li></ul></blockquote><h3 id="_1-\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \uFF081\uFF09\u5192\u6CE1\u6392\u5E8F</h3><ul><li>\u521D\u59CB\u5316\u65F6\uFF0C\u4E0D\u6392\u5E8F\uFF0C\u53EA\u6709\u5728\u6DFB\u52A0\u7684\u65F6\u5019\u518D\u6392\u5E8F\u3002</li><li>\u4F7F\u7528\u5217\u8868\uFF1A\u56E0\u4E3A\u6269\u5C55\u6570\u7EC4\u7684\u957F\u5EA6\u8F83\u5BB9\u6613</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">int</span> k<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k<span class="token punctuation">;</span>
		<span class="token comment">// \u4E0D\u6392\u5E8F\u4F9D\u6B21\u6DFB\u52A0\u5230\u5217\u8868</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6DFB\u52A0\u65B0\u7684\u6570\u5B57</span>
    data<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u8FDB\u884C\u5192\u6CE1\u6392\u5E8F\uFF08\u964D\u5E8F\uFF09</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u627E\u5230\u6700\u5927\u503C</span>
      <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> <span class="token function">findMax</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u6700\u5927\u503C\u4E0E\u5F53\u524D\u4F4D\u7F6E\u7684\u6570\u5B57\u4EA4\u6362</span>
      <span class="token function">swapNum</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> maxIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">swapNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728start\u548Cend\u4E0B\u6807\u4E4B\u95F4\u627E\u6700\u5927\u503C</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMax</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> start<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> tempNum <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tempNum <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">=</span> tempNum<span class="token punctuation">;</span>
        maxIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxIndex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),d=s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"\u2217"),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n * k)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2217"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(k)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u5F53 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mtext",null,"\u3001"),s("mi",null,"k")]),s("annotation",{encoding:"application/x-tex"},"n\u3001k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord cjk_fallback"},"\u3001"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),n(" \u90FD\u5F88\u5927\u65F6\uFF0C\u5C31\u4F1A\u8D85\u65F6\u3002\u5982\u679C\u4F7F\u7528 Java \u81EA\u5E26\u7684\u6392\u5E8F\u8FDB\u884C\u6392\u5E8F\uFF0C\u4E0D\u4F1A\u8D85\u65F6\uFF0C\u4F46\u82B1\u8D39\u7684\u65F6\u95F4\u4F9D\u7136\u5F88\u591A")])],-1),h=a(`<h3 id="_2-\u79FB\u52A8\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_2-\u79FB\u52A8\u6570\u5B57" aria-hidden="true">#</a> \uFF082\uFF09\u79FB\u52A8\u6570\u5B57</h3><p>\u5176\u5B9E <strong>\u6CA1\u6709\u5FC5\u8981\u5728\u6BCF\u6B21\u6DFB\u52A0\u6570\u5B57\u540E\u8FDB\u884C\u6392\u5E8F</strong>\uFF0C\u56E0\u4E3A\u7B2C 1 \u6B21\u6DFB\u52A0\u7684\u65F6\u5019\u5DF2\u7ECF\u6392\u8FC7\u4E00\u6B21\u5E8F\u3002\u540E\u9762\u6DFB\u52A0\u7684\u65F6\u5019\u53EA\u9700\u8981\u627E\u5230\u65B0\u6570\u5B57\u7684\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u5C06\u5176\u4F59\u7684\u6570\u5B57\u5F80\u540E\u79FB\u52A8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>

  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">;</span>

  <span class="token keyword">int</span> length<span class="token punctuation">;</span>

  <span class="token keyword">int</span> k<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> nums<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF08\u5347\u5E8F\uFF09</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6570\u7EC4</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tempArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token operator">++</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u6700\u5F00\u59CB\u7684\u7A7A\u7684\uFF0C\u4E0D\u9002\u5408\u79FB\u52A8\u6570\u5B57\u7B97\u6CD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      data <span class="token operator">=</span> tempArray<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">int</span> i <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u65B0\u6570\u6BD4\u5F53\u524D\u6570\u5B57\u5C0F\uFF0C\u76F4\u63A5\u5C06\u6570\u5B57\u5F80\u540E\u79FB</span>
        tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u65B0\u6570\u5927\u4E8E\u7B49\u4E8E\u5F53\u524D\u6570\u5B57\uFF0C\u7ED3\u675F\u5FAA\u73AF</span>
        <span class="token comment">// \u5C06\u65B0\u7684\u6570\u5B57\u653E\u5165\u7A7A\u683C\u4E2D</span>
        tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token comment">// \u5269\u4F59\u7684\u6570\u5B57\u4E00\u4E00\u5BF9\u5E94\u653E\u5165</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          tempArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5982\u679C\u5C06\u6240\u6709\u7684\u6570\u5B57\u5168\u90E8\u79FB\u4E86\u4E00\u904D\uFF0C</span>
    <span class="token comment">// \u5219\u65B0\u6570\u7EC4\u91CC\u7684\u7B2C1\u683C\u662F\u7A7A\u7684\uFF0C\u9700\u8981\u989D\u5916\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u66F4\u65B0\u5BF9\u9762\u7684\u91CC\u6570\u7EC4</span>
    data <span class="token operator">=</span> tempArray<span class="token punctuation">;</span>
    <span class="token keyword">return</span> data<span class="token punctuation">[</span>length <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),v=s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A "),s("ul",null,[s("li",null,[n("\u6392\u5E8F\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(nlogn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u8C03\u7528 1 \u6B21 "),s("code",null,"add()"),n(" \u65B9\u6CD5\uFF1A\u6700\u5DEE "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n(" \uFF0C\u6700\u597D "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u6240\u4EE5\u6700\u5DEE\u60C5\u51B5\uFF0Cn \u4E2A\u6570\u5B57\u6DFB\u52A0\uFF0C\u6BCF\u6B21\u90FD\u8981\u79FB\u52A8\u5168\u90E8\u6570\u5B57\uFF0C"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"n"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"n"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])])])])])]),s("span",{class:"mclose"},")")])])])])])]),s("li",null,[n("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])],-1),g=a(`<h3 id="_3-\u5C0F\u6839\u5806" tabindex="-1"><a class="header-anchor" href="#_3-\u5C0F\u6839\u5806" aria-hidden="true">#</a> \uFF083\uFF09\u5C0F\u6839\u5806</h3><ul><li>\u5C0F\u6839\u5806\uFF1A\u4F1A\u81EA\u52A8\u6392\u5E8F\u7684\u5BB9\u5668\uFF0C\u6700\u9876\u90E8\u662F\u5BB9\u5668\u4E2D\u7684\u6700\u5C0F\u503C\u3002</li><li>\u53EA\u5B58\u653E k \u4E2A\u6570\uFF1A\u56E0\u4E3A\u6211\u4EEC\u4F7F\u7528\u5230\u524D\u9762 k \u4E2A\u6570\uFF0C\u53EA\u6709\u6DFB\u52A0\u7684\u6570\u7B26\u5408\u67D0\u4E9B\u89C4\u5219\u65F6\uFF0C\u624D\u4F1A\u8C03\u6574\u8FD9 k \u4E2A\u6570 <ul><li>\u6DFB\u52A0\u7684\u6570 &lt;= \u6839\u9876\u5143\u7D20\uFF1A\u56E0\u4E3A\u5806\u91CC\u9762\u662F <strong>\u6570\u7EC4\u91CC\u524D k \u5927\u7684\u503C</strong>\uFF0C\u5982\u679C\u6DFB\u52A0\u7684\u6570\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u7B2C k \u5927\u7684\u503C\uFF0C\u5219\u6DFB\u52A0\u7684\u6570\u662F\u7B2C k + x \u5927\u7684\u6570\uFF0C\u6211\u4EEC\u6C38\u8FDC\u4E0D\u4F1A\u4F7F\u7528\u5230</li><li>\u6DFB\u52A0\u7684\u6570 &gt; \u6839\u9876\u5143\u7D20\uFF1A\u4E00\u5B9A\u4F1A\u5BFC\u81F4\u5806\u53D8\u5316\uFF0C\u800C\u6839\u9876\u7684\u5143\u7D20 <strong>\u4E00\u5B9A\u4F1A\u88AB\u6392\u9664\u5728\u524D\u9762 k \u4E2A\u6570</strong> \uFF0C\u6240\u4EE5\u76F4\u63A5</li><li>\u5C0F\u6839\u5806\u7684\u4F7F\u7528\u573A\u666F\uFF1A<strong>\u53EA\u5728\u4E4E\u5B58\u7684\u6570\u503C\uFF0C\u4E0D\u5728\u4E4E\u5728\u6570\u7EC4\u91CC\u7684\u4F4D\u7F6E</strong>\u3002\u5728 \u3010\u56DB\u5341\u516B\u3001\u8DF3\u8DC3\u6E38\u620F\u3011\u4E2D\uFF0C\u867D\u7136\u4E5F\u662F\u627E\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C\uFF0C\u4F46\u662F\u79FB\u9664\u5143\u7D20\u7684\u65F6\u5019\u662F\u6839\u636E\u5728\u6570\u7EC4\u7684\u4E0B\u6807.</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> k<span class="token punctuation">;</span>
  <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue<span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> _k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> _nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    k <span class="token operator">=</span> _k<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u5EFA\u5C0F\u6839\u5806</span>
    queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">compare</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> _nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u524D k \u4E2A\u6570\u76F4\u63A5\u653E\u5165\u5C0F\u6839\u5806\u91CC</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>_nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5176\u4ED6\u7684\u6570\uFF0C\u8C03\u7528add()\u65B9\u6CD5\u6765\u6DFB\u52A0\uFF0C\u4EE5\u7EF4\u6301\u5C0F\u6839\u5806\u7684\u957F\u5EA6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>_nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5C0F\u6839\u5806\u662F\u7A7A\uFF0C\u5219\u65E0\u6CD5\u53D6\u51FA\u6839\u9876\u5143\u7D20</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
    <span class="token comment">// \u53EA\u6709\u4E24\u79CD\u573A\u666F\u624D\u8981\u64CD\u4F5C</span>
    <span class="token comment">// 1. \u5806\u7684\u957F\u5EA6\u6CA1\u6709\u591F k</span>
    <span class="token comment">// 2. \u5806\u6EE1\u7684\u65F6\u5019\uFF0C\u65B0\u6570\u5927\u4E8E\u6839\u9876</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;</span> t <span class="token operator">||</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u5806\u6EE1\u7684\u65F6\u5019\u624D\u9700\u8981\u53BB\u9664\u5143\u7D20</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u56E0\u4E3A\u65E0\u8BBA\u662F\u7B2C1\u70B9\u8FD8\u662F\u7B2C2\u70B9\uFF0C\u90FD\u9700\u8981\u6DFB\u52A0\u5143\u7D20</span>
      <span class="token comment">// \u6240\u4EE5\u76F8\u540C\u7684\u64CD\u4F5C\u63D0\u53D6\u51FA\u6765</span>
      queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),b=s("ul",null,[s("li",null,[n("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u6700\u574F\u60C5\u51B5\u4E0B\uFF0C"),s("code",null,"n"),n(" \u4E2A\u5143\u7D20\u5165\u5806\uFF0C\u90FD\u89E6\u53D1\u5806\u8C03\u6574\u3002\u8C03\u6574\u4E00\u6B21\u5806\u6392\u5E8F\u5C31\u9700\u8981\u65F6\u95F4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logk)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])]),n(" \uFF0C\u6240\u4EE5\u603B\u590D\u6742\u5EA6\u4E3A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(nlogk)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])])]),s("li",null,[n("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"k"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logk)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},")")])])])])],-1),y=a('<h2 id="\u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62" aria-hidden="true">#</a> \u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485727&amp;idx=1&amp;sn=2cfb1a43bdb4f47cf4457c58f809deb8&amp;chksm=fd9ca200caeb2b16e7c70ffe673886ba3577b3c084ec204a532cf4a5e0d46dc1b51b34970ba2&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C416. \u5206\u5272\u7B49\u548C\u5B50\u96C6\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u542B\u6B63\u6574\u6570\u7684\u975E\u7A7A\u6570\u7EC4\u3002\u662F\u5426\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u6570\u7EC4\u5206\u5272\u6210\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4F7F\u5F97\u4E24\u4E2A\u5B50\u96C6\u7684\u5143\u7D20\u548C\u76F8\u7B49\u3002</p><p>\u6CE8\u610F:</p><ul><li>\u6BCF\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E0D\u4F1A\u8D85\u8FC7 100</li><li>\u6570\u7EC4\u7684\u5927\u5C0F\u4E0D\u4F1A\u8D85\u8FC7 200</li></ul><p>\u793A\u4F8B 1:</p><ul><li><p>\u8F93\u5165: [1, 5, 11, 5]</p></li><li><p>\u8F93\u51FA: true</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u53EF\u4EE5\u5206\u5272\u6210 [1, 5, 5] \u548C [11].</p></li></ul><p>\u793A\u4F8B 2:</p><ul><li><p>\u8F93\u5165: [1, 2, 3, 5]</p></li><li><p>\u8F93\u51FA: false</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u4E0D\u80FD\u5206\u5272\u6210\u4E24\u4E2A\u5143\u7D20\u548C\u76F8\u7B49\u7684\u5B50\u96C6.</p></li></ul></blockquote><h3 id="_1-\u5206\u6790-1" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u6790-1" aria-hidden="true">#</a> \uFF081\uFF09\u5206\u6790</h3><p>\u5728\u3010\u5206\u5272\u7B49\u548C\u5B50\u96C61\u3011\u4E2D\uFF0C\u6211\u4EEC\u662F <strong>\u95F4\u63A5</strong> \u5F97\u51FA\u7ED3\u679C\u3002</p><ul><li>\u95F4\u63A5\uFF1A\u5148\u6C42\u51FA\u4E0D\u8D85\u8FC7\u67D0\u4E2A\u503C\u7684\u6700\u5927\u503C\uFF0C\u518D\u5224\u65AD\u662F\u5426\u548C\u67D0\u4E2A\u503C\u76F8\u7B49\u3002</li></ul><p>\u8FD9\u6B21\u8981\u6539\u6B63\u4F7F\u7528\uFF0C\u8981 <strong>\u76F4\u63A5</strong> \u5F97\u51FA\u7ED3\u679C</p><ul><li>\u76F4\u63A5\uFF1A\u76F4\u63A5\u77E5\u9053\u662F\u5426\u53EF\u4EE5 <strong>\u51D1\u51FA</strong> \u6307\u5B9A\u6570\u5B57\u3002</li></ul><h3 id="_2-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u73B0" aria-hidden="true">#</a> \uFF082\uFF09\u5B9E\u73B0</h3><p>\u73B0\u5728\u9700\u8981\u6539\u53D8 <strong>\u72B6\u6001\u5B9A\u4E49</strong> \u548C <strong>\u8F6C\u79FB\u65B9\u7A0B</strong>\u3002</p>',10),w=s("ul",null,[s("li",null,[n("\u72B6\u6001\u5B9A\u4E49\uFF1A "),s("ul",null,[s("li",null,[s("code",null,"f[i - 1][j]"),n(" \u4EE3\u8868\u4E0D\u9009\u5F53\u524D\u6570\u5B57\uFF0C\u662F\u5426\u53EF\u4EE5\u51D1\u51FA\uFF1B")]),s("li",null,[s("code",null,"f[i - 1][j - nums[i]]"),n(" \u4EE3\u8868\u9009\u4E86\u5F53\u524D\u6570\u5B57\uFF0C\u662F\u5426\u53EF\u4EE5\u51D1\u51FA")])])]),s("li",null,[n("\u8F6C\u79FB\u65B9\u7A0B\uFF1A "),s("ul",null,[s("li",null,[n("\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u5B58\u653E\u7684\u662F "),s("strong",null,"\u5E03\u5C14\u503C"),n("\u3002")]),s("li",null,[n("\u7B2C 1 \u884C\u4F1A\u9047\u5230\u521D\u59CB\u5316\u95EE\u9898\uFF0C\u56E0\u4E3A\u6BCF\u4E2A\u884C\u90FD\u4F9D\u9760\u4E0A\u4E00\u884C\u7684\u6570\u636E\u3002\u6240\u4EE5\u9700\u8981\u5728\u7B2C 1 \u884C\u6DFB\u52A0 "),s("strong",null,"\u4E0D\u8003\u8651\u4EFB\u4F55\u7269\u54C1"),n(" \u7684\u60C5\u51B5\u3002")]),s("li",null,[n("\u6700\u7EC8\u7684\u8F6C\u79FB\u65B9\u7A0B\u662F "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},"["),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",null,"\u2212"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},"["),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"\u2228"),s("mi",null,"f"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},"["),s("mi",null,"j"),s("mo",null,"\u2212"),s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"m"),s("mi",null,"s"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"f[i][j] = f[i-1][j] \\vee f[i][j-nums[i]]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},"]"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2228"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2212"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mclose"},"]]")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"i")]),s("annotation",{encoding:"application/x-tex"},"i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6595em"}}),s("span",{class:"mord mathnormal"},"i")])])]),n(" \u7684\u53D6\u503C\u8303\u56F4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"\u223C"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"0 \\sim n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u223C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" \uFF1B"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"j")]),s("annotation",{encoding:"application/x-tex"},"j")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.854em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")])])]),n(" \u7684\u53D6\u503C\u8303\u56F4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"\u223C"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"},"0 \\sim target")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u223C"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"t")])])])])])])],-1),f=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">//\u300C\u7B49\u548C\u5B50\u96C6\u300D\u7684\u548C\u5FC5\u7136\u662F\u603B\u548C\u7684\u4E00\u534A</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u5E94\u4E86\u603B\u548C\u4E3A\u5947\u6570\u7684\u60C5\u51B5\uFF0C\u6CE8\u5B9A\u4E0D\u80FD\u88AB\u5206\u4E3A\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// f[i][j] \u4EE3\u8868\u8003\u8651\u524D i \u4EF6\u7269\u54C1\uFF0C\u80FD\u5426\u51D1\u51FA\u4EF7\u503C\u300C\u6070\u597D\u300D\u4E3A j \u7684\u65B9\u6848</span>
    <span class="token comment">// \u6A2A\u5750\u6807\uFF1A0 ~ n\uFF0C\u957F\u5EA6\u4E3A n + 1</span>
    <span class="token comment">// \u7EB5\u5750\u6807\uFF1A0 ~ target,\u957F\u5EA6\u4E3A target + 1</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    
    <span class="token comment">// i\u7684\u8303\u56F4\u662F0 ~ n\uFF0C\u4F46\u7B2C1\u884C\u5DF2\u521D\u59CB\u5316\uFF0C\u5FAA\u73AF\u7684\u8303\u56F4\u662F1 ~ n</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6 nums[] \u7684\u6570 i \u9700\u8981\u51CF 1\uFF0C\u56E0\u4E3A nums \u4E0B\u6807\u8303\u56F4\u662F 0 ~ n-1</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u8BE5\u7269\u54C1</span>
        <span class="token keyword">boolean</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u8BE5\u7269\u54C1</span>
        <span class="token keyword">boolean</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> t<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> no <span class="token operator">|</span> yes<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x=[o,c,i,u,r,m,k,d,h,v,g,b,y,w,f];function M(_,j){return p(),e("div",null,x)}var O=t(l,[["render",M],["__file","\u7B97\u6CD5\u4E03.html.vue"]]);export{O as default};
