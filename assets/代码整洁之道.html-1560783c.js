const e=JSON.parse('{"key":"v-0bf2dd26","path":"/%E5%AD%A6%E4%B9%A0/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.html","title":"代码整洁之道","lang":"zh-CN","frontmatter":{"description":"代码整洁之道 3.1 短小 函数应该要短小。 作者在 Kent Beck 家中拜访的时候，看到了一个有趣的Swing程序（Swing 是一个为Java设计的GUI工具包），这个程序运行时会在鼠标的位置爆发出火花特效，然后火花就掉落在窗口底部。然后肯特给我看代码的时候，我对于代码中函数的小尺寸而惊讶，因为我看惯了Swing程序中一大串的函数。里面的函数只有三行左右长，每个函数都一目了然，而且每个函数都会依序把你带到下一个函数。 像 if 语句、else 语句或者 while 语句等，其中的代码块应该只有一行，不仅保持函数短小，也能易于阅读和理解。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93.html"}],["meta",{"property":"og:title","content":"代码整洁之道"}],["meta",{"property":"og:description","content":"代码整洁之道 3.1 短小 函数应该要短小。 作者在 Kent Beck 家中拜访的时候，看到了一个有趣的Swing程序（Swing 是一个为Java设计的GUI工具包），这个程序运行时会在鼠标的位置爆发出火花特效，然后火花就掉落在窗口底部。然后肯特给我看代码的时候，我对于代码中函数的小尺寸而惊讶，因为我看惯了Swing程序中一大串的函数。里面的函数只有三行左右长，每个函数都一目了然，而且每个函数都会依序把你带到下一个函数。 像 if 语句、else 语句或者 while 语句等，其中的代码块应该只有一行，不仅保持函数短小，也能易于阅读和理解。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-27T04:14:06.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-27T04:14:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"代码整洁之道\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-27T04:14:06.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"3.1 短小","slug":"_3-1-短小","link":"#_3-1-短小","children":[]},{"level":2,"title":"3.2 只做一件事","slug":"_3-2-只做一件事","link":"#_3-2-只做一件事","children":[]},{"level":2,"title":"3.3 每个函数一个抽象层级","slug":"_3-3-每个函数一个抽象层级","link":"#_3-3-每个函数一个抽象层级","children":[]},{"level":2,"title":"3.4 switch语句","slug":"_3-4-switch语句","link":"#_3-4-switch语句","children":[]},{"level":2,"title":"3.5 使用描述性的名称","slug":"_3-5-使用描述性的名称","link":"#_3-5-使用描述性的名称","children":[]},{"level":2,"title":"3.6 函数参数","slug":"_3-6-函数参数","link":"#_3-6-函数参数","children":[{"level":3,"title":"3.6.1 一元函数","slug":"_3-6-1-一元函数","link":"#_3-6-1-一元函数","children":[]},{"level":3,"title":"3.6.3 二元函数","slug":"_3-6-3-二元函数","link":"#_3-6-3-二元函数","children":[]},{"level":3,"title":"3.6.4 三元函数","slug":"_3-6-4-三元函数","link":"#_3-6-4-三元函数","children":[]},{"level":3,"title":"3.6.5 参数对象","slug":"_3-6-5-参数对象","link":"#_3-6-5-参数对象","children":[]},{"level":3,"title":"3.6.6 参数列表","slug":"_3-6-6-参数列表","link":"#_3-6-6-参数列表","children":[]},{"level":3,"title":"3.6.7 动词与关键词","slug":"_3-6-7-动词与关键词","link":"#_3-6-7-动词与关键词","children":[]}]},{"level":2,"title":"3.7 无副作用","slug":"_3-7-无副作用","link":"#_3-7-无副作用","children":[]},{"level":2,"title":"3.8 分隔指令与询问","slug":"_3-8-分隔指令与询问","link":"#_3-8-分隔指令与询问","children":[]},{"level":2,"title":"3.9 使用异常替代返回错误码","slug":"_3-9-使用异常替代返回错误码","link":"#_3-9-使用异常替代返回错误码","children":[]},{"level":2,"title":"3.10 别重复自己","slug":"_3-10-别重复自己","link":"#_3-10-别重复自己","children":[]},{"level":2,"title":"3.11 结构化编程","slug":"_3-11-结构化编程","link":"#_3-11-结构化编程","children":[]}],"git":{"createdTime":1693109646000,"updatedTime":1693109646000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.85,"words":1456},"filePathRelative":"学习/读书笔记/代码整洁之道.md","localizedDate":"2023年8月27日","excerpt":"<h1> 代码整洁之道</h1>\\n<h2> 3.1 短小</h2>\\n<p>函数应该要短小。</p>\\n<p>作者在 Kent Beck 家中拜访的时候，看到了一个有趣的Swing程序（Swing 是一个为Java设计的GUI工具包），这个程序运行时会在鼠标的位置爆发出火花特效，然后火花就掉落在窗口底部。然后肯特给我看代码的时候，我对于代码中函数的小尺寸而惊讶，因为我看惯了Swing程序中一大串的函数。里面的函数只有三行左右长，每个函数都一目了然，而且每个函数都会依序把你带到下一个函数。</p>\\n<p>像 <code>if</code> 语句、<code>else</code> 语句或者 <code>while</code> 语句等，其中的代码块应该只有一行，不仅保持函数短小，也能易于阅读和理解。</p>","autoDesc":true}');export{e as data};
