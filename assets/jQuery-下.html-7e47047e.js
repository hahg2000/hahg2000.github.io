const e=JSON.parse('{"key":"v-6d81b937","path":"/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%8B.html","title":"jQuery-下","lang":"zh-CN","frontmatter":{"description":"jQuery-下 一、自定义jQuery插件 自定义jQuery插件就是往 jQuery 核心函数和 jQuery 对象添加自己的方法。 1.1 扩展核心函数 扩展核心函数使用的是 $.extend() 方法。 jQuery.extend( [deep ], target, object1 [, objectN ] )：将多个对象合并到一个对象里（工具方法） deep：布尔值。默认为 false，不深度复制，后面的会覆盖前面的数据。如果为 true，则为深度复制，target 的真实值将会改变，并且 target 对象里的数据不会被后面对象覆盖。 target：对象。要扩展的对象，它将接收新属性。 object1[, objectN ] ：多个对象。包含需要要合并的对象。 返回 target 对象，给 deep 参数为 false 的情况使用。 jQuery.extend( object )：为 jQuery 核心扩展方法。 object ：对象。对象名为方法名，对象值为方法体。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%8B.html"}],["meta",{"property":"og:title","content":"jQuery-下"}],["meta",{"property":"og:description","content":"jQuery-下 一、自定义jQuery插件 自定义jQuery插件就是往 jQuery 核心函数和 jQuery 对象添加自己的方法。 1.1 扩展核心函数 扩展核心函数使用的是 $.extend() 方法。 jQuery.extend( [deep ], target, object1 [, objectN ] )：将多个对象合并到一个对象里（工具方法） deep：布尔值。默认为 false，不深度复制，后面的会覆盖前面的数据。如果为 true，则为深度复制，target 的真实值将会改变，并且 target 对象里的数据不会被后面对象覆盖。 target：对象。要扩展的对象，它将接收新属性。 object1[, objectN ] ：多个对象。包含需要要合并的对象。 返回 target 对象，给 deep 参数为 false 的情况使用。 jQuery.extend( object )：为 jQuery 核心扩展方法。 object ：对象。对象名为方法名，对象值为方法体。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-12T04:21:01.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-12T04:21:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jQuery-下\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-12T04:21:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、自定义jQuery插件","slug":"一、自定义jquery插件","link":"#一、自定义jquery插件","children":[{"level":3,"title":"1.1 扩展核心函数","slug":"_1-1-扩展核心函数","link":"#_1-1-扩展核心函数","children":[]},{"level":3,"title":"1.2 扩展jQuery对象","slug":"_1-2-扩展jquery对象","link":"#_1-2-扩展jquery对象","children":[]},{"level":3,"title":"1.3 总结","slug":"_1-3-总结","link":"#_1-3-总结","children":[]}]},{"level":2,"title":"二、京东商城示例","slug":"二、京东商城示例","link":"#二、京东商城示例","children":[{"level":3,"title":"2.1 搜索栏实现","slug":"_2-1-搜索栏实现","link":"#_2-1-搜索栏实现","children":[]},{"level":3,"title":"2.2 实现移动小图片","slug":"_2-2-实现移动小图片","link":"#_2-2-实现移动小图片","children":[]},{"level":3,"title":"2.3 实现切换中图片","slug":"_2-3-实现切换中图片","link":"#_2-3-实现切换中图片","children":[]},{"level":3,"title":"2.4 实现放大图片","slug":"_2-4-实现放大图片","link":"#_2-4-实现放大图片","children":[]}]},{"level":2,"title":"完","slug":"完","link":"#完","children":[]}],"git":{"createdTime":1678594861000,"updatedTime":1678594861000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.7,"words":2011},"filePathRelative":"学习/前端/JS框架/jQuery-下.md","localizedDate":"2023年3月12日","excerpt":"<h1> jQuery-下</h1>\\n<h2> 一、自定义jQuery插件</h2>\\n<p>自定义jQuery插件就是往 jQuery 核心函数和 jQuery 对象添加自己的方法。</p>\\n<h3> 1.1 扩展核心函数</h3>\\n<p>扩展核心函数使用的是 <code>$.extend()</code> 方法。</p>\\n<ul>\\n<li><code>jQuery.extend( [deep ], target, object1 [, objectN ] )</code>：将多个对象合并到一个对象里（工具方法）\\n<ul>\\n<li><code>deep</code>：布尔值。默认为 false，不深度复制，后面的会覆盖前面的数据。如果为 true，则为深度复制，target 的真实值将会改变，并且 target 对象里的数据不会被后面对象覆盖。</li>\\n<li><code>target</code>：对象。要扩展的对象，它将接收新属性。</li>\\n<li><code>object1[, objectN ]</code> ：多个对象。包含需要要合并的对象。</li>\\n<li>返回 target 对象，给 deep 参数为 false 的情况使用。</li>\\n</ul>\\n</li>\\n<li><code>jQuery.extend( object )</code>：为 jQuery 核心扩展方法。\\n<ul>\\n<li><code>object</code> ：对象。对象名为方法名，对象值为方法体。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
