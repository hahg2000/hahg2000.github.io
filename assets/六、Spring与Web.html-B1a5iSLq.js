import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as o,f as t,a as n,b as s}from"./app-Chw2KLnS.js";const c={},l=t(`<h1 id="六、spring与web" tabindex="-1"><a class="header-anchor" href="#六、spring与web"><span>六、Spring与Web</span></a></h1><p>这一节将使用 Spring 容器与 Jsp 相结合，首先确认 JSP 的作用。</p><p>三层架构中，JSP 处于 View 层，用户都是在这层与程序交互。而 Service 层与 Dao 层，之前所学的内容都是用户接触不到的，用于处理用户在 View 层的操作，代码是放在 src 包里。</p><hr><p>我们将实现注册用户的功能：在页面输入姓名和年龄，然后插入到数据库中。</p><h2 id="_6-1-定义页面和servlet" tabindex="-1"><a class="header-anchor" href="#_6-1-定义页面和servlet"><span>6.1 定义页面和Servlet</span></a></h2><p>第一步先定义输入页面，新建 JSP 文件，命名为 index.jsp。</p><div class="language-jsp line-numbers-mode" data-ext="jsp" data-title="jsp"><pre class="language-jsp"><code>&lt;body&gt;
	&lt;form action=&quot;registerServlet&quot; method=&quot;post&quot;&gt;
		姓名：&lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;&lt;br/&gt;
		年龄：&lt;input type=&quot;text&quot; name=&quot;age&quot;/&gt;&lt;br/&gt;
		&lt;input type=&quot;submit&quot; value=&quot;注册&quot;/&gt;
	&lt;/form&gt;
&lt;/body&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二步定义 Servlet，命名为 RegisterServlet.java。</p><ul><li>第 1 行，将连接网址从 RegisterServlet 改为 registerServlet；</li><li>第 6 行，经典设置 UTF-8 格式；</li><li>第 7 和 8 行，接收 JSP 传过来的参数；</li><li>第 9 行，因为从 JSP 接收的数据都是字符串类型，所以需要将年龄转为整型；字符串转为整形有两种方法： <ul><li>Integer.valueOf() 方法，返回值为 Integer，本例用的是这个；</li><li>Integer.parseInt() 方法，返回值为 int；</li></ul></li><li>第 12 行，进行页面跳转。</li></ul>`,10),p=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@WebServlet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/registerServlet"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"RegisterServlet"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"HttpServlet"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token keyword"},"long"),s(" serialVersionUID "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1L"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"doGet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"HttpServletResponse"),s(" response"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"ServletException"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`
		request`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setCharacterEncoding"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"utf-8"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token class-name"},"String"),s(" name "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getParameter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token class-name"},"String"),s(" ageStr "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getParameter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"age"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token class-name"},"Integer"),s(" age "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"valueOf"),n("span",{class:"token punctuation"},"("),s("ageStr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token class-name"},"Student"),s(" student "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Student"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},","),s(" age"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 待补充的代码"),s(`
		request`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getRequestDispatcher"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/welcome.jsp"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forward"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},","),s(" response"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"doPost"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"HttpServletResponse"),s(" response"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"ServletException"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token comment"},"// TODO Auto-generated method stub"),s(`
		`),n("span",{class:"token function"},"doGet"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},","),s(" response"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),i=t(`<h2 id="_6-2-搭建环境" tabindex="-1"><a class="header-anchor" href="#_6-2-搭建环境"><span>6.2 搭建环境</span></a></h2><p>复制 08-spring-mybatis 中的 service 包和 dao 包，以及其全部 Jar 包。</p><p>这时思考下，我们需要操作 Service 层就需要获取到 Spring 容器。</p><p>待补充的代码如下：顺便我这里插入了输出 ApplicationContext 对象的语句。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 待补充的代码		</span>
<span class="token class-name">ApplicationContext</span> ac <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;applicationContext.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IStudentService</span> service <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IStudentService</span><span class="token punctuation">)</span> ac<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;studentService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
service<span class="token punctuation">.</span><span class="token function">addStudent</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//输出ApplicationContext对象进行测试</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ac<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-3-进行测试" tabindex="-1"><a class="header-anchor" href="#_6-3-进行测试"><span>6.3 进行测试</span></a></h2><ol><li>在文本框姓名输入 &quot; 张小三 &quot;，年龄输入 &quot; 33 &quot;；</li></ol><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test1.png" style="zoom:80%;"><ol start="2"><li>提交后反复刷新几次；</li><li>查看数据库的信息，发现刷新的几次都成功地插入；</li></ol><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test2.png" style="zoom:80%;"><ol start="4"><li>然后查看控制台输出</li></ol><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test3.png" style="zoom:80%;"><ol start="5"><li>发现其中的问题：<strong>每一次提交都创建了一个新的 Spring 容器</strong>。</li></ol><h2 id="_6-4-问题分析及解决" tabindex="-1"><a class="header-anchor" href="#_6-4-问题分析及解决"><span>6.4 问题分析及解决</span></a></h2><p>Spring 容器里我们都会存放大量的 bean 对象。从之前学过的知识可知，<span style="color:red;">每一次创建 Spring 容器时，Spring 就会将所有的 bean 全部初始化一遍。</span></p><p>这样不仅占用内存和时间，而且会将 bean 里的内容全部重置，这是我们不希望看到的。</p><p>现在我们是把获取容器放到 doPost 或者 doGet 方法里，这两个方法每一次访问 Servlet 就会执行一次；</p><hr><p><strong>问：</strong> 那把它放到 init() 方法里，init() 方法当实例化一个 Servlet 时只会执行一次，如何？</p><p><strong>答：</strong> 不行，当有多个 Servlet 时，每个都会执行不同的 init() 方法 ，就会创建多个容器。</p><hr><p>我们想要加载 Spring 容器的时间点是 <span style="color:red;">当整个 Web 应用启动时</span> 同时加载 Spring 容器。</p><p>而 Web 应用启动时，会初始化 ServletContext 对象，该对象整个 Web 应用 <strong>只会初始化一次</strong>，所以可以将 Spring 容器创建与 ServletContext 对象捆绑在一起。</p><p>正好有 ContextLoaderListener 对象，来监听 ServletContext 对象，可以准确捕获到其初始化这个时间点。创建 Spring 容器后需要放到 **域对象属性 **里（域对象属性在整个 Web 应用都能获取到）。</p><h2 id="_6-5-contextloaderlistener-源码分析" tabindex="-1"><a class="header-anchor" href="#_6-5-contextloaderlistener-源码分析"><span>6.5 ContextLoaderListener 源码分析</span></a></h2><h3 id="_6-5-1-contextloaderlistener-源码" tabindex="-1"><a class="header-anchor" href="#_6-5-1-contextloaderlistener-源码"><span>6.5.1 ContextLoaderListener 源码</span></a></h3><p><strong>ContextLoaderListener.class：</strong> 由于我们需要跟踪初始化 context 的方法即可，第 7 行调用了 initWebApplicationContext 方法，这个方法是其父类的继承下的方法，所以跟到父类的源码。</p>`,27),u=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ContextLoaderListener"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"ContextLoader"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ServletContextListener"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
	 * Initialize the root web application context.
	 */`),s(`
	`),n("span",{class:"token annotation punctuation"},"@Override"),s(`
	`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"contextInitialized"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletContextEvent"),s(" event"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token function"},"initWebApplicationContext"),n("span",{class:"token punctuation"},"("),s("event"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getServletContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),r=n("p",null,[n("strong",null,"ContextLoader.class：")],-1),k=n("ul",null,[n("li",null,"第 2 行，可知该方法先从 servletContext 域对象判断属性 “ WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE ” 是否为空，若不为空，则抛出异常。"),n("li",null,"第 35 行，将上述对象放到 servletContext 域对象属性中。")],-1),d=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"WebApplicationContext"),s(),n("span",{class:"token function"},"initWebApplicationContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletContext"),s(" servletContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("servletContext"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAttribute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IllegalStateException"),n("span",{class:"token punctuation"},"("),s(`
					`),n("span",{class:"token string"},'"Cannot initialize context because there is already a root application context present - "'),s(),n("span",{class:"token operator"},"+"),s(`
					`),n("span",{class:"token string"},'"check whether you have multiple ContextLoader* definitions in your web.xml!"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`

		`),n("span",{class:"token class-name"},"Log"),s(" logger "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"LogFactory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getLog"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ContextLoader"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		servletContext`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Initializing Spring root WebApplicationContext"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("logger"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isInfoEnabled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			logger`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Root WebApplicationContext: initialization started"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"long"),s(" startTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

		`),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token comment"},"// Store context in local instance variable, to guarantee that"),s(`
			`),n("span",{class:"token comment"},"// it is available on ServletContext shutdown."),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"createWebApplicationContext"),n("span",{class:"token punctuation"},"("),s("servletContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"ConfigurableWebApplicationContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token class-name"},"ConfigurableWebApplicationContext"),s(" cwac "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ConfigurableWebApplicationContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},";"),s(`
				`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("cwac"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isActive"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
					`),n("span",{class:"token comment"},"// The context has not yet been refreshed -> provide services such as"),s(`
					`),n("span",{class:"token comment"},"// setting the parent context, setting the application context id, etc"),s(`
					`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cwac"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getParent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
						`),n("span",{class:"token comment"},"// The context instance was injected without an explicit parent ->"),s(`
						`),n("span",{class:"token comment"},"// determine parent for root web application context, if any."),s(`
						`),n("span",{class:"token class-name"},"ApplicationContext"),s(" parent "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"loadParentContext"),n("span",{class:"token punctuation"},"("),s("servletContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
						cwac`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setParent"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
					`),n("span",{class:"token punctuation"},"}"),s(`
					`),n("span",{class:"token function"},"configureAndRefreshWebApplicationContext"),n("span",{class:"token punctuation"},"("),s("cwac"),n("span",{class:"token punctuation"},","),s(" servletContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
				`),n("span",{class:"token punctuation"},"}"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
			servletContext`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setAttribute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

			`),n("span",{class:"token class-name"},"ClassLoader"),s(" ccl "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Thread"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentThread"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContextClassLoader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ccl "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token class-name"},"ContextLoader"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClassLoader"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				currentContext `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
			`),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("ccl "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				currentContextPerThread`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("ccl"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`

			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("logger"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isDebugEnabled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				logger`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"debug"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Published root WebApplicationContext as ServletContext attribute with name ["'),s(),n("span",{class:"token operator"},"+"),s(`
						`),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'"]"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("logger"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isInfoEnabled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token keyword"},"long"),s(" elapsedTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(" startTime"),n("span",{class:"token punctuation"},";"),s(`
				logger`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Root WebApplicationContext: initialization completed in "'),s(),n("span",{class:"token operator"},"+"),s(" elapsedTime "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" ms"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`

			`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("context"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token comment"},"// ..."),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),m=t(`<h3 id="_6-5-2-注册servletcontext监听器" tabindex="-1"><a class="header-anchor" href="#_6-5-2-注册servletcontext监听器"><span>6.5.2 注册ServletContext监听器</span></a></h3><p>ServletContext 监听器需要在 web.xml 注册才可以使用。在 web.xml 添加如下代码。</p><p>注册 ServletContext 监听器完成两件工作：</p><ul><li>在 ServletContext 被创建时，创建 Spring 容器对象；</li><li>将创建好的 Spring 容器对象放入到 ServletContext 的域属性空间。</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">&gt;</span></span>
 	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.context.ContextLoaderListener<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，在 ContextLoader.class 的源码中的注释：</p><ul><li>第 7 ~ 8 行注释：说的是加载 Spring 的 applicationContext.xml 的文件时，若没有指定，则默认寻找 /WebContent/WEB-INF/applicationContext.xml 位置的文件。</li><li>第 1 行注释：说的是 web.xml 的 &lt;context-param/&gt; 标签的 contextConfigLocation 属性会和 java 代码里的常量 CONFIG_LOCATION_PARAM 链接到一起。</li></ul>`,7),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[s(),n("span",{class:"token comment"},`/* <p>Processes a {@link #CONFIG_LOCATION_PARAM "contextConfigLocation"} context-param
 * and passes its value to the context instance, parsing it into potentially multiple
 * file paths which can be separated by any number of commas and spaces, e.g.
 * "WEB-INF/applicationContext1.xml, WEB-INF/applicationContext2.xml".
 * Ant-style path patterns are supported as well, e.g.
 * "WEB-INF/*Context.xml,WEB-INF/spring*.xml" or "WEB-INF/&#42;&#42;/*Context.xml".
 * If not explicitly specified, the context implementation is supposed to use a
 * default location (with XmlWebApplicationContext: "/WEB-INF/applicationContext.xml").*/`),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=t(`<p>而源码里有这几行，这几行说明了 ContextLoader 会将 CONFIG_LOCATION_PARAM 常量的值作为 configLocation 配置文件位置。<strong>所以在 web.xml 可以配置 applicationContext.xml 的位置</strong>。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>wac<span class="token punctuation">.</span><span class="token function">setServletContext</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> configLocationParam <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token constant">CONFIG_LOCATION_PARAM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>configLocationParam <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wac<span class="token punctuation">.</span><span class="token function">setConfigLocation</span><span class="token punctuation">(</span>configLocationParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 web.xml 添加如下代码即可：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 指定Spring配置文件的位置及名称 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>classpath:applicationContext.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-3-修改获取容器的方式" tabindex="-1"><a class="header-anchor" href="#_6-5-3-修改获取容器的方式"><span>6.5.3 修改获取容器的方式</span></a></h3><p>根据上面 6.5.1 源码可知，ContextLoader 会将 Spring 存到域对象属性里，所以直接获取域对象属性即可。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> acKey <span class="token operator">=</span> <span class="token class-name">WebApplicationContext</span><span class="token punctuation">.</span><span class="token constant">ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE</span><span class="token punctuation">;</span>
<span class="token class-name">ApplicationContext</span> ac <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>acKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//插入输出ApplicationContext进行测试</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ac<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-4-运行结果" tabindex="-1"><a class="header-anchor" href="#_6-5-4-运行结果"><span>6.5.4 运行结果</span></a></h3><p>运行结果如下，可知每次运行只会使用最初创建的容器</p><figure><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-5-5-使用工具类来获取spring容器" tabindex="-1"><a class="header-anchor" href="#_6-5-5-使用工具类来获取spring容器"><span>6.5.5 使用工具类来获取Spring容器</span></a></h3><p>看到 6.5.3 代码的第一行，获取域对象属性需要输入其属性名，而属性名太长不易记忆。</p><p>所以可以使用工具类来获取 Spring 容器，不需要再记忆再一长串的字符。</p><p>改为如下代码：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/* String acKey = WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE;
ApplicationContext ac = (ApplicationContext) this.getServletContext().getAttribute(acKey);*/</span>
<span class="token class-name">WebApplicationContext</span> ac <span class="token operator">=</span> <span class="token class-name">WebApplicationContextUtils</span><span class="token punctuation">.</span><span class="token function">getRequiredWebApplicationContext</span><span class="token punctuation">(</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们去看下源码来探究下其是如何从域对象获取到需要的属性的：</p><ul><li>第 1 ~ 7 行是 getRequiredWebApplicationContext 方法，其里面的代码将 ServletContext 对象传入到 getWebApplicationContext 方法里。</li><li>第 9 ~ 11 行是 getWebApplicationContext 方法，其里面调用了重载的另一个方法，其中一个参数是我们所需要输入的域对象的属性名，<strong>这里就帮我们输入了属性名</strong>。</li><li>第 13 ~ 32 行是被调用的方法，第 15 行利用传进来的属性名来调用 getAttribute 方法获取到 Spring 容器对象。</li></ul>`,17),g=n("div",{class:"language-java line-numbers-mode","data-ext":"java","data-title":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},"WebApplicationContext"),s(),n("span",{class:"token function"},"getRequiredWebApplicationContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletContext"),s(" sc"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IllegalStateException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"WebApplicationContext"),s(" wac "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"getWebApplicationContext"),n("span",{class:"token punctuation"},"("),s("sc"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("wac "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IllegalStateException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"No WebApplicationContext found: no ContextLoaderListener registered?"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" wac"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},"WebApplicationContext"),s(),n("span",{class:"token function"},"getWebApplicationContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletContext"),s(" sc"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"getWebApplicationContext"),n("span",{class:"token punctuation"},"("),s("sc"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token class-name"},"WebApplicationContext"),s(),n("span",{class:"token function"},"getWebApplicationContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletContext"),s(" sc"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"String"),s(" attrName"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"Assert"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"notNull"),n("span",{class:"token punctuation"},"("),s("sc"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"ServletContext must not be null"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Object"),s(" attr "),n("span",{class:"token operator"},"="),s(" sc"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAttribute"),n("span",{class:"token punctuation"},"("),s("attrName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("attr "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("attr "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},")"),s(" attr"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("attr "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"Error"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Error"),n("span",{class:"token punctuation"},")"),s(" attr"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("attr "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"Exception"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IllegalStateException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),n("span",{class:"token punctuation"},")"),s(" attr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),n("span",{class:"token punctuation"},"("),s("attr "),n("span",{class:"token keyword"},"instanceof"),s(),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"IllegalStateException"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Context attribute is not of type WebApplicationContext: "'),s(),n("span",{class:"token operator"},"+"),s(" attr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"WebApplicationContext"),n("span",{class:"token punctuation"},")"),s(" attr"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=[l,p,i,u,r,k,d,m,b,v,g];function x(w,C){return e(),o("div",null,h)}const f=a(c,[["render",x],["__file","六、Spring与Web.html.vue"]]),_=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0/%E5%90%8E%E7%AB%AF/SSM%E6%A1%86%E6%9E%B6/Spring4/%E5%85%AD%E3%80%81Spring%E4%B8%8EWeb.html","title":"六、Spring与Web","lang":"zh-CN","frontmatter":{"description":"六、Spring与Web 这一节将使用 Spring 容器与 Jsp 相结合，首先确认 JSP 的作用。 三层架构中，JSP 处于 View 层，用户都是在这层与程序交互。而 Service 层与 Dao 层，之前所学的内容都是用户接触不到的，用于处理用户在 View 层的操作，代码是放在 src 包里。 我们将实现注册用户的功能：在页面输入姓名和年龄...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%AD%A6%E4%B9%A0/%E5%90%8E%E7%AB%AF/SSM%E6%A1%86%E6%9E%B6/Spring4/%E5%85%AD%E3%80%81Spring%E4%B8%8EWeb.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"六、Spring与Web"}],["meta",{"property":"og:description","content":"六、Spring与Web 这一节将使用 Spring 容器与 Jsp 相结合，首先确认 JSP 的作用。 三层架构中，JSP 处于 View 层，用户都是在这层与程序交互。而 Service 层与 Dao 层，之前所学的内容都是用户接触不到的，用于处理用户在 View 层的操作，代码是放在 src 包里。 我们将实现注册用户的功能：在页面输入姓名和年龄..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test4.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-24T04:33:47.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"六、Spring与Web"}],["meta",{"property":"article:author","content":"hahg"}],["meta",{"property":"article:modified_time","content":"2024-02-24T04:33:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"六、Spring与Web\\",\\"image\\":[\\"https://raw.githubusercontent.com/hahg2000/SSMPic/main/spring-web-test4.png\\"],\\"dateModified\\":\\"2024-02-24T04:33:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hahg\\"}]}"]]},"headers":[{"level":2,"title":"6.1 定义页面和Servlet","slug":"_6-1-定义页面和servlet","link":"#_6-1-定义页面和servlet","children":[]},{"level":2,"title":"6.2 搭建环境","slug":"_6-2-搭建环境","link":"#_6-2-搭建环境","children":[]},{"level":2,"title":"6.3 进行测试","slug":"_6-3-进行测试","link":"#_6-3-进行测试","children":[]},{"level":2,"title":"6.4 问题分析及解决","slug":"_6-4-问题分析及解决","link":"#_6-4-问题分析及解决","children":[]},{"level":2,"title":"6.5 ContextLoaderListener 源码分析","slug":"_6-5-contextloaderlistener-源码分析","link":"#_6-5-contextloaderlistener-源码分析","children":[{"level":3,"title":"6.5.1 ContextLoaderListener 源码","slug":"_6-5-1-contextloaderlistener-源码","link":"#_6-5-1-contextloaderlistener-源码","children":[]},{"level":3,"title":"6.5.2 注册ServletContext监听器","slug":"_6-5-2-注册servletcontext监听器","link":"#_6-5-2-注册servletcontext监听器","children":[]},{"level":3,"title":"6.5.3 修改获取容器的方式","slug":"_6-5-3-修改获取容器的方式","link":"#_6-5-3-修改获取容器的方式","children":[]},{"level":3,"title":"6.5.4 运行结果","slug":"_6-5-4-运行结果","link":"#_6-5-4-运行结果","children":[]},{"level":3,"title":"6.5.5 使用工具类来获取Spring容器","slug":"_6-5-5-使用工具类来获取spring容器","link":"#_6-5-5-使用工具类来获取spring容器","children":[]}]}],"git":{"createdTime":1708749227000,"updatedTime":1708749227000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.89,"words":2067},"filePathRelative":"学习/后端/SSM框架/Spring4/六、Spring与Web.md","localizedDate":"2024年2月24日","excerpt":"\\n<p>这一节将使用 Spring 容器与 Jsp 相结合，首先确认 JSP 的作用。</p>\\n<p>三层架构中，JSP 处于 View 层，用户都是在这层与程序交互。而 Service 层与 Dao 层，之前所学的内容都是用户接触不到的，用于处理用户在 View 层的操作，代码是放在 src 包里。</p>\\n<hr>\\n<p>我们将实现注册用户的功能：在页面输入姓名和年龄，然后插入到数据库中。</p>\\n<h2>6.1 定义页面和Servlet</h2>\\n<p>第一步先定义输入页面，新建 JSP 文件，命名为 index.jsp。</p>\\n<div class=\\"language-jsp\\" data-ext=\\"jsp\\" data-title=\\"jsp\\"><pre class=\\"language-jsp\\"><code>&lt;body&gt;\\n\\t&lt;form action=\\"registerServlet\\" method=\\"post\\"&gt;\\n\\t\\t姓名：&lt;input type=\\"text\\" name=\\"name\\"/&gt;&lt;br/&gt;\\n\\t\\t年龄：&lt;input type=\\"text\\" name=\\"age\\"/&gt;&lt;br/&gt;\\n\\t\\t&lt;input type=\\"submit\\" value=\\"注册\\"/&gt;\\n\\t&lt;/form&gt;\\n&lt;/body&gt;\\n</code></pre></div>","autoDesc":true}');export{f as comp,_ as data};
