const l=JSON.parse('{"key":"v-82ff83cc","path":"/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/4.html","title":"第 4 章：函数式编程","lang":"zh-CN","frontmatter":{"description":"第 4 章：函数式编程 使用 Haskell 思考 初学 Haskell 的人需要迈过两个难关： 首先，我们需要将自己的编程观念从命令式语言转换到函数式语言上面来。这样做的原因并不是因为命令式语言不好，而是因为比起命令式语言，函数式语言更胜一筹。 其次，我们需要熟悉 Haskell 的标准库。和其他语言一样，函数库可以像杠杆那样，极大地提升我们解决问题的能力。因为 Haskell 是一门层次非常高的语言，而 Haskell 的标准库也趋向于处理高层次的抽象，因此对 Haskell 标准库的学习也稍微更难一些，但这些努力最终都会物有所值。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/4.html"}],["meta",{"property":"og:title","content":"第 4 章：函数式编程"}],["meta",{"property":"og:description","content":"第 4 章：函数式编程 使用 Haskell 思考 初学 Haskell 的人需要迈过两个难关： 首先，我们需要将自己的编程观念从命令式语言转换到函数式语言上面来。这样做的原因并不是因为命令式语言不好，而是因为比起命令式语言，函数式语言更胜一筹。 其次，我们需要熟悉 Haskell 的标准库。和其他语言一样，函数库可以像杠杆那样，极大地提升我们解决问题的能力。因为 Haskell 是一门层次非常高的语言，而 Haskell 的标准库也趋向于处理高层次的抽象，因此对 Haskell 标准库的学习也稍微更难一些，但这些努力最终都会物有所值。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-22T03:39:13.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-22T03:39:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第 4 章：函数式编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-22T03:39:13.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"使用 Haskell 思考","slug":"使用-haskell-思考","link":"#使用-haskell-思考","children":[]},{"level":2,"title":"一个简单的命令行程序","slug":"一个简单的命令行程序","link":"#一个简单的命令行程序","children":[]},{"level":2,"title":"热身： 方便地分离多行文本","slug":"热身-方便地分离多行文本","link":"#热身-方便地分离多行文本","children":[{"level":3,"title":"一个行终止转换程序","slug":"一个行终止转换程序","link":"#一个行终止转换程序","children":[]}]},{"level":2,"title":"中缀函数","slug":"中缀函数","link":"#中缀函数","children":[]},{"level":2,"title":"和列表打交道","slug":"和列表打交道","link":"#和列表打交道","children":[{"level":3,"title":"基本的列表操作","slug":"基本的列表操作","link":"#基本的列表操作","children":[]},{"level":3,"title":"安全和明智地跟会崩溃的函数打交道","slug":"安全和明智地跟会崩溃的函数打交道","link":"#安全和明智地跟会崩溃的函数打交道","children":[]},{"level":3,"title":"部分函数和全函数","slug":"部分函数和全函数","link":"#部分函数和全函数","children":[]},{"level":3,"title":"更多简单列表操作","slug":"更多简单列表操作","link":"#更多简单列表操作","children":[]},{"level":3,"title":"产生子列表","slug":"产生子列表","link":"#产生子列表","children":[]},{"level":3,"title":"搜索列表","slug":"搜索列表","link":"#搜索列表","children":[]},{"level":3,"title":"一次性处理多个列表","slug":"一次性处理多个列表","link":"#一次性处理多个列表","children":[]},{"level":3,"title":"特殊的字符串处理函数","slug":"特殊的字符串处理函数","link":"#特殊的字符串处理函数","children":[]},{"level":3,"title":"练习题","slug":"练习题","link":"#练习题","children":[]}]},{"level":2,"title":"循环的表示","slug":"循环的表示","link":"#循环的表示","children":[{"level":3,"title":"显式递归","slug":"显式递归","link":"#显式递归","children":[]},{"level":3,"title":"对列表元素进行转换","slug":"对列表元素进行转换","link":"#对列表元素进行转换","children":[]},{"level":3,"title":"列表映射","slug":"列表映射","link":"#列表映射","children":[]},{"level":3,"title":"筛选列表元素","slug":"筛选列表元素","link":"#筛选列表元素","children":[]},{"level":3,"title":"处理集合并得出结果","slug":"处理集合并得出结果","link":"#处理集合并得出结果","children":[]},{"level":3,"title":"左折叠","slug":"左折叠","link":"#左折叠","children":[]},{"level":3,"title":"为什么使用 fold 、 map 和 filter ？","slug":"为什么使用-fold-、-map-和-filter","link":"#为什么使用-fold-、-map-和-filter","children":[]},{"level":3,"title":"从右边开始折叠","slug":"从右边开始折叠","link":"#从右边开始折叠","children":[]},{"level":3,"title":"左折叠、惰性和内存泄漏","slug":"左折叠、惰性和内存泄漏","link":"#左折叠、惰性和内存泄漏","children":[]},{"level":3,"title":"延伸阅读","slug":"延伸阅读","link":"#延伸阅读","children":[]}]},{"level":2,"title":"匿名（lambda）函数","slug":"anonymous-lambda-functions","link":"#anonymous-lambda-functions","children":[]},{"level":2,"title":"部分函数应用和柯里化","slug":"部分函数应用和柯里化","link":"#部分函数应用和柯里化","children":[{"level":3,"title":"节","slug":"sections","link":"#sections","children":[]}]},{"level":2,"title":"As-模式","slug":"as-模式","link":"#as-模式","children":[]},{"level":2,"title":"通过组合函数来进行代码复用","slug":"通过组合函数来进行代码复用","link":"#通过组合函数来进行代码复用","children":[]},{"level":2,"title":"编写可读代码的提示","slug":"编写可读代码的提示","link":"#编写可读代码的提示","children":[]},{"level":2,"title":"库函数比尾递归更好的原因很简单：尾递归和命令式语言里的 loop 有同样的问题","slug":"库函数比尾递归更好的原因很简单-尾递归和命令式语言里的-loop-有同样的问题","link":"#库函数比尾递归更好的原因很简单-尾递归和命令式语言里的-loop-有同样的问题","children":[]},{"level":2,"title":"内存泄漏和严格求值","slug":"内存泄漏和严格求值","link":"#内存泄漏和严格求值","children":[{"level":3,"title":"通过 seq 函数避免内存泄漏","slug":"通过-seq-函数避免内存泄漏","link":"#通过-seq-函数避免内存泄漏","children":[]},{"level":3,"title":"seq 的用法","slug":"seq-的用法","link":"#seq-的用法","children":[]}]}],"git":{"createdTime":1689997153000,"updatedTime":1689997153000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":63.79,"words":19138},"filePathRelative":"学习/Haskell中文文档/4.md","localizedDate":"2023年7月22日","excerpt":"<h1> 第 4 章：函数式编程</h1>\\n<h2> 使用 Haskell 思考</h2>\\n<p>初学 Haskell 的人需要迈过两个难关：</p>\\n<p>首先，我们需要将自己的编程观念从命令式语言转换到函数式语言上面来。这样做的原因并不是因为命令式语言不好，而是因为比起命令式语言，函数式语言更胜一筹。</p>\\n<p>其次，我们需要熟悉 Haskell\\n的标准库。和其他语言一样，函数库可以像杠杆那样，极大地提升我们解决问题的能力。因为\\nHaskell 是一门层次非常高的语言，而 Haskell\\n的标准库也趋向于处理高层次的抽象，因此对 Haskell\\n标准库的学习也稍微更难一些，但这些努力最终都会物有所值。</p>","autoDesc":true}');export{l as data};
