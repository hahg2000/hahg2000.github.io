const l=JSON.parse('{"key":"v-8d3c9786","path":"/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/1.html","title":"第 1 章：入门","lang":"zh-CN","frontmatter":{"description":"第 1 章：入门 Haskell编程环境 在本书的前面一些章节里，我们有时候会以限制性的、简单的形式来介绍一些概念。 由于Haskell是一本比较深的语言，所以一次性介绍某个主题的所有特性会令人难以接受。 当基础巩固后，我们就会进行更加深入的学习。 在Haskell语言的众多实现中，有两个被广泛应用，Hugs和GHC。其中Hugs是一个解释器，主要用于教学。而GHC(Glasgow Haskell Compiler)更加注重实践，它编译成本地代码，支持并行执行，并带有更好的性能分析工具和调试工具。由于这些因素，在本书中我们将采用GHC。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/1.html"}],["meta",{"property":"og:title","content":"第 1 章：入门"}],["meta",{"property":"og:description","content":"第 1 章：入门 Haskell编程环境 在本书的前面一些章节里，我们有时候会以限制性的、简单的形式来介绍一些概念。 由于Haskell是一本比较深的语言，所以一次性介绍某个主题的所有特性会令人难以接受。 当基础巩固后，我们就会进行更加深入的学习。 在Haskell语言的众多实现中，有两个被广泛应用，Hugs和GHC。其中Hugs是一个解释器，主要用于教学。而GHC(Glasgow Haskell Compiler)更加注重实践，它编译成本地代码，支持并行执行，并带有更好的性能分析工具和调试工具。由于这些因素，在本书中我们将采用GHC。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-23T03:26:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-23T03:26:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第 1 章：入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-23T03:26:40.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Haskell编程环境","slug":"haskell编程环境","link":"#haskell编程环境","children":[]},{"level":2,"title":"初识解释器ghci","slug":"初识解释器ghci","link":"#初识解释器ghci","children":[]},{"level":2,"title":"基本交互: 把ghci当作一个计算器","slug":"基本交互-把ghci当作一个计算器","link":"#基本交互-把ghci当作一个计算器","children":[{"level":3,"title":"基本算术运算","slug":"基本算术运算","link":"#基本算术运算","children":[]},{"level":3,"title":"算术奇事(quirk),负数的表示","slug":"算术奇事-quirk-负数的表示","link":"#算术奇事-quirk-负数的表示","children":[]},{"level":3,"title":"布尔逻辑，运算符以及值比较","slug":"布尔逻辑-运算符以及值比较","link":"#布尔逻辑-运算符以及值比较","children":[]},{"level":3,"title":"运算符优先级以及结合性","slug":"运算符优先级以及结合性","link":"#运算符优先级以及结合性","children":[]},{"level":3,"title":"未定义的变量以及定义变量","slug":"未定义的变量以及定义变量","link":"#未定义的变量以及定义变量","children":[]},{"level":3,"title":"处理优先级以及结合性规则","slug":"处理优先级以及结合性规则","link":"#处理优先级以及结合性规则","children":[]}]},{"level":2,"title":"ghci里的命令行编辑","slug":"ghci里的命令行编辑","link":"#ghci里的命令行编辑","children":[]},{"level":2,"title":"列表(Lists)","slug":"列表-lists","link":"#列表-lists","children":[{"level":3,"title":"列表的操作符","slug":"列表的操作符","link":"#列表的操作符","children":[]}]},{"level":2,"title":"字符串和字符","slug":"字符串和字符","link":"#字符串和字符","children":[]},{"level":2,"title":"初识类型","slug":"初识类型","link":"#初识类型","children":[]},{"level":2,"title":"行计数程序","slug":"行计数程序","link":"#行计数程序","children":[]},{"level":2,"title":"练习","slug":"练习","link":"#练习","children":[]}],"git":{"createdTime":1689997153000,"updatedTime":1690082800000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":22.51,"words":6753},"filePathRelative":"学习/Haskell中文文档/1.md","localizedDate":"2023年7月22日","excerpt":"<h1> 第 1 章：入门</h1>\\n<h2> Haskell编程环境</h2>\\n<p>在本书的前面一些章节里，我们有时候会以限制性的、简单的形式来介绍一些概念。\\n由于Haskell是一本比较深的语言，所以一次性介绍某个主题的所有特性会令人难以接受。\\n当基础巩固后，我们就会进行更加深入的学习。</p>\\n<p>在Haskell语言的众多实现中，有两个被广泛应用，Hugs和GHC。其中Hugs是一个解释器，主要用于教学。而GHC(Glasgow\\nHaskell\\nCompiler)更加注重实践，它编译成本地代码，支持并行执行，并带有更好的性能分析工具和调试工具。由于这些因素，在本书中我们将采用GHC。</p>","autoDesc":true}');export{l as data};
