import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,e as a,a as n,d as s}from"./app.e51d643c.js";const o={},l=a(`<h1 id="\u7B97\u6CD5\u4E94-8\u670828" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u4E94-8\u670828" aria-hidden="true">#</a> \u7B97\u6CD5\u4E94-8\u670828</h1><h2 id="\u4E09\u5341\u4E03\u3001\u7EDF\u8BA1\u6240\u6709\u53EF\u884C\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5341\u4E03\u3001\u7EDF\u8BA1\u6240\u6709\u53EF\u884C\u8DEF\u5F84" aria-hidden="true">#</a> \u4E09\u5341\u4E03\u3001\u7EDF\u8BA1\u6240\u6709\u53EF\u884C\u8DEF\u5F84</h2><p>\u539F\u9898\u94FE\u63A5\uFF1A</p><p>https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485297&amp;idx=1&amp;sn=5ee4ce31c42d368af0653f60aa263c82&amp;chksm=fd9cac6ecaeb25787e6da90423c5467e1679da0a8aaf1a3445475199a8f148d8629e851fea57&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u7ED9\u4F60\u4E00\u4E2A \u4E92\u4E0D\u76F8\u540C \u7684\u6574\u6570\u6570\u7EC4\uFF0C\u5176\u4E2D <code>locations[i]</code> \u8868\u793A\u7B2C i \u4E2A\u57CE\u5E02\u7684\u4F4D\u7F6E\u3002\u540C\u65F6\u7ED9\u4F60 <code>start</code>\uFF0C<code>finish</code> \u548C <code>fuel</code> \u5206\u522B\u8868\u793A\u51FA\u53D1\u57CE\u5E02\u3001\u76EE\u7684\u5730\u57CE\u5E02\u548C\u4F60\u521D\u59CB\u62E5\u6709\u7684\u6C7D\u6CB9\u603B\u91CF</p><p>\u6BCF\u4E00\u6B65\u4E2D\uFF0C\u5982\u679C\u4F60\u5728\u57CE\u5E02 i \uFF0C\u4F60\u53EF\u4EE5\u9009\u62E9\u4EFB\u610F\u4E00\u4E2A\u57CE\u5E02 j \uFF0C\u6EE1\u8DB3 <code>j != i</code> \u4E14 <code>0 &lt;= j &lt; locations.length</code> \uFF0C\u5E76\u79FB\u52A8\u5230\u57CE\u5E02 j \u3002\u4ECE\u57CE\u5E02 i \u79FB\u52A8\u5230 j \u6D88\u8017\u7684\u6C7D\u6CB9\u91CF\u4E3A <code>|locations[i] - locations[j]|</code></p><p>\u8BF7\u4F60\u8FD4\u56DE\u4ECE start \u5230 finish \u6240\u6709\u53EF\u80FD\u8DEF\u5F84\u7684\u6570\u76EE\u3002</p><p>\u7531\u4E8E\u7B54\u6848\u53EF\u80FD\u5F88\u5927\uFF0C \u8BF7\u5C06\u5B83\u5BF9 10<sup>9</sup> + 7 \u53D6\u4F59\u540E\u8FD4\u56DE</p><p>\u793A\u4F8B 1\uFF1A</p><ul><li>\u8F93\u5165\uFF1Alocations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5</li><li>\u8F93\u51FA\uFF1A4</li><li>\u89E3\u91CA\uFF1A\u4EE5\u4E0B\u4E3A\u6240\u6709\u53EF\u80FD\u8DEF\u5F84\uFF0C\u6BCF\u4E00\u6761\u90FD\u7528\u4E86 5 \u5355\u4F4D\u7684\u6C7D\u6CB9\uFF1A <ul><li>1 -&gt; 3 \uFF083 -&gt; 8\uFF09</li><li>1 -&gt; 2 -&gt; 3 \uFF083 -&gt; 6 -&gt; 8 \uFF09</li><li>1 -&gt; 4 -&gt; 3 \uFF083 -&gt; 4 -&gt; 8 \uFF09</li><li>1 -&gt; 4 -&gt; 2 -&gt; 3 \uFF083 -&gt; 4 -&gt; 6 -&gt; 8 \uFF09</li></ul></li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>2 &lt;= locations.length &lt;= 100</li><li>1 &lt;= locations[i] &lt;= 10<sup>9</sup></li><li>\u6240\u6709 locations \u4E2D\u7684\u6574\u6570 \u4E92\u4E0D\u76F8\u540C</li><li>0 &lt;= start, finish &lt; locations.length</li><li>1 &lt;= fuel &lt;= 200</li></ul></blockquote><h3 id="_1-\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_1-\u601D\u8DEF" aria-hidden="true">#</a> \uFF081\uFF09\u601D\u8DEF</h3><p>\u9996\u5148\u7406\u89E3\u9898\u610F\uFF1A\u7ED9\u51FA\u8D77\u59CB\u57CE\u5E02\u548C\u7EC8\u70B9\u57CE\u5E02\uFF0C\u7136\u540E\u7ED9\u51FA\u4E00\u5B9A\u7684\u6CB9\u91CF\uFF0C\u8BA1\u7B97\u51FA\u6709\u51E0\u6761\u8DEF\u5F84\u3002</p><p>\u524D\u9762\u51E0\u5929\u7684\u9898\u76EE\uFF0C\u672C\u8D28\u4E0A\u5BF9\u5E94\u7684\u6A21\u578B\u5176\u5B9E\u662F\uFF1A<strong>\u7279\u5B9A\u300C\u8D77\u70B9\u300D\uFF0C\u660E\u786E\u4E14\u6709\u9650\u7684\u300C\u79FB\u52A8\u65B9\u5411\u300D\uFF08\u8F6C\u79FB\u72B6\u6001\uFF09\uFF0C\u6C42\u89E3\u6240\u6709\u72B6\u6001\u4E2D\u7684\u6700\u4F18\u503C\u3002</strong></p><p>\u4F46\u672C\u9898\u53EA\u662F\u544A\u8BC9\u4E86\u6211\u4EEC\u79FB\u52A8\u89C4\u5219\uFF0C\u6CA1\u6709\u544A\u8BC9\u6211\u4EEC\u5177\u4F53\u8BE5\u5982\u4F55\u79FB\u52A8\u3002<strong>\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\uFF0C\u4F60\u53EF\u4EE5\u5C06\u6B64\u7C7B\u95EE\u9898\u7406\u89E3\u6210\u53E6\u5916\u4E00\u79CD\u3010\u8DEF\u5F84\u95EE\u9898\u3011\u3002</strong></p><p>\u8FD9\u9053\u9898\u7684\u6570\u636E\u8303\u56F4\u4E5F\u53EA\u6709 10<sup>2</sup>\uFF0C\u5F88\u591A\u540C\u5B66\u4F1A\u60F3\u5230 DFS\u3002\u4F46\u662F\u4E4B\u524D\u8BB2\u8FC7\uFF0C\u5355\u7EAF\u7684 DFS \u7531\u4E8E\u662F\u6307\u6570\u7EA7\u522B\u7684\u590D\u6742\u5EA6\uFF0C\u901A\u5E38\u6570\u636E\u8303\u56F4\u4E0D\u51FA\u8D85\u8FC7 30\u3002\u4E0D\u8FC7\uFF0C\u300C\u8BB0\u5FC6\u5316\u641C\u7D22\u300D\u53EF\u4EE5\u7B26\u5408\u9898\u76EE\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002</p><h3 id="_2-\u627E\u9012\u5F52\u51FA\u53E3" tabindex="-1"><a class="header-anchor" href="#_2-\u627E\u9012\u5F52\u51FA\u53E3" aria-hidden="true">#</a> \uFF082\uFF09\u627E\u9012\u5F52\u51FA\u53E3</h3><p>\u6211\u4EEC\u77E5\u9053\uFF0C\u5982\u679C\u8981\u5B9E\u73B0 DFS \u7684\u8BDD\uFF0C\u901A\u5E38\u6709\u4EE5\u4E0B\u51E0\u4E2A\u6B65\u9AA4\uFF1A</p><ol><li>\u8BBE\u8BA1\u597D\u9012\u5F52\u51FD\u6570\u7684\u300C\u5165\u53C2\u300D\u548C\u300C\u51FA\u53C2\u300D</li><li><strong>\u8BBE\u7F6E\u597D\u9012\u5F52\u51FD\u6570\u7684\u51FA\u53E3\uFF08Base Case\uFF09</strong></li><li>\u7F16\u5199\u300C\u6700\u5C0F\u5355\u5143\u300D\u5904\u7406\u903B\u8F91</li></ol><p>\u3010\u5BF9\u4E8E\u5927\u591A\u6570\u7684 DFS \u6765\u8BF4\uFF0C\u7B2C 1 \u6B65\u548C\u7B2C 3 \u6B65\u90FD\u5F88\u597D\u5B9E\u73B0\uFF0C<strong>\u800C\u627E Base Case \u901A\u5E38\u662F\u4E09\u90E8\u66F2\u4E2D\u6700\u96BE\u7684</strong>\u3002\u3011</p><p>\u4EE5\u672C\u9898\u4E3A\u4F8B\uFF0C\u6211\u4EEC\u6765\u5256\u6790\u4E00\u4E0B\u300C\u8BE5\u5982\u4F55\u627E Base Case\u300D\u3002</p><ul><li><p><strong>\u9996\u5148\u8981\u660E\u786E\uFF0C\u6240\u8C13\u7684\u627E Base Case\uFF0C\u5176\u5B9E\u662F\u5728\u786E\u5B9A\u4EC0\u4E48\u6837\u7684\u60C5\u51B5\u4E0B\uFF0C\u7B97\u4E00\u6B21\u6709\u6548/\u65E0\u6548\u3002</strong></p><ul><li>\u5BF9\u4E8E\u672C\u9898\uFF0C\u627E Base Case \u5176\u5B9E\u5C31\u662F\u5728\u786E\u5B9A\uFF1A\u4EC0\u4E48\u6837\u7684\u60C5\u51B5\u4E0B\uFF0C\u7B97\u662F 0 \u6761\u8DEF\u5F84\uFF1B\u4EC0\u4E48\u6837\u7684\u60C5\u51B5\u4E0B\uFF0C\u7B97\u662F 1 \u6761\u8DEF\u5F84\u3002</li></ul></li><li><p><strong>\u7136\u540E\u518D\u5728 DFS \u8FC7\u7A0B\u4E2D\uFF0C\u4E0D\u65AD\u7684\u7D2F\u52A0\u6709\u6548\u60C5\u51B5\uFF08\u7B97\u4F5C\u8DEF\u5F84\u6570\u91CF\u4E3A 1\uFF09\u7684\u4E2A\u6570\u4F5C\u4E3A\u7B54\u6848\u3002</strong></p><ul><li>\u8FD9\u662F DFS \u7684\u672C\u8D28\uFF0C\u4E5F\u662F\u627E Base Case \u7684\u601D\u8003\u8FC7\u7A0B\u3002</li><li>\u56DE\u5230\u672C\u9898\uFF0C\u5BF9\u4E8E <strong>\u6709\u6548\u60C5\u51B5</strong> \u7684\u786E\u7ACB\uFF0C\u5341\u5206\u7B80\u5355\u76F4\u63A5\uFF0C\u5982\u679C\u6211\u4EEC\u5F53\u524D\u6240\u5728\u7684\u4F4D\u7F6E\u5C31\u662F\u76EE\u7684\u4F4D\u7F6E <strong>\u4E14\u4E0D\u80FD\u5230\u4EFB\u4F55\u4E00\u4E2A\u5730\u65B9</strong> \u7684\u8BDD\uFF0C\u90A3\u5C31\u7B97\u6210\u662F\u4E00\u6761\u6709\u6548\u8DEF\u5F84\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u8DEF\u5F84\u6570\u91CF\u8FDB\u884C +1\u3002</li></ul></li><li><p>\u90A3\u4E48\u5982\u4F55\u786E\u7ACB <strong>\u65E0\u6548\u60C5\u51B5</strong> \u5462\uFF1F</p><ul><li>\u4E00\u4E2A\u76F4\u89C2\u7684\u611F\u89C9\u662F <strong>\u5F53\u6CB9\u91CF\u6D88\u8017\u5B8C\uFF0C\u6240\u5728\u4F4D\u7F6E\u53C8\u4E0D\u5728\u6700\u7EC8\u4F4D\u7F6E \uFF0C\u90A3\u4E48\u5C31\u7B97\u8D70\u5230\u5934\u4E86\uFF0C\u7B97\u662F\u4E00\u6B21\u300C\u65E0\u6548\u60C5\u51B5\u300D\uFF0C\u53EF\u4EE5\u7EC8\u6B62\u9012\u5F52\u3002</strong></li></ul></li></ul><p>\u903B\u8F91\u4E0A\u8FD9\u6CA1\u6709\u9519\uFF0C\u4F46\u662F\u5B58\u5728\u6CB9\u91CF\u59CB\u7EC8\u65E0\u6CD5\u4E3A\u96F6\u7684\u60C5\u51B5\u3002</p><p>\u8003\u8651\u4EE5\u4E0B\u6837\u4F8B\u6570\u636E\uFF1A</p><ul><li><p>locations = [0,2,2,2], start = 0, finish = 3, fuel = 1</p></li><li><p>\u6211\u4EEC\u5F53\u524D\u4F4D\u7F6E\u5728 0\uFF0C\u60F3\u8981\u5230\u8FBE 3\uFF0C\u4F46\u662F\u6CB9\u91CF\u4E3A 1\uFF0C\u65E0\u6CD5\u79FB\u52A8\u5230\u4EFB\u4F55\u4F4D\u7F6E\u3002</p></li></ul><p>\u56E0\u6B64\u8FD8\u8981\u589E\u52A0\u4E00\u4E2A\u9650\u5236\u6761\u4EF6\uFF1A<strong>\u6CB9\u91CF\u4E0D\u4E3A 0\uFF0C\u4F46\u65E0\u6CD5\u518D\u79FB\u52A8\u5230\u4EFB\u4F55\u4F4D\u7F6E\uFF0C\u4E14\u4E0D\u5728\u76EE\u7684\u4F4D\u7F6E\uFF0C\u4E5F\u7B97\u662F\u4E00\u6B21\u300C\u65E0\u6548\u60C5\u51B5\u300D\uFF0C\u53EF\u4EE5\u7EC8\u6B62\u9012\u5F52\u3002</strong></p><h3 id="_3-\u8BB0\u5FC6\u5316\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#_3-\u8BB0\u5FC6\u5316\u641C\u7D22" aria-hidden="true">#</a> \uFF083\uFF09\u8BB0\u5FC6\u5316\u641C\u7D22</h3><p>\u6211\u4EEC\u5C06\u4F7F\u7528\u7F13\u5B58\u6765\u8BB0\u5FC6\u4E4B\u524D\u641C\u7D22\u8FC7\u7684\u8DEF\u5F84\u3002</p><ul><li>\u7F13\u5B58\u5668\u7684\u8BBE\u8BA1\u4E5F\u5341\u5206\u7B80\u5355\uFF0C\u4F7F\u7528\u4E8C\u7EF4\u6570\u7EC4 <code>cache[n][fuel+1]</code> \u8FDB\u884C\u8BB0\u5F55\u5373\u53EF\u3002\uFF08fuel + 1 \u7684\u957F\u5EA6\u662F\u4E3A\u4E86\u80FD\u53D6\u5230 <code>cache[x][fuel]</code> \uFF09</li><li>\u6211\u4EEC\u7528 <code>cache[i][fuel]</code> \u4EE3\u8868\u4ECE\u4F4D\u7F6E i \u51FA\u53D1\uFF0C\u5F53\u524D\u5269\u4F59\u7684\u6CB9\u91CF\u4E3A fuel \u7684\u524D\u63D0\u4E0B\uFF0C<strong>\u5230\u8FBE\u76EE\u6807\u4F4D\u7F6E</strong> \u7684\u300C\u8DEF\u5F84\u6570\u91CF\u300D\u3002</li><li>\u4E4B\u6240\u4EE5\u80FD\u91C7\u53D6\u300C\u7F13\u5B58\u4E2D\u95F4\u7ED3\u679C\u300D\u8FD9\u6837\u7684\u505A\u6CD5\uFF0C\u662F\u56E0\u4E3A <strong>\u5728 i \u548C fuel \u786E\u5B9A\u7684\u60C5\u51B5\u4E0B\uFF0C\u5176\u5230\u8FBE\u76EE\u7684\u5730\u7684\u8DEF\u5F84\u6570\u91CF\u662F\u552F\u4E00\u786E\u5B9A\u7684</strong>\u3002\u56E0\u4E3A\u76EE\u7684\u4F4D\u7F6E\u4E0D\u4F1A\u52A8\uFF0C\u5F53 i \u548C fuel \u4E5F\u4E0D\u52A8\u7684\u8BDD\uFF0C\u90A3\u4E48\u6240\u6709\u6761\u4EF6\u90FD\u56FA\u5B9A\u4E86\uFF0C\u5230\u8FBE\u76EE\u7684\u4F4D\u7F6E\u7684\u8DEF\u5F84\u6570\u91CF\u4E5F\u4E0D\u4F1A\u52A8</li><li>\u6BCF\u6B21\u90FD\u4F7F\u7528\u5230\u4E4B\u524D\u8BA1\u7B97\u8FC7\u7684\u6570\u636E\uFF0C\u5C31\u6709\u70B9\u50CF\u4E4B\u524D\u51E0\u9898\u7684\u52A8\u6001\u89C4\u5212\u7684\u601D\u8DEF\u4E86\u3002</li></ul><h3 id="_4-\u4EE3\u7801\u5206\u6BB5\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_4-\u4EE3\u7801\u5206\u6BB5\u5B9E\u73B0" aria-hidden="true">#</a> \uFF084\uFF09\u4EE3\u7801\u5206\u6BB5\u5B9E\u73B0</h3><p>\u9996\u5148\u5B9E\u73B0\u9012\u5F52\u9000\u51FA\u6761\u4EF6\uFF0C\u9000\u51FA\u6761\u4EF6\u4E5F\u6D89\u53CA\u5230\u9012\u5F52\u7684\u6700\u540E\u4E00\u5C42\uFF0C\u4E5F\u5C31\u662F\u6761\u4EF6\u6700\u5C0F\u8303\u56F4\u7684\u4E00\u5C42\u3002\u53EA\u6709\u6700\u540E\u4E00\u5C42\u8BBE\u8BA1\u6B63\u786E\uFF0C\u4E0A\u9762\u51E0\u5C42\u624D\u80FD\u6B63\u786E\u5730\u6EDA\u96EA\u7403\u3002</p><p>\u6839\u636E\u7B2C \uFF082\uFF09\u70B9\u77E5\u9053\u4E86\u9000\u51FA\u9012\u5F52\u7684\u6761\u4EF6\uFF1A</p><ul><li>\u6700\u5C0F\u903B\u8F91\u7684\u6709\u6548\u8DEF\u5F84\uFF1A <ul><li>\u5F53\u524D\u6240\u5728\u7684\u4F4D\u7F6E\u5C31\u662F\u76EE\u7684\u5730 <strong>\u4E14\u4E0D\u80FD\u5230\u4EFB\u4F55\u4E00\u4E2A\u5730\u65B9</strong></li></ul></li><li>\u65E0\u6548\u8DEF\u5F84\uFF1A <ul><li>\u5F53\u6CB9\u91CF\u6D88\u8017\u5B8C\uFF0C\u6240\u5728\u4F4D\u7F6E\u53C8\u4E0D\u5728\u6700\u7EC8\u4F4D\u7F6E</li><li>\u6CB9\u91CF\u4E0D\u4E3A 0\uFF0C\u4F46\u4E0D\u80FD\u5230\u4EFB\u4F55\u4E00\u4E2A\u5730\u65B9\uFF0C\u4E14\u4E0D\u5728\u76EE\u7684\u4F4D\u7F6E\u3002</li></ul></li></ul><p>\u6709\u6548\u548C\u65E0\u6548\u7684\u7B2C 2 \u70B9\u90FD\u9700\u8981\u904D\u5386\u6BCF\u4E00\u4E2A\u5730\u65B9\uFF0C\u6765\u786E\u5B9A\u4E0D\u80FD\u5230\u4EFB\u4F55\u4E00\u4E2A\u5730\u65B9\uFF0C\u6240\u4EE5\u5C06\u8FD9\u4E24\u4E2A\u60C5\u51B5\u5199\u5728\u4E00\u8D77\u3002</p><ul><li><code>start</code> \uFF1A\u4EE3\u8868\u5F53\u524D\u9012\u5F52\u7684\u8D77\u59CB\u4F4D\u7F6E</li><li><code>fuel</code> \uFF1A\u5F53\u524D\u9012\u5F52\u6240\u62E5\u6709\u7684\u6CB9\u91CF</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">boolean</span> hasNext <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> locations<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6392\u9664\u6389\u5F53\u524D\u683C\u5230\u5F53\u524D\u683C\u7684\u60C5\u51B5</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>locations<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> locations<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
    <span class="token comment">// \u6CB9\u91CF\u5927\u4E8E\u79FB\u52A8\u6240\u9700\u7684\u91CF\uFF0C\u5219\u8BC1\u660E\u53EF\u4EE5\u5230\u8FBE\u5176\u4ED6\u4F4D\u7F6E</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      hasNext <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6709\u6548\u60C5\u51B5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasNext <span class="token operator">&amp;&amp;</span> start <span class="token operator">==</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cache<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasNext <span class="token operator">&amp;&amp;</span> start <span class="token operator">!=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65E0\u6548\u60C5\u51B5</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7B2C15~20\u884C\u53EF\u4EE5\u7B80\u5199\u6210\u4E0B\u9762</span>
<span class="token comment">// if (fuel != 0 &amp;&amp; !hasNext) {</span>
<span class="token comment">//  int a= cache[u][fuel] = u==end?1:0;</span>
<span class="token comment">//  return a;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E0\u6548\u7684\u7B2C 1 \u70B9\u5F88\u597D\u5199\uFF0C\u76F4\u63A5\u5224\u65AD\u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> start <span class="token operator">!=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cache<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u5C31\u9700\u8981\u5199\u51FA <strong>\u300C\u6700\u5C0F\u5355\u5143\u300D\u5904\u7406\u903B\u8F91</strong> \uFF0C\u4E5F\u5C31\u662F <strong>\u5982\u4F55\u5904\u7406\u6700\u5C0F\u5355\u5143\u7684\u8FD4\u56DE\u503C</strong>\u3002\u6BCF\u6B21\u628A\u8DEF\u7EBF\u52A0\u8D77\u6765\u5C31\u884C\u3002</p><p>\u4F46\u4EE3\u7801\u6CE8\u610F\u51E0\u4E2A\u5730\u65B9\uFF1A</p><ul><li><code>sum</code> \u4EE3\u8868\u5F53\u524D\u9012\u5F52\u7684\u8DEF\u7EBF\u603B\u548C\u3002\u521D\u59CB\u5316\u7684\u65F6\u5019\u4E0D\u5355\u5355\u53EA\u8D4B\u503C 0\uFF0C\u6709\u65F6\u8981\u8D4B\u503C 1\uFF0C\u4F8B\u5982\u5F53\u524D\u4E3A\u76EE\u7684\u4F4D\u7F6E\u3002\u5982\u7B2C 1 \u884C\u6240\u793A\u3002</li><li><code>sum</code> \u8981\u5BF9\u6307\u5B9A\u6570\u5B57\u53D6\u4F59\u3002\u5982\u7B2C 7 \u884C\u6240\u793A\u3002 <ul><li>\u4E3A\u4EC0\u4E48\u8981\u5BF9 10<sup>9</sup> + 7 \u53D6\u4F59\uFF1F\uFF08\u6574\u578B\u7684\u53D6\u503C\u8303\u56F4\u4E3A -2147483648\uFF5E2147483647 \u2014\u2014 -2 * 10<sup>9</sup>\uFF5E 2 * 10<sup>9</sup> \uFF09</li><li>\u4F3C\u4E4E\u662F\u53EF\u4EE5\u5C06\u8F83\u5927\u7684\u6570\u53D8\u6210\u8F83\u5C0F\u7684\u6570\u3002\u539F\u7406\u597D\u50CF\u6D89\u53CA\u5230\u4E00\u4E9B\u6A21\u8FD0\u7B97\u7684\u6027\u8D28\u3002\u5F85\u7814\u7A76\u3002</li><li>\u53C2\u8003\u94FE\u63A5\uFF1A <ul><li>https://www.geeksforgeeks.org/modulo-1097-1000000007/</li><li>https://www.quora.com/What-exactly-is-print-it-modulo-10-9-+-7-in-competitive-programming-web-sites</li></ul></li></ul></li><li>\u5728\u5FAA\u73AF\u6BCF\u4E2A\u8D77\u59CB\u4F4D\u7F6E\u65F6\uFF0C<strong>\u5224\u65AD\u5F53\u524D\u6709\u7684\u6CB9\u91CF\u80FD\u4E0D\u80FD\u5230\u8FBE\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u4E0D\u80FD\u5230\u8FBE\u5219\u53EF\u4EE5\u4E0D\u8FDB\u5165\u4E0B\u4E00\u4E2A\u9012\u5F52</strong>\u3002\u5982\u7B2C 5 \u884C\u6240\u793A\u3002 <ul><li>\u56E0\u4E3A\u8FDB\u5165\u9012\u5F52\u540E\u8FD4\u56DE\u7684\u662F 0\uFF0C<code>sum += 0</code> \u548C\u4E0D\u8FDB\u5165\u9012\u5F52\u4E00\u6837\u3002</li><li>\u5982\u679C\u4E0D\u60F3\u5224\u65AD\u7684\u8BDD\uFF0C\u9700\u8981\u6539\u52A8\u65E0\u6548\u7684\u7B2C 1 \u70B9\uFF0C\u8FD4\u56DE 0 \u7684\u6761\u4EF6\u6539\u4E3A <code>fuel &lt; 0 || (fuel == 0 &amp;&amp; start != end)</code></li></ul></li><li>\u6700\u540E\u9700\u8981\u5C06\u5F53\u524D\u7ED3\u679C\u8BB0\u5F55\u5230\u7F13\u5B58\u4E2D\u3002\u5982\u7B2C 12 \u884C\u6240\u793A\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> sum <span class="token operator">=</span> u <span class="token operator">==</span> end <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> locations<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>locations<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> locations<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>locations<span class="token punctuation">,</span> i<span class="token punctuation">,</span> end<span class="token punctuation">,</span> fuel <span class="token operator">-</span> need<span class="token punctuation">)</span><span class="token punctuation">;</span>
    	sum <span class="token operator">%=</span> MOD<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

cache<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>
<span class="token keyword">return</span> sum<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u5168\u90E8\u5185\u5BB9\u90FD\u662F\u8BF4\u660E\u5982\u4F55\u586B\u5145\u7F13\u51B2\uFF0C\u73B0\u5728\u9700\u8981\u4F7F\u7528\u7F13\u51B2\u3002\u4F7F\u7528\u7F13\u51B2\u7684\u6761\u4EF6\u662F\u5F53\u524D\u6761\u4EF6\u5DF2\u7ECF\u8BA1\u7B97\u8FC7\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> cache<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u53EF\u80FD\u6709\u70B9\u62BD\u8C61\uFF0C\u5728\u54EA\u4E2A\u5730\u65B9\u4F1A\u4F7F\u7528\u5230\u7F13\u51B2\uFF0C\u6240\u4EE5\u7B2C\uFF086\uFF09\u70B9\u8FD0\u884C\u4E00\u904D\u4EE3\u7801\u3002</p><h3 id="_5-\u5168\u90E8\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_5-\u5168\u90E8\u4EE3\u7801" aria-hidden="true">#</a> \uFF085\uFF09\u5168\u90E8\u4EE3\u7801</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u7F13\u5B58\u5668\uFF1A\u7528\u4E8E\u8BB0\u5F55\u300C\u7279\u5B9A\u72B6\u6001\u300D\u4E0B\u7684\u7ED3\u679C</span>
    <span class="token comment">// cache[i][fuel] \u4EE3\u8868\u4ECE\u4F4D\u7F6E i \u51FA\u53D1\uFF0C\u5F53\u524D\u5269\u4F59\u7684\u6CB9\u91CF\u4E3A fuel \u7684\u524D\u63D0\u4E0B\uFF0C\u5230\u8FBE\u76EE\u6807\u4F4D\u7F6E\u7684\u300C\u8DEF\u5F84\u6570\u91CF\u300D</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cache<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countRoutes</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ls<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> fuel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> ls<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        
        <span class="token comment">// \u521D\u59CB\u5316\u7F13\u5B58\u5668</span>
        <span class="token comment">// \u4E4B\u6240\u4EE5\u8981\u5168\u90E8\u521D\u59CB\u5316\u4E3A -1</span>
        <span class="token comment">// \u662F\u4E3A\u4E86\u533A\u5206\u300C\u67D0\u4E2A\u72B6\u6001\u4E0B\u8DEF\u5F84\u6570\u91CF\u4E3A 0\u300D\u548C\u300C\u67D0\u4E2A\u72B6\u6001\u5C1A\u672A\u6CA1\u8BA1\u7B97\u8FC7\u300D\u4E24\u79CD\u60C5\u51B5</span>
        cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> fuel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * \u8BA1\u7B97\u300C\u8DEF\u5F84\u6570\u91CF\u300D
     * <span class="token keyword">@param</span> <span class="token parameter">ls</span> \u5165\u53C2 locations
     * <span class="token keyword">@param</span> <span class="token parameter">u</span> \u5F53\u524D\u6240\u5728\u4F4D\u7F6E\uFF08ls \u7684\u4E0B\u6807\uFF09
     * <span class="token keyword">@param</span> <span class="token parameter">end</span> \u76EE\u6807\u54E6\u4F4D\u7F6E\uFF08ls \u7684\u4E0B\u6807\uFF09
     * <span class="token keyword">@param</span> <span class="token parameter">fuel</span> \u5269\u4F59\u6CB9\u91CF
     * <span class="token keyword">@return</span> \u5728\u4F4D\u7F6E u \u51FA\u53D1\uFF0C\u6CB9\u91CF\u4E3A fuel \u7684\u524D\u63D0\u4E0B\uFF0C\u5230\u8FBE end \u7684\u300C\u8DEF\u5F84\u6570\u91CF\u300D
     */</span>
    <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ls<span class="token punctuation">,</span> <span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> fuel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u7F13\u5B58\u5668\u4E2D\u5DF2\u7ECF\u6709\u7B54\u6848\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">int</span> n <span class="token operator">=</span> ls<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// base case 1\uFF1A\u5982\u679C\u6CB9\u91CF\u4E3A 0\uFF0C\u4E14\u4E0D\u5728\u76EE\u6807\u4F4D\u7F6E</span>
        <span class="token comment">// \u5C06\u7ED3\u679C 0 \u5199\u5165\u7F13\u5B58\u5668\u5E76\u8FD4\u56DE</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> u <span class="token operator">!=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
        
        <span class="token comment">// base case 2\uFF1A\u6CB9\u91CF\u4E0D\u4E3A 0\uFF0C\u4E14\u65E0\u6CD5\u5230\u8FBE\u4EFB\u4F55\u4F4D\u7F6E</span>
        <span class="token comment">// \u5C06\u7ED3\u679C 0 \u5199\u5165\u7F13\u5B58\u5668\u5E76\u8FD4\u56DE</span>
        <span class="token keyword">boolean</span> hasNext <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">-</span> ls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
                <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    hasNext <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hasNext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> a <span class="token operator">=</span> cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> u <span class="token operator">==</span> end <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> a<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// \u8BA1\u7B97\u6CB9\u91CF\u4E3A fuel\uFF0C\u4ECE\u4F4D\u7F6E u \u5230 end \u7684\u8DEF\u5F84\u6570\u91CF</span>
        <span class="token comment">// \u7531\u4E8E\u6BCF\u4E2A\u70B9\u90FD\u53EF\u4EE5\u7ECF\u8FC7\u591A\u6B21\uFF0C\u5982\u679C u = end\uFF0C\u90A3\u4E48\u672C\u8EAB\u5C31\u7B97\u4E00\u6761\u8DEF\u5F84</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> u <span class="token operator">==</span> end <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> ls<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> i<span class="token punctuation">,</span> end<span class="token punctuation">,</span> fuel <span class="token operator">-</span> need<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    sum <span class="token operator">%=</span> mod<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),c=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u6700\u574F\u60C5\u51B5\u4E0B\u5171\u6709 n * fuel \u4E2A\u72B6\u6001\u9700\u8981\u8BA1\u7B97\uFF08\u586B\u6EE1\u6574\u4E2A cache \u6570\u7EC4\uFF09\u3002\u6BCF\u8BA1\u7B97\u4E00\u4E2A\u72B6\u6001\u9700\u8981\u904D\u5386\u4E00\u6B21 locations \u6570\u7EC4\uFF0C\u4F8B\u5982\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684\u7B2C 63 ~ 73 \u884C\uFF0C\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( n )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \u3002\u6574\u4F53\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mi",null,"f"),n("mi",null,"u"),n("mi",null,"e"),n("mi",null,"l"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( n^{2} fuel )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])])]),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mi",null,"f"),n("mi",null,"u"),n("mi",null,"e"),n("mi",null,"l"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( n^{2} fuel )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])])]),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mclose"},")")])])])])],-1),i=a(`<h3 id="_6-\u521D\u6B65\u8FD0\u884C\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_6-\u521D\u6B65\u8FD0\u884C\u4EE3\u7801" aria-hidden="true">#</a> \uFF086\uFF09\u521D\u6B65\u8FD0\u884C\u4EE3\u7801</h3><p>\u4EE5\u9898\u76EE\u4E2D\u7684\u793A\u4F8B\u4E3A\u4F8B\u5B50\uFF0C<code>locations = [2,3,6,8,4], start = 1, finish = 3, fuel = 5</code>\uFF0C\u4F4D\u7F6E\u8868\u793A\u4F7F\u7528\u6570\u7EC4\u4E2D\u7684\u503C</p><ul><li>\u8D77\u59CB\u4F4D\u7F6E\u4E3A 3\uFF0C\u6700\u7EC8\u4F4D\u7F6E\u4E3A 8\u3002</li><li>\u9996\u5148\u904D\u5386\u5C06\u6BCF\u4E00\u4E2A\u4F5C\u4E3A\u5F00\u59CB\u4F4D\u7F6E\u3002 <ul><li>\u30103 -&gt; 2\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 4</li><li>\u30103 -&gt; 6\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 2</li><li>\u30103 -&gt; 8\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li>\u30103 -&gt; 4\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 4</li></ul></li><li>\u7136\u540E\u518D\u6DF1\u5EA6\u904D\u5386\u7B2C 1 \u6761\u8DEF\u5F84\u30103 -&gt; 2\u3011\uFF0C\u8D77\u70B9\u4E3A 2\uFF0C\u62E5\u6709\u6CB9\u91CF 4 <ul><li>\u30102 -&gt; 3\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 3 <ul><li>\u30103 -&gt; 2\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 2\uFF0C\u5728\u6CB9\u8017\u5C3D\u4E4B\u524D\u65E0\u6CD5\u5230\u8FBE\uFF0C\u6240\u4EE5\u8DEF\u5F84\u4E3A 0 <ul><li>\u30102 -&gt; 3\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 1\uFF0C\u5728\u6CB9\u8017\u5C3D\u4E4B\u524D\u65E0\u6CD5\u5230\u8FBE\uFF0C\u6240\u4EE5\u8DEF\u5F84\u4E3A 0 <ul><li>\u30103 -&gt; 2\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li>\u30103 -&gt; 6\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</li><li><strong>\u30103 -&gt; 8\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</strong></li><li>\u30103 -&gt; 4\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li></ul></li><li>\u30102 -&gt; 6\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</li><li><strong>\u30102 -&gt; 8\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</strong></li><li>\u30102 -&gt; 4\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li></ul></li><li>\u30103 -&gt; 6\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li><strong>\u30103 -&gt; 8\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</strong></li><li>\u30103 -&gt; 4\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 2\uFF0C\u5728\u6CB9\u8017\u5C3D\u4E4B\u524D\u65E0\u6CD5\u5230\u8FBE\uFF0C\u6240\u4EE5\u8DEF\u5F84\u4E3A 0 <ul><li>\u30104 -&gt; 2\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li>\u30104 -&gt; 3\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 1\uFF0C\u7531\u4E0A\u9762\u53EF\u77E5\uFF0C\u4ECE 3 \u5F00\u59CB\uFF0C\u6CB9\u91CF\u4E3A 1\uFF0C\u8DEF\u5F84\u4E3A 0</li><li>\u30104 -&gt; 6\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li><strong>\u30104 -&gt; 8\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</strong></li></ul></li></ul></li><li>\u30102 -&gt; 6\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 0</li><li><strong>\u30102 -&gt; 8\u3011\uFF1A\u6CB9\u91CF\u4E0D\u8DB3</strong></li><li>\u30102 -&gt; 4\u3011\uFF1A\u5269\u4F59\u6CB9\u91CF 2\uFF0C\u8DEF\u5F84\u4E3A 0 <ul><li>\u7531\u4E0A\u9762\u53EF\u77E5\uFF0C\u4ECE 4 \u5F00\u59CB\uFF0C\u6CB9\u91CF\u4E3A 2\uFF0C\u8DEF\u5F84\u4E3A 0</li></ul></li></ul></li><li>\u7531\u4E0A\u53EF\u77E5\uFF0C\u8BE5\u9012\u5F52\u4E86\u5927\u534A\u5929\uFF0C\u6700\u540E\u53EA\u80FD\u5F97\u51FA\u30103 -&gt; 2\u3011\u662F\u4E0D\u80FD\u8D70\u7684\u8DEF\u3002\u90A3\u80FD\u4E0D\u80FD\u8FDB\u884C\u526A\u679D\uFF0C\u4E0D\u7528\u9012\u5F52\u90A3\u4E48\u6DF1\u5C31\u80FD\u77E5\u9053\u7ED3\u679C\u5462\uFF1F <ul><li>\u7B54\u6848\u662F\u53EF\u4EE5\u7684\uFF0C\u5F53\u8D70\u4E00\u6B65\u4E0D\u80FD\u4ECE\u8D77\u70B9\u5230\u7EC8\u70B9\uFF0C\u90A3\u4E48\u8D70\u591A\u6B65\u4E5F\u4E0D\u80FD\u5230\u8FBE\u7EC8\u70B9\u3002\u4ECE\u65E5\u5E38\u751F\u6D3B\u53EF\u77E5\uFF0C\u76F4\u7EBF\u8D70\u591A\u6B65\u548C\u8D70\u4E00\u6B65\uFF0C\u6240\u8D70\u8DEF\u7A0B\u4E00\u81F4\uFF0C\u5982\u679C\u4E0D\u76F4\u7EBF\u8D70\uFF0C\u5219\u8D70\u7684\u8DEF\u7A0B\u4F1A\u66F4\u591A\u3002</li><li>\u56DE\u5230\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u4ECE 3 \u5230\u8FBE 2 \u7684\u65F6\u5019\uFF0C\u6CB9\u91CF\u5269\u4F59 4\uFF0C\u800C\u30102 -&gt; 8\u3011\u9700\u8981\u6CB9\u91CF 6\uFF0C\u5C31\u53EF\u77E5\u76F4\u63A5\u8FD4\u56DE 0 \u4E86\uFF0C\u4E0D\u7528\u518D\u9012\u5F52\u4E0B\u53BB\u4E86\u3002</li></ul></li><li>\u90A3\u4E48\u4EE3\u7801\u8BE5\u600E\u4E48\u5199\u5462\uFF1F\u653E\u5230\u4EE3\u7801\u4E2D\u7684\u54EA\u4E2A\u90E8\u5206 <ul><li>\u524D\u9762\u4EE3\u7801\u90E8\u5206\u662F\u5224\u65AD\u662F\u5426\u662F\u6709\u6548\u8FD8\u662F\u65E0\u6548\u6761\u4EF6\uFF0C\u7528\u4E8E\u7ED3\u675F\u9012\u5F52\u3002</li><li>\u65E0\u6548\u6761\u4EF6\u5305\u62EC <strong>\u6CB9\u4E3A 0 \u4E14\u4E0D\u76EE\u7684\u4F4D\u7F6E</strong>\u3001<strong>\u6CB9\u4E0D\u4E3A 0 \u4E14\u4E0D\u80FD\u5230\u4EFB\u4F55\u4F4D\u7F6E</strong></li><li>\u53EF\u4EE5\u53D1\u73B0\u5224\u65AD <strong>\u4E00\u6B65\u662F\u5426\u80FD\u8D70\u5230\u76EE\u7684\u4F4D\u7F6E</strong>\uFF0C\u4E5F\u5305\u62EC\u4E86\u4E24\u4E2A\u65E0\u6548\u6761\u4EF6\uFF1A <ul><li>\u6CB9\u4E3A 0\uFF0C\u5F53\u7136\u65E0\u6CD5\u4E00\u6B65\u5230\u8FBE\u76EE\u7684\u4F4D\u7F6E</li><li>\u4E0D\u80FD\u5230\u4EFB\u4F55\u4F4D\u7F6E\uFF0C\u5F53\u524D\u4E5F\u65E0\u6CD5\u4E00\u6B65\u5230\u8FBE\u76EE\u7684\u4F4D\u7F6E</li></ul></li><li>\u6240\u4EE5\u76F4\u63A5\u5C06\u8FD9\u4E24\u4E2A\u65E0\u6548\u6761\u4EF6\u5220\u9664\u66FF\u6362\u6210\u4E00\u6B65\u5224\u65AD\u4EE3\u7801\uFF0C\u5982\u4E0B\u6240\u793A\u7B2C 10 ~ 14 \u884C\u3002</li></ul></li></ul><p>\u6CE8\uFF1A\u4EE3\u7801\u4E2D start \u53D8\u91CF\u4F7F\u7528\u4E86 u \u53D8\u91CF\u4EE3\u66FF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ls<span class="token punctuation">,</span> <span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> fuel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u7F13\u5B58\u4E2D\u5DF2\u7ECF\u6709\u7B54\u6848\uFF0C\u76F4\u63A5\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C\u4E00\u6B65\u5230\u8FBE\u4E0D\u4E86\uFF0C\u8BF4\u660E\u4ECE\u4F4D\u7F6E u \u4E0D\u80FD\u5230\u8FBE end \u4F4D\u7F6E</span>
  <span class="token comment">// \u5C06\u7ED3\u679C 0 \u5199\u5165\u7F13\u5B58\u5668\u5E76\u8FD4\u56DE</span>
  <span class="token comment">// \u540C\u65F6\u5305\u542B\u4E86\u4E24\u4E2A\u65E0\u6548\u6761\u4EF6</span>
  <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">-</span> ls<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>need <span class="token operator">&gt;</span> fuel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> n <span class="token operator">=</span> ls<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u6CB9\u91CF\u4E3A fuel\uFF0C\u4ECE\u4F4D\u7F6E u \u5230 end \u7684\u8DEF\u5F84\u6570\u91CF</span>
  <span class="token comment">// \u7531\u4E8E\u6BCF\u4E2A\u70B9\u90FD\u53EF\u4EE5\u7ECF\u8FC7\u591A\u6B21\uFF0C\u5982\u679C u = end\uFF0C\u90A3\u4E48\u672C\u8EAB\u5C31\u7B97\u4E00\u6761\u8DEF\u5F84</span>
  <span class="token keyword">int</span> sum <span class="token operator">=</span> u <span class="token operator">==</span> end <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> ls<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fuel <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> i<span class="token punctuation">,</span> end<span class="token punctuation">,</span> fuel <span class="token operator">-</span> need<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sum <span class="token operator">%=</span> mod<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  cache<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-\u52A8\u6001\u89C4\u5212\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#_7-\u52A8\u6001\u89C4\u5212\u601D\u8DEF" aria-hidden="true">#</a> \uFF087\uFF09\u52A8\u6001\u89C4\u5212\u601D\u8DEF</h3><p>\u539F\u6587\u94FE\u63A5\uFF1A</p><p>https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485319&amp;idx=1&amp;sn=95a3dc9c97ca57185de792ca70924afe&amp;chksm=fd9cac98caeb258ebea466f59378670a90af1cb3015ae70922e1d04ac711a5b8d8d853ac5e7d&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><p>\u4E0A\u9762\u4F7F\u7528\u4E86\u9012\u5F52\u7B97\u6CD5\uFF0C\u5728\u4E0A\u9762\u7684\u601D\u8DEF\u4E2D\uFF0C\u5DF2\u7ECF\u6709\u4E86\u52A8\u6001\u89C4\u5212\u7684\u6A21\u578B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u5176\u63D0\u53D6\u51FA\u6765\uFF0C\u4F7F\u7528\u4E4B\u524D\u7684\u89E3\u6CD5\u6765\u5B9E\u73B0\u3002</p><ul><li>cache \u6570\u7EC4\u662F\u6211\u4EEC\u8981\u6C42\u7684\u6570\u636E\uFF0C\u6700\u7EC8\u7B54\u6848\u4E3A <code>cache[start][fuel]</code></li><li><strong>\u9012\u5F52\u7684\u9000\u51FA\u6761\u4EF6</strong> \u5C31\u662F\u4F5C\u4E3A\u52A8\u6001\u89C4\u5212\u7684\u6700\u5C0F\u5355\u5143\u3002 <ul><li>\u9000\u51FA\u6761\u4EF6\u662F\u6CB9\u91CF\u6700\u5C0F\u7684\u65F6\u5019\uFF0C\u6240\u4EE5\u52A8\u6001\u89C4\u5212\u5C31\u5C06\u6CB9\u91CF\u4ECE 0 \u5F00\u59CB\u904D\u5386</li></ul></li><li><strong>\u5411\u4E0B\u9012\u5F52\u7684\u52A8\u4F5C</strong> \u5C31\u662F\u52A8\u6001\u89C4\u5212\u7684\u72B6\u6001\u8F6C\u79FB <ul><li>\u5411\u4E0B\u9012\u5F52\u7684\u52A8\u4F5C\u662F\u628A\u4E00\u4E2A\u4F4D\u7F6E\u4F5C\u4E3A\u7EC8\u70B9\uFF0C\u7136\u540E\u518D\u51CF\u53D6\u76F8\u5E94\u7684\u6CB9\u91CF</li><li>\u72B6\u6001\u8F6C\u79FB\u5C31\u662F\u904D\u5386\u5F53\u524D\u6240\u6709\u80FD\u53BB\u7684\u4F4D\u7F6E\u3002\u7528\u65B9\u7A0B\u6765\u5199\u5C31\u662F <code>cache[start][fuel] += cache[k][fuel - need]</code> \uFF0Ck \u4EE3\u8868\u4E0B\u4E00\u4E2A\u4F4D\u7F6E\u3002\u6CE8\u610F\u56E0\u4E3A\u662F\u53D6\u6570\u7EC4\u4E2D\u7684\u503C\uFF0C\u6240\u4EE5 <code>fuel - need</code> \u4E0D\u80FD\u4E3A\u8D1F\u6570\uFF0C\u5982\u9012\u5F52\u4EE3\u7801\u4E00\u6837\u3002</li></ul></li></ul><p>\u7136\u540E\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countRoutes</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ls<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">,</span> <span class="token keyword">int</span> fuel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> ls<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">// f[i][j] \u4EE3\u8868\u4ECE\u4F4D\u7F6E i \u51FA\u53D1\uFF0C\u5F53\u524D\u6CB9\u91CF\u4E3A j \u65F6\uFF0C\u5230\u8FBE\u76EE\u7684\u5730\u7684\u8DEF\u5F84\u6570</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u4E8E\u672C\u8EAB\u4F4D\u7F6E\u5C31\u5728\u76EE\u7684\u5730\u7684\u72B6\u6001\uFF0C\u8DEF\u5F84\u6570\u4E3A 1</span>
    <span class="token comment">// \u8FD9\u91CC\u5904\u7406\u672C\u8EAB\u4F4D\u7F6E\u5728\u76EE\u7684\u5730\u7684\u60C5\u51B5\uFF0C</span>
    <span class="token comment">// \u56E0\u4E3A\u5728\u4E0B\u9762\u904D\u5386\u7684\u65F6\u5019\u9700\u8981\u6392\u9664\u8D77\u59CB\u4F4D\u7F6E\u662F\u76EE\u7684\u4F4D\u7F6E\u7684\u60C5\u51B5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> fuel<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> f<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u4ECE\u5C0F\u5230\u5927\u679A\u4E3E\u6CB9\u91CF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> cur <span class="token operator">&lt;=</span> fuel<span class="token punctuation">;</span> cur<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u904D\u5386\u8D77\u59CB\u4F4D\u7F6E</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u904D\u5386\u4E0B\u4E00\u4E2A\u7684\u4F4D\u7F6E</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> need <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>ls<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> ls<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cur <span class="token operator">&gt;=</span> need<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">+=</span> f<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>cur<span class="token operator">-</span>need<span class="token punctuation">]</span><span class="token punctuation">;</span>
              f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">%=</span> mod<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>fuel<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),u=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5728\u4EE3\u7801\u4E2D\uFF0C\u5F88\u660E\u663E\u6709\u4E09\u5C42\u5FAA\u73AF\uFF0C\u590D\u6742\u5EA6\u5206\u522B\u4E3A n\u3001n\u3001fuel\uFF0C\u6240\u4EE5\u6574\u4F53\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mi",null,"f"),n("mi",null,"u"),n("mi",null,"e"),n("mi",null,"l"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( n^{2} fuel )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])])]),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mi",null,"f"),n("mi",null,"u"),n("mi",null,"e"),n("mi",null,"l"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( n^{2} fuel )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])])]),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mclose"},")")])])])])],-1),r=a(`<h3 id="_8-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_8-\u603B\u7ED3" aria-hidden="true">#</a> \uFF088\uFF09\u603B\u7ED3</h3><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u53EA\u5229\u7528 DFS \u7684\u65B9\u6CD5\u7B7E\u540D\u4E0E\u4E3B\u903B\u8F91\uFF0C\u5C31\u5199\u51FA\u4E86\u300C\u52A8\u6001\u89C4\u5212\u300D\u89E3\u6CD5\u3002</p><p>\u6211\u518D\u5E2E\u4F60\u6765\u603B\u7ED3\u4E00\u4E0B\u8FD9\u4E2A\u8FC7\u7A0B\uFF1A</p><ol><li><p>\u4ECE DFS \u65B9\u6CD5\u7B7E\u540D\u51FA\u53D1\u3002<strong>\u5206\u6790\u54EA\u4E9B\u5165\u53C2\u662F\u53EF\u53D8\u7684\uFF0C\u5C06\u5176\u4F5C\u4E3A DP \u6570\u7EC4\u7684\u7EF4\u5EA6</strong>\uFF0C\u8FD9\u9053\u9898 fuel \u548C\u8D77\u59CB\u4F4D\u7F6E\u53EF\u53D8\uFF0C\u5C31\u4F5C\u4E3A\u4E86\u6570\u7EC4\u7684\u4E24\u4E2A\u7EF4\u5EA6\u3002<strong>\u5C06\u8FD4\u56DE\u503C\u4F5C\u4E3A DP \u6570\u7EC4\u7684\u5B58\u50A8\u503C</strong>\uFF0C\u8FD9\u9053\u9898\u5C31\u662F\u5C06\u6BCF\u4E2A\u9012\u5F52\u7684\u8DEF\u5F84\u6570\u91CF\u5B58\u50A8\u5728\u6570\u7EC4\u91CC</p></li><li><p>**\u4ECE DFS \u7684\u4E3B\u903B\u8F91\u53EF\u4EE5\u62BD\u8C61\u4E2D\u5355\u4E2A\u72B6\u6001\u7684\u8BA1\u7B97\u65B9\u6CD5\u3002**\u8FD9\u9053\u9898\u662F\u4EE5\u5C06 <strong>\u5176\u4F59\u70B9\u4F5C\u4E3A\u7EC8\u70B9</strong> \u7684\u601D\u8DEF\u63D0\u53D6\u51FA\u6765</p></li></ol><p>\u5176\u4E2D\u7B2C\u4E00\u70B9\u5BF9\u5E94\u4E86\u300C\u52A8\u6001\u89C4\u5212\u300D\u7684\u300C\u72B6\u6001\u5B9A\u4E49\u300D\uFF0C\u7B2C\u4E8C\u70B9\u5BF9\u5E94\u4E86\u300C\u52A8\u6001\u89C4\u5212\u300D\u7684\u300C\u72B6\u6001\u65B9\u7A0B\u8F6C\u79FB\u300D\u3002</p><h2 id="\u4E09\u5341\u516B\u3001\u8BBE\u8BA1\u54C8\u5E0C\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5341\u516B\u3001\u8BBE\u8BA1\u54C8\u5E0C\u96C6\u5408" aria-hidden="true">#</a> \u4E09\u5341\u516B\u3001\u8BBE\u8BA1\u54C8\u5E0C\u96C6\u5408</h2><p>\u539F\u9898\u94FE\u63A5\uFF1A</p><p>https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485333&amp;idx=1&amp;sn=717ccedd7ad0c838e775332ef864cc27&amp;chksm=fd9cac8acaeb259c04deedb940f73167aabb112efddd27a2b5c4f3b9646f0fcd3166e0d8f7ae&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C705. \u8BBE\u8BA1\u54C8\u5E0C\u96C6\u5408\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Easy</strong>\u3002</p><p>\u4E0D\u4F7F\u7528\u4EFB\u4F55\u5185\u5EFA\u7684\u54C8\u5E0C\u8868\u5E93\u8BBE\u8BA1\u4E00\u4E2A\u54C8\u5E0C\u96C6\u5408\uFF08HashSet\uFF09\u3002</p><p>\u5B9E\u73B0 MyHashSet \u7C7B\uFF1A</p><ul><li>void add(key) \u5411\u54C8\u5E0C\u96C6\u5408\u4E2D\u63D2\u5165\u503C key</li><li>bool contains(key) \u8FD4\u56DE\u54C8\u5E0C\u96C6\u5408\u4E2D\u662F\u5426\u5B58\u5728\u8FD9\u4E2A\u503C key</li><li>void remove(key) \u5C06\u7ED9\u5B9A\u503C key \u4ECE\u54C8\u5E0C\u96C6\u5408\u4E2D\u5220\u9664\u3002\u5982\u679C\u54C8\u5E0C\u96C6\u5408\u4E2D\u6CA1\u6709\u8FD9\u4E2A\u503C\uFF0C\u4EC0\u4E48\u4E5F\u4E0D\u505A</li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>0 &lt;= key &lt;= 10<sup>6</sup></li><li>\u6700\u591A\u8C03\u7528 104 \u6B21 add\u3001remove \u548C contains \u3002</li></ul><p>\u8FDB\u9636\uFF1A\u4F60\u53EF\u4EE5\u4E0D\u4F7F\u7528\u5185\u5EFA\u7684\u54C8\u5E0C\u96C6\u5408\u5E93\u89E3\u51B3\u6B64\u95EE\u9898\u5417\uFF1F</p></blockquote><h3 id="_1-\u6570\u7EC4\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4\u89E3\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u6570\u7EC4\u89E3\u6CD5</h3><p>\u56E0\u4E3A key \u9650\u5236\u4E86\u662F int \u7C7B\u578B\uFF0C\u5E76\u4E14\u8303\u56F4\u4E0D\u8D85\u8FC7 10<sup>6</sup> \uFF0C\u518D\u52A0\u4E0A\u8FD0\u884C\u65F6\u95F4\u7684\u9650\u5236\uFF0C\u4F7F\u7528\u6570\u7EC4\u89E3\u6CD5\u662F\u6BD4\u8F83\u5BB9\u6613\u901A\u8FC7\u7684\u3002</p><p>\u601D\u8DEF\uFF1A\u5F00\u8F9F\u4E00\u4E2A\u8DB3\u591F\u5927\u7684\u6570\u7EC4\uFF0C\u7136\u540E\u5C06\u4F20\u6765\u7684\u6570\u76F4\u63A5\u53D6\u4E0B\u6807\uFF0C\u770B\u662F\u5426\u5B58\u5728\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashSet</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token number">1000009</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nodes<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        nodes<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nodes<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),k=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])])],-1),d=a(`<h3 id="_2-\u94FE\u8868\u6570\u7EC4\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u94FE\u8868\u6570\u7EC4\u89E3\u6CD5" aria-hidden="true">#</a> \uFF082\uFF09\u94FE\u8868\u6570\u7EC4\u89E3\u6CD5</h3><p>\u5982\u679C\u7528\u666E\u901A\u7684\u94FE\u8868\u7684\u8BDD\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4F1A\u5F88\u9AD8\uFF0C\u6240\u4EE5\u5C31\u5C06\u94FE\u8868\u548C\u54C8\u5E0C\u7ED3\u5408\uFF0C\u53EF\u4EE5\u4F18\u5316\u65F6\u95F4\u590D\u6742\u5EA6\u3002</p><p>\u6CE8\uFF1A\u529B\u6263\u8FD0\u884C\u666E\u901A\u94FE\u8868\u8017\u65F6 242 ms\uFF0C\u94FE\u8868\u54C8\u5E0C\u7ED3\u5408 11 ms</p><ul><li>\u94FE\u8868\u548C\u6570\u7EC4\u7ED3\u5408 <ul><li>\u50A8\u5B58\u65B9\u5F0F\uFF1A\u6570\u7EC4\u5B58\u653E\u94FE\u8868\u5934\u8282\u70B9\u3002\u6570\u7EC4\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u94FE\u8868\u7528\u4E8E\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\uFF0C\u5728\u540C\u4E00\u683C\u7684\u8BDD\uFF0C\u5C31\u63D2\u5165\u5230\u94FE\u8868\u91CC</li><li>\u8BA1\u7B97\u54C8\u5E0C\u7801\u7684\u65B9\u5F0F\uFF1A\u6570\u7EC4\u957F\u5EA6\u53EF\u4EE5\u4E0D\u7528\u592A\u5927\uFF0C\u4F46\u4E00\u5B9A\u8981\u628A key \u5747\u5300\u5730\u653E\u5230\u6BCF\u4E2A\u683C\u4E0A\u3002\u8BE6\u7EC6\u4EE3\u7801\u5982\u7B2C 87 ~ 94 \u884C\u3002</li><li>\u589E\u52A0\uFF1A\u5148\u6839\u636E key \u83B7\u53D6\u5230\u6570\u7EC4\u7684\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u518D\u5224\u65AD\u662F\u5426\u5B58\u5728\u94FE\u8868\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u65B0\u5EFA\u94FE\u8868\uFF0C\u5B58\u5728\u5219\u6DFB\u52A0\u5230\u94FE\u8868\u91CC\u3002\u5220\u9664\u548C\u5224\u65AD\u662F\u5426\u5B58\u5728\u4E5F\u4E00\u6837\u601D\u8DEF\u3002</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashSet</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7531\u4E8E\u4F7F\u7528\u7684\u662F\u300C\u94FE\u8868\u300D\uFF0C\u8FD9\u4E2A\u503C\u53EF\u4EE5\u53D6\u5F97\u5F88\u5C0F</span>
  <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token number">10009</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E key \u83B7\u53D6\u54C8\u5E0C\u6876\u7684\u4F4D\u7F6E</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> tmp <span class="token operator">=</span> loc<span class="token punctuation">;</span>
    
		<span class="token comment">// \u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u5DF2\u7ECF\u5B58\u5728</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      
      <span class="token keyword">while</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5B58\u5728\u5219\u76F4\u63A5\u7ED3\u675F\u6DFB\u52A0</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u4E0D\u65AD\u5730\u79FB\u52A8\u6307\u9488</span>
        prev <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        tmp <span class="token operator">=</span> tmp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      tmp <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5229\u7528key\u65B0\u5EFA\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5934\u63D2\u6CD5</span>
    <span class="token comment">// \u63D2\u5165\u5230\u5934\u90E8</span>
    <span class="token comment">// node.next = loc;</span>
    <span class="token comment">// \u66F4\u65B0\u6570\u7EC4</span>
    <span class="token comment">// nodes[idx] = node;</span>

    <span class="token comment">// \u5C3E\u63D2\u6CD5 </span>
    <span class="token comment">// \u5982\u679Ctmp\u4E3Anull\u4EE3\u8868\u94FE\u8868\u4E3A\u7A7A\uFF0C\u5219\u9700\u8981\u66F4\u65B0\u6570\u7EC4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tmp<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loc<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            prev<span class="token punctuation">.</span>next <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prev <span class="token operator">=</span> loc<span class="token punctuation">;</span>
        loc <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loc<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        loc <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> key<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span> next<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> <span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56E0\u4E3A nodes \u7684\u957F\u5EA6\u53EA\u6709 10009\uFF0C\u5BF9\u5E94\u7684\u5341\u8FDB\u5236\u7684 10011100011001\uFF08\u603B\u957F\u5EA6\u4E3A 32 \u4F4D\uFF0C\u5176\u4F59\u9AD8\u4F4D\u90FD\u662F 0\uFF09</span>
    <span class="token comment">// \u4E3A\u4E86\u8BA9 key \u5BF9\u5E94\u7684 hash \u9AD8\u4F4D\u4E5F\u53C2\u4E0E\u8FD0\u7B97\uFF0C\u8FD9\u91CC\u5BF9 hashCode \u8FDB\u884C\u53F3\u79FB\u5F02\u6216</span>
    <span class="token comment">// \u4F7F\u5F97 hashCode \u7684\u9AD8\u4F4D\u968F\u673A\u6027\u548C\u4F4E\u4F4D\u968F\u673A\u6027\u90FD\u80FD\u4F53\u73B0\u5728\u4F4E 16 \u4F4D\u4E2D</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hash <span class="token operator">^=</span> <span class="token punctuation">(</span>hash <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> hash <span class="token operator">%</span> nodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5206\u6876\u6570\u7EC4\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u5206\u6876\u6570\u7EC4\u89E3\u6CD5" aria-hidden="true">#</a> \uFF083\uFF09\u5206\u6876\u6570\u7EC4\u89E3\u6CD5</h3><p>\u5206\u6876\u6570\u7EC4\u89E3\u6CD5\uFF1A</p><ul><li>\u505A\u6CD5\uFF1A\u5C06\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u6570\u5B57\u7684\u6BCF\u4E00\u4F4D\u4EE3\u8868\u4E00\u4E2A key \u503C</li><li>\u539F\u7406\uFF1A\u8FD9\u6837\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u5C31\u4EE3\u8868\u4E86 32 \u4E2A\u6570\uFF0C\u9898\u76EE\u4E2D key \u7684\u8303\u56F4\u4E3A 10<sup>6</sup> \uFF0C10<sup>6</sup> / 32 = 31250\uFF0C\u6240\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u5927\u4E8E 31250 \u957F\u5EA6\u7684\u6570\u7EC4\u5C31\u53EF\u4EE5\u5305\u542B\u5168\u90E8\u7684\u6570\u4E86\u3002 <ul><li>\u5728\u529B\u6263\u4E2D\uFF0C\u4E09\u5343\u591A\u957F\u5EA6\u7684\u6570\u7EC4\u7684\u5185\u5B58\uFF0848.8 MB\uFF09\u5927\u4E8E\u56DB\u5343\u957F\u5EA6\uFF0846.6 MB\uFF09\uFF0C\u53EF\u80FD\u662F\u865A\u62DF\u673A\u4F18\u5316\u95EE\u9898</li></ul></li><li>\u597D\u5904\uFF1A\u7528\u6570\u7EC4\u627E\u51FA\u5927\u6982\u4F4D\u7F6E\uFF0C\u7528\u4F4D\u8FD0\u7B97\u627E\u51FA\u5177\u4F53\u4F4D\u7F6E\u3002\u6570\u7EC4\u53D6\u6570\u548C\u4F4D\u8FD0\u7B97\u53D6\u6570\u90FD\u662F\u5F88\u7701\u65F6\u7684\u64CD\u4F5C\u3002 <ul><li>\u589E\u52A0\u8FD0\u7B97\uFF1A<code>(1 &lt;&lt; loc)</code> \u2014\u2014 \u5F97\u5230\u4E00\u4E2A\u53EA\u6709\u6307\u5B9A\u4F4D\u4E3A 1 \u5176\u4ED6\u4F4D\u4E3A 0 \u7684\u6570\uFF1B<code>bs[bucket] | (1 &lt;&lt; loc)</code> \u2014\u2014 \u4F7F\u7528\u6216\u8FD0\u7B97\uFF0C\u4E0D\u6539\u53D8\u5176\u4ED6\u7684\u4F4D\u7F6E\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C06\u6307\u5B9A\u4F4D\u7F6E\u7684\u6570\u6539\u4E3A 1</li><li>\u5220\u9664\u8FD0\u7B97\uFF1A<code>~(1 &lt;&lt; loc)</code> \u2014\u2014\u5F97\u5230\u4E00\u4E2A\u53EA\u6709\u6307\u5B9A\u4F4D\u7F6E\u4E3A 0 \u5176\u4ED6\u4F4D\u4E3A 1 \u7684\u6570\uFF1B<code>bs[bucket] | (1 &lt;&lt; loc)</code> \u2014\u2014 \u4F7F\u7528\u4E0E\u8FD0\u7B97\uFF0C\u4E0D\u6539\u53D8\u5176\u4ED6\u7684\u4F4D\u7F6E\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C06\u6307\u5B9A\u4F4D\u7F6E\u7684\u6570\u6539\u4E3A 0</li><li>\u5F97\u5230\u5177\u4F53\u4F4D\u7F6E\uFF1A<code>(bs[bucket] &gt;&gt; loc) &amp; 1</code> \u5C06\u6700\u540E\u4E00\u4F4D\u53D8\u4E3A\u6307\u5B9A\u4F4D\u7F6E\uFF0C\u7136\u540E\u4E0E\u8FD0\u7B97 1 \uFF0C\u5C31\u53EF\u4EE5\u5F97\u5230\u6307\u5B9A\u4F4D\u7F6E\u7684\u6570\u5B57</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashSet</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">40000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u6876\u4E0B\u6807</span>
    <span class="token keyword">int</span> bucketIdx <span class="token operator">=</span> key <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token comment">// \u83B7\u53D6\u5177\u4F53\u4F4D\u6570</span>
    <span class="token keyword">int</span> bitIdx <span class="token operator">=</span> key <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token function">setVal</span><span class="token punctuation">(</span>bucketIdx<span class="token punctuation">,</span> bitIdx<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> bucketIdx <span class="token operator">=</span> key <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bitIdx <span class="token operator">=</span> key <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token function">setVal</span><span class="token punctuation">(</span>bucketIdx<span class="token punctuation">,</span> bitIdx<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> bucketIdx <span class="token operator">=</span> key <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bitIdx <span class="token operator">=</span> key <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getVal</span><span class="token punctuation">(</span>bucketIdx<span class="token punctuation">,</span> bitIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/*
  * \u6539\u53D8\u76F8\u5E94\u4F4D\u7F6E
  * @param bucket \u6876\u4E0B\u6807
  * @param loc \u4F4D\u4E0B\u6807
  * @param val \u5224\u65AD\u662F\u589E\u52A0\u8FD8\u662F\u5220\u9664
  */</span>
  <span class="token keyword">void</span> <span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> bucket<span class="token punctuation">,</span> <span class="token keyword">int</span> loc<span class="token punctuation">,</span> <span class="token keyword">boolean</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 			<span class="token comment">// \u6DFB\u52A0\u64CD\u4F5C</span>
      <span class="token keyword">int</span> u <span class="token operator">=</span> bs<span class="token punctuation">[</span>bucket<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> loc<span class="token punctuation">)</span><span class="token punctuation">;</span>
      bs<span class="token punctuation">[</span>bucket<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5220\u9664\u64CD\u4F5C</span>
      <span class="token keyword">int</span> u <span class="token operator">=</span> bs<span class="token punctuation">[</span>bucket<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> loc<span class="token punctuation">)</span><span class="token punctuation">;</span>
      bs<span class="token punctuation">[</span>bucket<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">boolean</span> <span class="token function">getVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> bucket<span class="token punctuation">,</span> <span class="token keyword">int</span> loc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u6307\u5B9A\u4F4D\u7F6E</span>
    <span class="token keyword">int</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>bs<span class="token punctuation">[</span>bucket<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> loc<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> u <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),m=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])])],-1),v=a(`<h2 id="\u4E09\u5341\u4E5D\u3001\u51FA\u754C\u7684\u8DEF\u5F84\u6570" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5341\u4E5D\u3001\u51FA\u754C\u7684\u8DEF\u5F84\u6570" aria-hidden="true">#</a> \u4E09\u5341\u4E5D\u3001\u51FA\u754C\u7684\u8DEF\u5F84\u6570</h2><p>\u539F\u9898\u94FE\u63A5\uFF1A</p><p>https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485426&amp;idx=1&amp;sn=071aec0bf5bc2e20c58f4cbb3dcb0fbc&amp;chksm=fd9cacedcaeb25fb895cb99963dcfcde6b10268893a085eed4000b48bf070cecbdf7c81bf991&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C576. \u51FA\u754C\u7684\u8DEF\u5F84\u6570\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u4F60\u4E00\u4E2A\u5927\u5C0F\u4E3A m x n \u7684\u7F51\u683C\u548C\u4E00\u4E2A\u7403\u3002\u7403\u7684\u8D77\u59CB\u5750\u6807\u4E3A [startRow, startColumn] \u3002\u4F60\u53EF\u4EE5\u5C06\u7403\u79FB\u5230\u5728\u56DB\u4E2A\u65B9\u5411\u4E0A\u76F8\u90BB\u7684\u5355\u5143\u683C\u5185\uFF08\u53EF\u4EE5\u7A7F\u8FC7\u7F51\u683C\u8FB9\u754C\u5230\u8FBE\u7F51\u683C\u4E4B\u5916\uFF09\u3002\u4F60 \u6700\u591A \u53EF\u4EE5\u79FB\u52A8 maxMove \u6B21\u7403\u3002</p><p>\u7ED9\u4F60\u4E94\u4E2A\u6574\u6570 m\u3001n\u3001maxMove\u3001startRow \u4EE5\u53CA startColumn \uFF0C\u627E\u51FA\u5E76\u8FD4\u56DE\u53EF\u4EE5\u5C06\u7403\u79FB\u51FA\u8FB9\u754C\u7684\u8DEF\u5F84\u6570\u91CF\u3002\u56E0\u4E3A\u7B54\u6848\u53EF\u80FD\u975E\u5E38\u5927\uFF0C\u8FD4\u56DE\u5BF9 109 + 7 \u53D6\u4F59 \u540E\u7684\u7ED3\u679C\u3002</p><p>\u793A\u4F8B1\uFF1A</p><ul><li>\u8F93\u5165\uFF1Am = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0</li><li>\u8F93\u51FA\uFF1A6</li><li>\u89E3\u91CA\uFF1A</li></ul><p>\u79FB\u52A8\u4E00\u6B21\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|&lt;---	 	\u2191		  |					   |
 --\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|							|					   |
 --\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u79FB\u52A8\u4E24\u6B21\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|  |	|     |					   |
 --|\u2014\u2014|\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|	 \u21B2  \u2186    |					  |
 --\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
 
 \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|    -------|----\u2191----&gt; |
 --\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
|	          |					  |
 --\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= m, n &lt;= 50</code></li><li><code>0 &lt;= maxMove &lt;= 50</code></li><li><code>0 &lt;= startRow &lt; m</code></li><li><code>0 &lt;= startColumn &lt; n</code></li></ul></blockquote><h3 id="_1-\u8BB0\u5FC6\u5316\u641C\u7D22" tabindex="-1"><a class="header-anchor" href="#_1-\u8BB0\u5FC6\u5316\u641C\u7D22" aria-hidden="true">#</a> \uFF081\uFF09\u8BB0\u5FC6\u5316\u641C\u7D22</h3><p>\u8FD9\u9053\u9898\u548C\u7B2C\u4E09\u5341\u4E03\u9898\u601D\u8DEF\u4E00\u81F4\uFF0C\u7B2C\u4E09\u5341\u4E03\u9898\u662F\u4E00\u7EF4\u8DEF\u5F84\uFF0C\u8FD9\u9053\u9898\u662F\u4E8C\u7EF4\u8DEF\u5F84\u3002</p><p>\u5F00\u59CB\u627E\u9012\u5F52\u51FA\u53E3\uFF1A</p><ul><li>\u5DF2\u7ECF\u51FA\u754C\u7684\u60C5\u51B5\u5219\u8FD4\u56DE 1\uFF1B</li><li>\u5982\u679C\u65E0\u6CD5\u51FA\u754C\u5219\u8FD4\u56DE 0\uFF0C\u65E0\u6CD5\u51FA\u754C\u6307\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB\uFF0C\u76F4\u7EBF\u5411\u4E0A\u4E0B\u5DE6\u53F3\u90FD\u65E0\u6CD5\u51FA\u754C\uFF1B</li><li>\u5DF2\u7ECF\u8BA1\u7B97\u8FC7\u7684\u6570\u636E\u76F4\u63A5\u8FD4\u56DE\u3002</li></ul><p>\u9012\u5F52\u5411\u4E0B\u6761\u4EF6\uFF1A</p><ul><li>\u5411\u4E0A\u4E0B\u5DE6\u53F3\u79FB\u52A8\uFF0C\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB\u51CF\u4E00</li></ul><p>\u7F13\u51B2\u6570\u7EC4\uFF1A</p><ul><li>\u4E09\u7EF4\u6570\u7EC4\uFF0C\u7B2C\u4E00\u7EF4\u548C\u7B2C\u4E8C\u7EF4\u4EE3\u8868\u4F4D\u7F6E\uFF0C\u7B2C\u4E09\u7EF4\u4EE3\u8868\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token keyword">int</span> MOD <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findPaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> maxMove<span class="token punctuation">,</span> <span class="token keyword">int</span> startRow<span class="token punctuation">,</span> <span class="token keyword">int</span> startColumn<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u53EF\u8D70\u8DDD\u79BB\u57280~maxMove\uFF0C\u6240\u4EE5\u6570\u7EC4\u8981\u5B9A\u4E49\u591A\u4E00\u4E2A\u4F4D\u7F6E</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>maxMove <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u7B2C\u4E09\u7EF4\u7684\u6570\u7EC4\u5168\u90E8\u7F6E\u4E3A-1</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>cache<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> startRow<span class="token punctuation">,</span> startColumn<span class="token punctuation">,</span> maxMove<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cache<span class="token punctuation">,</span> <span class="token keyword">int</span> startRow<span class="token punctuation">,</span> <span class="token keyword">int</span> startColumn<span class="token punctuation">,</span> <span class="token keyword">int</span> maxMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> cache<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> cache<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u51FA\u754C\u5219\u4EE3\u88681\u4E2A\u8DEF\u5F84</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startColumn <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> startRow <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> startColumn <span class="token operator">==</span> n <span class="token operator">||</span> startRow <span class="token operator">==</span> m<span class="token punctuation">)</span> 
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u8BA1\u7B97\u8FC7\u5219\u76F4\u63A5\u8FD4\u56DE</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cache<span class="token punctuation">[</span>startRow<span class="token punctuation">]</span><span class="token punctuation">[</span>startColumn<span class="token punctuation">]</span><span class="token punctuation">[</span>maxMove<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> cache<span class="token punctuation">[</span>startRow<span class="token punctuation">]</span><span class="token punctuation">[</span>startColumn<span class="token punctuation">]</span><span class="token punctuation">[</span>maxMove<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u4E0A\u4E0B\u5DE6\u53F3\u90FD\u65E0\u6CD5\u51FA\u754C\uFF0C\u5373\u5230\u8FBE4\u6761\u8FB9\u7684\u8DDD\u79BB\u90FD\u5927\u4E8E\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB</span>
    <span class="token comment">// \u5219\u8FD4\u56DE0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startRow <span class="token operator">&gt;=</span> maxMove <span class="token operator">&amp;&amp;</span> startColumn <span class="token operator">&gt;=</span> maxMove <span class="token operator">&amp;&amp;</span> m <span class="token operator">-</span> startRow <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&gt;=</span> maxMove
        <span class="token operator">&amp;&amp;</span> n <span class="token operator">-</span> startColumn <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&gt;=</span> maxMove<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cache<span class="token punctuation">[</span>startRow<span class="token punctuation">]</span><span class="token punctuation">[</span>startColumn<span class="token punctuation">]</span><span class="token punctuation">[</span>maxMove<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u4E0B\u9762\u5F00\u59CB\u9012\u5F52\u8BA1\u7B97\u8DEF\u5F84\u6570</span>
    
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5411\u4E0A</span>
    sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> startRow <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> startColumn<span class="token punctuation">,</span> maxMove <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">%=</span> MOD<span class="token punctuation">;</span>
    <span class="token comment">// \u5411\u4E0B</span>
    sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> startRow <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> startColumn<span class="token punctuation">,</span> maxMove <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">%=</span> MOD<span class="token punctuation">;</span>
    <span class="token comment">// \u5411\u5DE6</span>
    sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> startRow<span class="token punctuation">,</span> startColumn <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> maxMove <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">%=</span> MOD<span class="token punctuation">;</span>
    <span class="token comment">// \u5411\u53F3</span>
    sum <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>cache<span class="token punctuation">,</span> startRow<span class="token punctuation">,</span> startColumn <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> maxMove <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">%=</span> MOD<span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u7ED3\u679C\u7F13\u51B2\u8D77\u6765</span>
    cache<span class="token punctuation">[</span>startRow<span class="token punctuation">]</span><span class="token punctuation">[</span>startColumn<span class="token punctuation">]</span><span class="token punctuation">[</span>maxMove<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">;</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),b=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5B9E\u9645\u662F\u586B\u5145\u4E09\u7EF4\u6570\u7EC4\uFF0C\u5C31\u50CF\u8BA1\u7B97\u957F\u65B9\u4F53\u7684\u4F53\u79EF\uFF0C\u957F\u5BBD\u4EE3\u8868\u5750\u6807\uFF0C\u9AD8\u4EE3\u8868\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB\uFF0C\u6240\u4EE5\u603B\u590D\u6742\u5EA6\u4E3A\uFF1A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\xD7"),n("mi",null,"n"),n("mo",null,"\xD7"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"M"),n("mi",null,"o"),n("mi",null,"v"),n("mi",null,"e"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( m \\times n \\times maxMove )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\xD7"),n("mi",null,"n"),n("mo",null,"\xD7"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"M"),n("mi",null,"o"),n("mi",null,"v"),n("mi",null,"e"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( m \\times n \\times maxMove )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mclose"},")")])])])])],-1),h=n("h3",{id:"_2-\u52A8\u6001\u89C4\u5212",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-\u52A8\u6001\u89C4\u5212","aria-hidden":"true"},"#"),s(" \uFF082\uFF09\u52A8\u6001\u89C4\u5212")],-1),y=n("p",null,"\u4E0A\u9762\u4F7F\u7528\u4E86 \u9012\u5F52 + \u8BB0\u5FC6\u5316\u641C\u7D22\uFF0C\u8FD9\u5C0F\u8282\u5C06\u5176\u8F6C\u6362\u6210\u52A8\u6001\u89C4\u5212\u3002",-1),g=n("ul",null,[n("li",null,"\u72B6\u6001\u8F6C\u79FB\uFF1A\u5F53\u524D\u683C\u7684\u8DEF\u5F84\u7B49\u4E8E\u4E0A\u4E0B\u5DE6\u53F3\u7684\u8DEF\u5F84\u76F8\u52A0")],-1),w=n("p",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"s"),n("mi",null,"t"),n("mi",null,"e"),n("mi",null,"p"),n("mo",{stretchy:"false"},"]"),n("mo",null,"="),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"s"),n("mi",null,"t"),n("mi",null,"e"),n("mi",null,"p"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",null,"+"),n("mn",null,"1"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"s"),n("mi",null,"t"),n("mi",null,"e"),n("mi",null,"p"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"s"),n("mi",null,"t"),n("mi",null,"e"),n("mi",null,"p"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",null,"+"),n("mn",null,"1"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"s"),n("mi",null,"t"),n("mi",null,"e"),n("mi",null,"p"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"f[(x,y)][step] = f[(x-1,y)][step-1] + f[(x+1,y)][step-1] f[(x,y-1)][step-1]f[(x,y+1)][step-1]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]")])])])],-1),f=n("ul",null,[n("li",null,"\u5B58\u50A8\u6570\u7EC4\uFF1A\u8FD9\u91CC\u5C06\u4E09\u7EF4\u6570\u7EC4\u53D8\u4E3A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5B9A\u4E49\u4F4D\u7F6E\u7684\u4E8C\u7EF4\u53D8\u6210\u4E86\u4E00\u7EF4\uFF0C\u8FD9\u6837\u5C31\u548C\u7B2C\u4E09\u5341\u4E03\u9898\u4E00\u81F4\u4E86\u3002"),n("li",null,[s("\u521D\u59CB\u5316\u6570\u636E\uFF1A\u52A8\u6001\u89C4\u5212\u9700\u8981\u521D\u59CB\u6570\u636E\u6765\u6EDA\u96EA\u7403\uFF0C\u521D\u59CB\u6570\u636E\u662F\u9012\u5F52\u4E2D\u7684 "),n("strong",null,"\u9000\u51FA\u9012\u5F52\u6761\u4EF6"),s("\uFF0C\u5373\u5728\u8FB9\u7F18\u683C\u7684\u65F6\u5019\u3002 "),n("ul",null,[n("li",null,[s("\u56E0\u4E3A\u52A8\u6001\u89C4\u5212\u662F\u5728\u6570\u7EC4\u4E2D\u8BA1\u7B97\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u50CF\u9012\u5F52\u4E00\u6837\u8D85\u51FA\u6570\u7EC4\u8303\u56F4\u3002\u65E2\u7136\u4E0D\u80FD\u8D85\u51FA\u6570\u7EC4\u8303\u56F4\uFF0C\u90A3\u5C31\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB "),n("strong",null,"\u4ECE 1 \u5F00\u59CB\u904D\u5386"),s("\uFF0C\u4E0D\u4ECE 0 \u5F00\u59CB\u4E86\u3002")]),n("li",null,[s("\u5982\u679C\u5269\u4F59\u53EF\u8D70\u8DDD\u79BB\u662F 1\uFF0C\u5C31\u53EF\u4EE5\u77E5\u9053 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{separator:"true"},","),n("mi",null,"y"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mn",null,"1"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"f[(x,y)][1]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"[("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mclose"},")]"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]")])])]),s(" \u7684\u5185\u5BB9\uFF0C\u5728\u89D2\u843D\u7684\u8DEF\u5F84\u4E3A 2\uFF0C\u5728\u8FB9\u7684\u8DEF\u5F84\u4E3A 1\uFF0C\u4E2D\u95F4\u7684\u8DEF\u5F84\u4E3A 0\uFF0C\u4F8B\u5982\u4E0B\u9762\u8868\u683C")])])])],-1),x=a(`<table><thead><tr><th>2</th><th>1</th><th>1</th><th>2</th></tr></thead><tbody><tr><td><strong>1</strong></td><td>0</td><td>0</td><td><strong>1</strong></td></tr><tr><td><strong>2</strong></td><td><strong>1</strong></td><td><strong>1</strong></td><td><strong>2</strong></td></tr></tbody></table><p>\u5168\u90E8\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">1e9</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token class-name">N</span><span class="token punctuation">;</span>
  <span class="token comment">// int m, int n, int maxMove, int startRow, int startColumn</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findPaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> _m<span class="token punctuation">,</span> <span class="token keyword">int</span> _n<span class="token punctuation">,</span> <span class="token keyword">int</span> _N<span class="token punctuation">,</span> <span class="token keyword">int</span> _i<span class="token punctuation">,</span> <span class="token keyword">int</span> _j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">=</span> _m<span class="token punctuation">;</span> n <span class="token operator">=</span> _n<span class="token punctuation">;</span> <span class="token class-name">N</span> <span class="token operator">=</span> _N<span class="token punctuation">;</span>

    <span class="token comment">// f[i][j] \u4EE3\u8868\u4ECE idx \u4E3A i \u7684\u4F4D\u7F6E\u51FA\u53D1\uFF0C\u79FB\u52A8\u6B65\u6570\u4E0D\u8D85\u8FC7 j \u7684\u8DEF\u5F84\u6570\u91CF</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">*</span> n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u521D\u59CB\u5316\u8FB9\u7F18\u683C\u5B50\u7684\u8DEF\u5F84\u6570\u91CF</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u521D\u59CB\u5316\u7B2C1\u884C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u6700\u540E1\u884C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u7B2C1\u5217</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u521D\u59CB\u5316\u6700\u540E1\u5217</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B9A\u4E49\u53EF\u79FB\u52A8\u7684\u56DB\u4E2A\u65B9\u5411</span>
    <span class="token comment">// \u4FBF\u4E8E\u4F7F\u7528\u5FAA\u73AF\u6765\u904D\u5386\u56DB\u4E2A\u65B9\u5411</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dirs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4ECE1\u5F00\u59CB\u679A\u4E3E\u300C\u53EF\u79FB\u52A8\u6B65\u6570\u300D</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> step <span class="token operator">&lt;=</span> <span class="token class-name">N</span><span class="token punctuation">;</span> step<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u679A\u4E3E\u6240\u6709\u7684\u300C\u4F4D\u7F6E\u300D</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> m <span class="token operator">*</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C06\u4E00\u7EF4\u4F4D\u7F6E\u8F6C\u4E3A\u4E8C\u7EF4\u4F4D\u7F6E</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">parseIdx</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token function">parseIdx</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u56DB\u4E2A\u65B9\u5411</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> d <span class="token operator">:</span> dirs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8BA1\u7B97\u51FA\u56DB\u4E2A\u65B9\u5411\u7684x\u548Cy</span>
          <span class="token keyword">int</span> nx <span class="token operator">=</span> x <span class="token operator">+</span> d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ny <span class="token operator">=</span> y <span class="token operator">+</span> d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5982\u679C\u4F4D\u7F6E\u6709\u300C\u76F8\u90BB\u683C\u5B50\u300D\uFF0C\u5219\u300C\u76F8\u90BB\u683C\u5B50\u300D\u53C2\u4E0E\u72B6\u6001\u8F6C\u79FB</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>nx <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nx <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> ny <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> ny <span class="token operator">&lt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            f<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">+=</span> f<span class="token punctuation">[</span><span class="token function">getIndex</span><span class="token punctuation">(</span>nx<span class="token punctuation">,</span> ny<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>step <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            f<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">%=</span> mod<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6700\u7EC8\u7ED3\u679C\u4E3A\u4ECE\u8D77\u59CB\u70B9\u89E6\u53D1\uFF0C\u6700\u5927\u79FB\u52A8\u6B65\u6570\u4E0D\u8D85 N \u7684\u8DEF\u5F84\u6570\u91CF</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span><span class="token function">getIndex</span><span class="token punctuation">(</span>_i<span class="token punctuation">,</span> _j<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4E3A\u6BCF\u4E2A\u300C\u8FB9\u7F18\u300D\u683C\u5B50\uFF0C\u6DFB\u52A0\u4E00\u6761\u8DEF\u5F84</span>
  <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> step <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> step <span class="token operator">&lt;=</span> <span class="token class-name">N</span><span class="token punctuation">;</span> step<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      f<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5C06 (x, y) \u8F6C\u6362\u4E3A index</span>
  <span class="token keyword">int</span> <span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">*</span> n <span class="token operator">+</span> y<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5C06 index \u89E3\u6790\u56DE (x, y)</span>
  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">parseIdx</span><span class="token punctuation">(</span><span class="token keyword">int</span> idx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>idx <span class="token operator">/</span> n<span class="token punctuation">,</span> idx <span class="token operator">%</span> n<span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),M=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u4E24\u5C42\u5FAA\u73AF\u7684\u590D\u6742\u5EA6\u5206\u522B\u4E3A maxMove\u3001m * n\uFF0C\u6240\u4EE5\u603B\u590D\u6742\u5EA6\u4E3A\uFF1A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\xD7"),n("mi",null,"n"),n("mo",null,"\xD7"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"M"),n("mi",null,"o"),n("mi",null,"v"),n("mi",null,"e"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( m \\times n \\times maxMove )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\xD7"),n("mi",null,"n"),n("mo",null,"\xD7"),n("mi",null,"m"),n("mi",null,"a"),n("mi",null,"x"),n("mi",null,"M"),n("mi",null,"o"),n("mi",null,"v"),n("mi",null,"e"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O ( m \\times n \\times maxMove )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"ma"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mclose"},")")])])])])],-1),_=a(`<h2 id="\u56DB\u5341\u3001\u8BBE\u8BA1\u54C8\u5E0C\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u56DB\u5341\u3001\u8BBE\u8BA1\u54C8\u5E0C\u6620\u5C04" aria-hidden="true">#</a> \u56DB\u5341\u3001\u8BBE\u8BA1\u54C8\u5E0C\u6620\u5C04</h2><p>\u539F\u9898\u94FE\u63A5\uFF1A</p><p>https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485436&amp;idx=1&amp;sn=a07c6676c412cd692038d9b4631bcaf8&amp;chksm=fd9cace3caeb25f5cfdb5ea34d80cfa593d61e1038de022e0bf7fc0069d5763749db7d2cf682&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C706. \u8BBE\u8BA1\u54C8\u5E0C\u6620\u5C04\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Easy</strong>\u3002</p><p>\u4E0D\u4F7F\u7528\u4EFB\u4F55\u5185\u5EFA\u7684\u54C8\u5E0C\u8868\u5E93\u8BBE\u8BA1\u4E00\u4E2A\u54C8\u5E0C\u6620\u5C04\uFF08HashMap\uFF09\u3002</p><p>\u5B9E\u73B0 MyHashMap \u7C7B\uFF1A</p><ul><li>MyHashMap() \u7528\u7A7A\u6620\u5C04\u521D\u59CB\u5316\u5BF9\u8C61</li><li>void put(int key, int value) \u5411 HashMap \u63D2\u5165\u4E00\u4E2A\u952E\u503C\u5BF9 (key, value) \u3002\u5982\u679C key \u5DF2\u7ECF\u5B58\u5728\u4E8E\u6620\u5C04\u4E2D\uFF0C\u5219\u66F4\u65B0\u5176\u5BF9\u5E94\u7684\u503C value \u3002</li><li>int get(int key) \u8FD4\u56DE\u7279\u5B9A\u7684 key \u6240\u6620\u5C04\u7684 value \uFF1B\u5982\u679C\u6620\u5C04\u4E2D\u4E0D\u5305\u542B key \u7684\u6620\u5C04\uFF0C\u8FD4\u56DE -1 \u3002</li><li>void remove(key) \u5982\u679C\u6620\u5C04\u4E2D\u5B58\u5728 key \u7684\u6620\u5C04\uFF0C\u5219\u79FB\u9664 key \u548C\u5B83\u6240\u5BF9\u5E94\u7684 value \u3002</li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>0 &lt;= key, value &lt;= 10<sup>6</sup></li><li>\u6700\u591A\u8C03\u7528 10<sup>4</sup> \u6B21 put\u3001get \u548C remove \u65B9\u6CD5</li></ul><p>\u8FDB\u9636\uFF1A\u4F60\u80FD\u5426\u4E0D\u4F7F\u7528\u5185\u7F6E\u7684 HashMap \u5E93\u89E3\u51B3\u6B64\u95EE\u9898\uFF1F</p></blockquote><h3 id="_1-\u6570\u7EC4\u89E3\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u7EC4\u89E3\u6CD5-1" aria-hidden="true">#</a> \uFF081\uFF09\u6570\u7EC4\u89E3\u6CD5</h3><p>\u548C\u7B2C\u4E09\u5341\u516B\u9898\u4E00\u81F4\uFF0C\u56E0\u4E3A\u9650\u5236\u4E86 key \u548C value \u7684\u8303\u56F4\uFF0C\u6240\u4EE5\u53EF\u4EE5\u7528\u6570\u7EC4\u8BA9 key \u76F4\u63A5\u5B9A\u4F4D\u5230\u4F4D\u7F6E\u3002key \u4F5C\u4E3A\u4E0B\u6807\uFF0Cvalue \u4E3A\u6570\u7EC4\u4E2D\u7684\u6570\u636E\uFF0C\u7B2C\u4E09\u5341\u516B\u9898\u6570\u7EC4\u4E2D\u7684\u6570\u636E\u662F\u5E03\u5C14\u503C\uFF0C\u6CA1\u4EC0\u4E48\u4EF7\u503C\u3002</p><ul><li>\u5B9A\u4E49\u6CA1\u6709\u6570\u636E\uFF0C\u53EF\u4EE5\u4F7F\u7528\u6574\u578B\u7684\u6700\u5927\u503C\u6216\u8005 -1\uFF0C\u4E0B\u9762\u4EE3\u7801\u4F7F\u7528\u7684\u662F\u6574\u578B\u7684\u6700\u5927\u503C</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashMap</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> INF <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
  <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">1000009</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token class-name">MyHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521D\u59CB\u5316\u6570\u7EC4\u4E2D\u7684\u5168\u90E8\u683C</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span> INF<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56E0\u4E3A\u662F\u8986\u76D6\u653E\u5165\uFF0C\u6240\u4EE5\u4E0D\u7528\u5224\u65AD\u4E4B\u524D\u662F\u5426\u5B58\u5728</span>
    map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u6700\u5927\u503C\u5219\u8FD4\u56DE-1</span>
    <span class="token keyword">return</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">==</span> INF <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u6570\u636E\u91CD\u65B0\u8D4B\u503C\u6574\u578B\u7684\u6700\u5927\u503C</span>
    map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> INF<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),O=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])])],-1),j=a(`<h3 id="_2-\u94FE\u8868\u6570\u7EC4\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u94FE\u8868\u6570\u7EC4\u6CD5" aria-hidden="true">#</a> \uFF082\uFF09\u94FE\u8868\u6570\u7EC4\u6CD5</h3><p>\u94FE\u8868\u6570\u7EC4\u6CD5\u5927\u81F4\u7684\u4EE3\u7801\u4E0E\u7B2C\u4E09\u5341\u516B\u9898\u7684\u4E00\u81F4\uFF0C\u90FD\u662F\u8BA1\u7B97\u54C8\u5E0C\u503C\uFF0C\u76F4\u63A5\u5B9A\u4F4D\u6570\u7EC4\u4E2D\u7684\u5185\u5BB9\uFF0C\u7136\u540E\u770B\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u94FE\u8868\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashMap</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> key<span class="token punctuation">,</span> value<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> _key<span class="token punctuation">,</span> <span class="token keyword">int</span> _value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      key <span class="token operator">=</span> _key<span class="token punctuation">;</span>
      value <span class="token operator">=</span> _value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u7531\u4E8E\u4F7F\u7528\u7684\u662F\u300C\u94FE\u8868\u300D\uFF0C\u8FD9\u4E2A\u503C\u53EF\u4EE5\u53D6\u5F97\u5F88\u5C0F</span>
  <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token number">10009</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E key \u83B7\u53D6\u54C8\u5E0C\u6876\u7684\u4F4D\u7F6E</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u5DF2\u7ECF\u5B58\u5728</span>
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> tmp <span class="token operator">=</span> loc<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
          tmp<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prev <span class="token operator">=</span> tmp<span class="token punctuation">;</span>
        tmp <span class="token operator">=</span> tmp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      tmp <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5934\u63D2\u6CD5</span>
    <span class="token comment">// node.next = loc;</span>
    <span class="token comment">// nodes[idx] = node;</span>

    <span class="token comment">// \u5C3E\u63D2\u6CD5 </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tmp<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loc<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>prev <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            prev<span class="token punctuation">.</span>next <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prev <span class="token operator">=</span> loc<span class="token punctuation">;</span>
        loc <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> loc <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>loc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>loc<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> loc<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        loc <span class="token operator">=</span> loc<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> <span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56E0\u4E3A nodes \u7684\u957F\u5EA6\u53EA\u6709 10009\uFF0C\u5BF9\u5E94\u7684\u5341\u8FDB\u5236\u7684 10011100011001\uFF08\u603B\u957F\u5EA6\u4E3A 32 \u4F4D\uFF0C\u5176\u4F59\u9AD8\u4F4D\u90FD\u662F 0\uFF09</span>
    <span class="token comment">// \u4E3A\u4E86\u8BA9 key \u5BF9\u5E94\u7684 hash \u9AD8\u4F4D\u4E5F\u53C2\u4E0E\u8FD0\u7B97\uFF0C\u8FD9\u91CC\u5BF9 hashCode \u8FDB\u884C\u53F3\u79FB\u5F02\u6216</span>
    <span class="token comment">// \u4F7F\u5F97 hashCode \u7684\u9AD8\u4F4D\u968F\u673A\u6027\u548C\u4F4E\u4F4D\u968F\u673A\u6027\u90FD\u80FD\u4F53\u73B0\u5728\u4F4E 16 \u4F4D\u4E2D</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hash <span class="token operator">^=</span> <span class="token punctuation">(</span>hash <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> hash <span class="token operator">%</span> nodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),N=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u7531\u4E8E\u6CA1\u6709\u6269\u5BB9\u7684\u903B\u8F91\uFF0C\u6700\u574F\u60C5\u51B5\u4E0B\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( n )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u56E0\u4E3A\u5982\u679C\u4E00\u76F4\u5B9A\u4F4D\u5230\u6570\u7EC4\u7684\u540C\u4E00\u4E2A\u4F4D\u7F6E\u5C31\u9000\u51FA\u6210\u5355\u7EAF\u7684\u94FE\u8868\u3002\u4E00\u822C\u60C5\u51B5\u4E0B\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])])],-1),I=a(`<h3 id="_3-\u5F00\u653E\u5BFB\u5740\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u5F00\u653E\u5BFB\u5740\u89E3\u6CD5" aria-hidden="true">#</a> \uFF083\uFF09\u5F00\u653E\u5BFB\u5740\u89E3\u6CD5</h3><p>\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u9664\u4E86\u5EFA\u7ACB\u94FE\u8868\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u504F\u79FB\u54C8\u5E0C\u503C\u3002\u5982\u679C\u5F53\u524D\u4E0B\u6807\u5DF2\u7ECF\u5B58\u5728\u6570\u636E\uFF0C\u5219\u5411\u53F3\u504F\u79FB\u4E00\u683C\uFF0C\u518D\u7EE7\u7EED\u5224\u65AD\u662F\u5426\u5B58\u5728\u6570\u636E\u3002\u56E0\u4E3A\u6700\u591A\u64CD\u4F5C 10<sup>4</sup> \u6B21\uFF0C\u6240\u4EE5 Node \u6570\u7EC4\u5927\u4E8E 10<sup>4</sup> \u5373\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyHashMap</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> key<span class="token punctuation">,</span> value<span class="token punctuation">;</span>
    <span class="token class-name">Node</span> next<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isDeleted<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> _key<span class="token punctuation">,</span> <span class="token keyword">int</span> _value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      key <span class="token operator">=</span> _key<span class="token punctuation">;</span>
      value <span class="token operator">=</span> _value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u51B2\u7A81\u65F6\u7684\u504F\u79FB\u91CF</span>
  <span class="token keyword">int</span> OFFSET <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span><span class="token number">10009</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u5230\u5B58\u50A8\u7684\u4E0B\u6807</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5982\u679C\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u76F4\u63A5\u8986\u76D6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>isDeleted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u4E3A\u7A7A\u5219\u65B0\u5EFA\u4E2ANode\u5BF9\u8C61</span>
      node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> nodes<span class="token punctuation">[</span><span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5C06\u5220\u9664\u7684\u6807\u5FD7\u4F4D\u7F6E\u4E3Atrue\uFF0C\u8FD9\u6837\u5C31\u4E0D\u4F1A\u9891\u7E41\u5730\u65B0\u5EFA\u5BF9\u8C61\u548C\u56DE\u6536\u5BF9\u8C61</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> node<span class="token punctuation">.</span>isDeleted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span> node <span class="token operator">=</span> nodes<span class="token punctuation">[</span><span class="token function">getIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> node<span class="token punctuation">.</span>isDeleted <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> node<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5F53 map \u4E2D\u6CA1\u6709 key \u7684\u65F6\u5019\uFF0CgetIndex \u603B\u662F\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u4F4D\u7F6E</span>
  <span class="token comment">// \u5F53 map \u4E2D\u5305\u542B key \u7684\u65F6\u5019\uFF0CgetIndex \u603B\u662F\u8FD4\u56DE key \u6240\u5728\u7684\u4F4D\u7F6E</span>
  <span class="token keyword">int</span> <span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    hash <span class="token operator">^=</span> <span class="token punctuation">(</span>hash <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nodes<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> hash <span class="token operator">%</span> n<span class="token punctuation">;</span>
    <span class="token comment">// \u9000\u51FA\u7684\u6761\u4EF6\uFF1Anode\u4E3A\u7A7A\uFF0Cnode\u7684key\u7B49\u4E8E\u9700\u8981\u627E\u7684key</span>
    <span class="token comment">// \u7EE7\u7EED\u5FAA\u73AF\u7684\u6761\u4EF6\uFF1A\u5728\u54C8\u5E0C\u51B2\u7A81\u7684\u60C5\u51B5\u4E0B\uFF0C\u7EE7\u7EED\u5BFB\u627E\u9700\u8981\u7684key</span>
    <span class="token comment">// \u5220\u9664\u64CD\u4F5C\u6CA1\u6709\u5C06\u6570\u636E\u7F6E\u4E3Anull\uFF0C\u904D\u5386\u6B21\u6570\u5C31\u4F1A\u589E\u591A</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> nodes<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>key <span class="token operator">!=</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FDB\u884C\u504F\u79FB</span>
      hash <span class="token operator">+=</span> OFFSET<span class="token punctuation">;</span>
      <span class="token comment">// \u9632\u6B62\u6570\u7EC4\u8D8A\u754C</span>
      idx <span class="token operator">=</span> hash <span class="token operator">%</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> idx<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),C=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u4E00\u822C\u60C5\u51B5\u4E0B\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u6781\u7AEF\u60C5\u51B5\u4E0B\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( n )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s("\uFF0C\u56E0\u4E3A\u5982\u679C\u54C8\u5E0C\u51B2\u7A81\u4E25\u91CD\u7684\u8BDD\uFF0C\u5C31\u9700\u8981\u904D\u5386\u6574\u4E2A\u6570\u7EC4\u624D\u53EF\u4EE5\u627E\u5230\u7A7A\u4F4D")]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O( 1 )")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])])],-1),L=[l,c,i,u,r,k,d,m,v,b,h,y,g,w,f,x,M,_,O,j,N,I,C];function D(z,R){return p(),e("div",null,L)}var F=t(o,[["render",D],["__file","\u7B97\u6CD5\u4E94-8\u670828.html.vue"]]);export{F as default};
