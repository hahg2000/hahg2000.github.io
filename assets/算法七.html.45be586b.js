import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as l,b as o,e as a,a as n,d as s,r as c}from"./app.e51d643c.js";const i={},u=a(`<h1 id="\u7B97\u6CD5\u4E03" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u4E03" aria-hidden="true">#</a> \u7B97\u6CD5\u4E03</h1><h2 id="\u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F" tabindex="-1"><a class="header-anchor" href="#\u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F" aria-hidden="true">#</a> \u56DB\u5341\u4E5D\u3001\u77F3\u5B50\u6E38\u620F</h2><p>\u529B\u6263\u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/stone-game-vi/</p><blockquote><p>Alice \u548C Bob \u8F6E\u6D41\u73A9\u4E00\u4E2A\u6E38\u620F\uFF0CAlice \u5148\u624B\u3002</p><p>\u4E00\u5806\u77F3\u5B50\u91CC\u603B\u5171\u6709 n \u4E2A\u77F3\u5B50\uFF0C\u8F6E\u5230\u67D0\u4E2A\u73A9\u5BB6\u65F6\uFF0C\u4ED6\u53EF\u4EE5 <strong>\u79FB\u51FA</strong> \u4E00\u4E2A\u77F3\u5B50\u5E76\u5F97\u5230\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C\u3002Alice \u548C Bob \u5BF9\u77F3\u5B50\u4EF7\u503C\u6709 <strong>\u4E0D\u4E00\u6837\u7684\u7684\u8BC4\u5224\u6807\u51C6</strong> \u3002\u53CC\u65B9\u90FD\u77E5\u9053\u5BF9\u65B9\u7684\u8BC4\u5224\u6807\u51C6\u3002</p><p>\u7ED9\u4F60\u4E24\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6574\u6570\u6570\u7EC4 aliceValues \u548C bobValues \u3002aliceValues[i] \u548C bobValues[i] \u5206\u522B\u8868\u793A Alice \u548C Bob \u8BA4\u4E3A\u7B2C i \u4E2A\u77F3\u5B50\u7684\u4EF7\u503C\u3002</p><p>\u6240\u6709\u77F3\u5B50\u90FD\u88AB\u53D6\u5B8C\u540E\uFF0C\u5F97\u5206\u8F83\u9AD8\u7684\u4EBA\u4E3A\u80DC\u8005\u3002\u5982\u679C\u4E24\u4E2A\u73A9\u5BB6\u5F97\u5206\u76F8\u540C\uFF0C\u90A3\u4E48\u4E3A\u5E73\u5C40\u3002\u4E24\u4F4D\u73A9\u5BB6\u90FD\u4F1A\u91C7\u7528 <strong>\u6700\u4F18\u7B56\u7565</strong> \u8FDB\u884C\u6E38\u620F\u3002</p><p>\u8BF7\u4F60\u63A8\u65AD\u6E38\u620F\u7684\u7ED3\u679C\uFF0C\u7528\u5982\u4E0B\u7684\u65B9\u5F0F\u8868\u793A\uFF1A</p><p>\u5982\u679C Alice \u8D62\uFF0C\u8FD4\u56DE 1 \u3002\u5982\u679C Bob \u8D62\uFF0C\u8FD4\u56DE -1 \u3002\u5982\u679C\u6E38\u620F\u5E73\u5C40\uFF0C\u8FD4\u56DE 0 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><ul><li>\u8F93\u5165\uFF1AaliceValues = [1,3], bobValues = [2,1]</li><li>\u8F93\u51FA\uFF1A1</li><li>\u89E3\u91CA\uFF1A <ul><li>\u5982\u679C Alice \u62FF\u77F3\u5B50 1 \uFF08\u4E0B\u6807\u4ECE 0\u5F00\u59CB\uFF09\uFF0C\u90A3\u4E48 Alice \u53EF\u4EE5\u5F97\u5230 3 \u5206\u3002</li><li>Bob \u53EA\u80FD\u9009\u62E9\u77F3\u5B50 0 \uFF0C\u5F97\u5230 2 \u5206\u3002</li><li>Alice \u83B7\u80DC\u3002</li></ul></li></ul><p>\u793A\u4F8B 2\uFF1A</p><ul><li>\u8F93\u5165\uFF1AaliceValues = [1,2], bobValues = [3,1]</li><li>\u8F93\u51FA\uFF1A0</li><li>\u89E3\u91CA\uFF1A <ul><li>Alice \u62FF\u77F3\u5B50 0 \uFF0C Bob \u62FF\u77F3\u5B50 1 \uFF0C\u4ED6\u4EEC\u5F97\u5206\u90FD\u4E3A 1 \u5206\u3002</li><li>\u6253\u5E73\u3002</li></ul></li></ul><p>\u63D0\u793A\uFF1A</p><ul><li><code>n == aliceValues.length == bobValues.length</code></li><li><code>1 &lt;= n &lt;= 105</code></li><li><code>1 &lt;= aliceValues[i], bobValues[i] &lt;= 100</code></li></ul></blockquote><h3 id="_1-\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u8D2A\u5FC3\u7B97\u6CD5</h3><p>\u5F53\u62FF\u4E86\u4E00\u4E2A\u77F3\u5B50\u7684\u65F6\u5019\uFF0C\u62FF\u77F3\u5B50\u7684\u4EBA\u65E2 <strong>\u83B7\u53D6\u5230\u7684\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u53C8\u8BA9\u5BF9\u9762 <strong>\u5931\u53BB\u4E86\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C</strong></p><p>\u6240\u4EE5\u9009\u62E9\u77F3\u5B50\u4F18\u5148\u9009\u62E9\uFF1A <strong>\u83B7\u53D6\u5230\u7684\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u52A0\u4E0A <strong>\u5931\u53BB\u4E86\u8FD9\u4E2A\u77F3\u5B50\u7684\u4EF7\u503C</strong> \u6700\u5927\u3002</p><p>\u4F46\u5B9E\u9645\u81EA\u5DF1\u83B7\u53D6\u5230\u53EA\u6709\u81EA\u5DF1\u8BA4\u4E3A\u7684\u4EF7\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">stoneGameVI</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> aliceValues<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bobValues<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">int</span> n <span class="token operator">=</span> aliceValues<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u5B58\u653E\u603B\u548C\u6570\u7EC4</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BA1\u7B97\u4E24\u4E2A\u6570\u7EC4\u5BF9\u5E94\u683C\u7684\u548C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> aliceValues<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> bobValues<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> o1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> o2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> sumA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sumB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5206\u522B\u7EDF\u8BA1\u4E24\u4E2A\u73A9\u5BB6\u7684\u5206\u6570</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> index <span class="token operator">=</span> sum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        sumA <span class="token operator">+=</span> aliceValues<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        sumB <span class="token operator">+=</span> bobValues<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6839\u636E\u7ED3\u679C\u5206\u522B\u8F93\u51FA\u4E0D\u540C\u7ED3\u679C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sumA <span class="token operator">==</span> sumB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sumA <span class="token operator">&gt;</span> sumB <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">networkDelayTime</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> times<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//\u90BB\u63A5\u77E9\u9635\u521D\u59CB\u5316\u56FE</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u56E0\u4E3A\u53EF\u80FD\u70B9\u4E0E\u70B9\u4E4B\u95F4\u65E0\u8FDE\u63A5\uFF0C\u56E0\u6B64\u521D\u59CB\u5316\u4E3A\u65E0\u7A77\u5927\u3002\u6B64\u5904\u4E3A\u907F\u514D33\u884C\u8BA1\u7B97\u6EA2\u51FA\uFF0C&gt;&gt;2</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> times<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment">//\u6839\u636E\u9898\u76EE\u7ED9\u7684\u4FE1\u606Ftimes\uFF0C\u5BF9graph\u521D\u59CB\u5316\u3002</span>
      <span class="token keyword">int</span> source <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> target <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      graph<span class="token punctuation">[</span>source<span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">=</span> times<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token comment">//\u521D\u59CB\u503C\u4E3Afalse,\u82E5\u8BBF\u95EE\uFF0C\u5219\u4E3Atrue\u3002</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token comment">//\u8DDD\u79BB\u8868\u3002</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>dist<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u521D\u59CB\u5316\u8DDD\u79BB\u8868\u4E3A\u65E0\u7A77\u3002</span>
    dist<span class="token punctuation">[</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             <span class="token comment">//\u521D\u59CB\u5316\u8D77\u59CB\u70B9K-K\u7684\u8DDD\u79BB\u4E3A0</span>
    <span class="token comment">//dijkstra</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//\u4E00\u6B21\u52A0\u5165\u4E00\u4E2A\u8282\u70B9\u5230\u8DEF\u5F84\u4E2D</span>
      <span class="token keyword">int</span> cur <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//\u627E\u51FA\u8DDD\u79BB\u8868\u4E2D\u6700\u5C0F\u7684\u8282\u70B9 \u6536\u5F55\u8FDB\u6765 \u5373\u9501\u6B7B\u8BE5\u70B9\uFF0C\u4EE5\u540E\u5C31\u4E0D\u7528\u4E86</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>cur <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dist<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//\uFF01vidsited[i]\u5373\u9501\u6B7B\u7684\u4E0D\u7528</span>
          cur <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      visited<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>   <span class="token comment">//\u9501\u6B7B\u4E0A\u8FF0\u627E\u5230\u7684\u8DDD\u79BB\u8868\u4E2D\u6700\u5C0F\u7684\u8282\u70B9\u3002</span>

      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//\u66F4\u65B0\u9501\u6B7B\u8282\u70B9\u4E0E\u5176\u76F8\u90BB\u8282\u70B9\u7684dist.</span>
        dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dist<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">+</span> graph<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                      <span class="token comment">//\u9898\u76EE\u8981\u6C42\uFF0C\u82E5dist\u4E2D\u6709\u672A\u5230\u8FBE\u7684\u8282\u70B9\uFF0Creturn-1\uFF1B</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      result <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61" aria-hidden="true">#</a> \u4E94\u5341\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C61</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485658&amp;idx=1&amp;sn=f298abe76d9cc058805b6a18d2523db6&amp;chksm=fd9ca3c5caeb2ad31f6faefd800471b339d21cf54988e123fc507ff07b1447ae31337d826b0e&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C416. \u5206\u5272\u7B49\u548C\u5B50\u96C6\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u542B\u6B63\u6574\u6570\u7684\u975E\u7A7A\u6570\u7EC4\u3002\u662F\u5426\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u6570\u7EC4\u5206\u5272\u6210\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4F7F\u5F97\u4E24\u4E2A\u5B50\u96C6\u7684\u5143\u7D20\u548C\u76F8\u7B49\u3002</p><p>\u6CE8\u610F:</p><ul><li>\u6BCF\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E0D\u4F1A\u8D85\u8FC7 100</li><li>\u6570\u7EC4\u7684\u5927\u5C0F\u4E0D\u4F1A\u8D85\u8FC7 200</li></ul><p>\u793A\u4F8B 1:</p><ul><li><p>\u8F93\u5165: [1, 5, 11, 5]</p></li><li><p>\u8F93\u51FA: true</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u53EF\u4EE5\u5206\u5272\u6210 [1, 5, 5] \u548C [11].</p></li></ul><p>\u793A\u4F8B 2:</p><ul><li><p>\u8F93\u5165: [1, 2, 3, 5]</p></li><li><p>\u8F93\u51FA: false</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u4E0D\u80FD\u5206\u5272\u6210\u4E24\u4E2A\u5143\u7D20\u548C\u76F8\u7B49\u7684\u5B50\u96C6.</p></li></ul><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 200</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li></ul></blockquote><h3 id="_1-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u6790" aria-hidden="true">#</a> \uFF081\uFF09\u5206\u6790</h3><p><strong>\u901A\u5E38\u300C\u80CC\u5305\u95EE\u9898\u300D\u76F8\u5173\u7684\u9898\uFF0C\u90FD\u662F\u5728\u8003\u5BDF\u6211\u4EEC\u7684\u300C\u5EFA\u6A21\u300D\u80FD\u529B\uFF0C\u4E5F\u5C31\u662F\u5C06\u95EE\u9898\u8F6C\u6362\u4E3A\u300C\u80CC\u5305\u95EE\u9898\u300D\u7684\u80FD\u529B</strong>\u3002</p><p>\u7531\u4E8E\u672C\u9898\u662F\u95EE\u6211\u4EEC\u80FD\u5426\u5C06\u4E00\u4E2A\u6570\u7EC4\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u300D\u5B50\u96C6\u3002</p><p>\u95EE\u9898\u7B49\u6548\u4E8E**\u300C\u80FD\u5426\u4ECE\u6570\u7EC4\u4E2D\u6311\u9009\u82E5\u5E72\u4E2A\u5143\u7D20\uFF0C\u4F7F\u5F97\u5143\u7D20\u603B\u548C\u7B49\u4E8E\u6240\u6709\u5143\u7D20\u603B\u548C\u7684\u4E00\u534A\u300D**\u3002</p><p>\u8FD9\u9053\u9898\u5982\u679C\u62BD\u8C61\u6210\u300C\u80CC\u5305\u95EE\u9898\u300D\u7684\u8BDD\uFF0C\u5E94\u8BE5\u662F\uFF1A</p>`,18),r=n("p",null,[n("strong",null,[s("\u6211\u4EEC\u80CC\u5305\u5BB9\u91CF\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"="),n("mi",null,"s"),n("mi",null,"u"),n("mi",null,"m"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"target = sum / 2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mord"},"/2")])])]),s(" \uFF0C\u6BCF\u4E2A\u6570\u7EC4\u5143\u7D20\u7684\u300C\u4EF7\u503C\u300D\u4E0E\u300C\u6210\u672C\u300D\u90FD\u662F\u5176\u6570\u503C\u5927\u5C0F\uFF0C\u6C42\u6211\u4EEC\u80FD\u5426\u88C5\u6EE1\u80CC\u5305\u3002")])],-1),m=a('<h3 id="_2-\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_2-\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898" aria-hidden="true">#</a> \uFF082\uFF09\u8F6C\u6362\u4E3A\u80CC\u5305\u95EE\u9898</h3><p>\u7136\u540E\u5C31\u53EF\u4EE5\u8F6C\u6362\u6210\u80CC\u5305\u95EE\u9898</p><p>\u7531\u4E8E\u6BCF\u4E2A\u6570\u5B57\uFF08\u6570\u7EC4\u5143\u7D20\uFF09\u53EA\u80FD\u88AB\u9009\u4E00\u6B21\uFF0C\u800C\u4E14\u6BCF\u4E2A\u6570\u5B57\u9009\u62E9\u4E0E\u5426\u5BF9\u5E94\u4E86**\u300C\u4EF7\u503C\u300D\u548C\u300C\u6210\u672C\u300D**\uFF0C\u6C42\u89E3\u7684\u95EE\u9898\u4E5F\u4E0E\u300C\u6700\u5927\u4EF7\u503C\u300D\u76F8\u5173\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u300C01 \u80CC\u5305\u300D\u7684\u6A21\u578B\u6765\u505A\u3002</p><p>\u5F53\u6211\u4EEC\u786E\u5B9A\u4E00\u4E2A\u95EE\u9898\u53EF\u4EE5\u8F6C\u5316\u4E3A\u300C01 \u80CC\u5305\u300D\u4E4B\u540E\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u5957\u7528\u300C01 \u80CC\u5305\u300D\u7684\u72B6\u6001\u5B9A\u4E49\u8FDB\u884C\u6C42\u89E3\u4E86\u3002</p><p>\u6211\u4EEC\u76F4\u63A5\u5957\u7528\u300C01 \u80CC\u5305\u300D\u7684\u72B6\u6001\u5B9A\u4E49\uFF1A</p><p><code>f[i][j]</code> \u4EE3\u8868\u8003\u8651\u524D <code>i</code> \u4E2A\u6570\u503C\uFF0C\u5176\u9009\u62E9\u6570\u5B57\u603B\u548C\u4E0D\u8D85\u8FC7 <code>j</code> \u7684\u6700\u5927\u4EF7\u503C\u3002</p><p>\u5F53\u6709\u4E86\u300C\u72B6\u6001\u5B9A\u4E49\u300D\u4E4B\u540E\uFF0C\u7ED3\u5408\u6211\u4EEC\u7684\u300C\u6700\u540E\u4E00\u6B65\u5206\u6790\u6CD5\u300D\uFF0C\u6BCF\u4E2A\u6570\u5B57\u90FD\u6709\u300C\u9009\u300D\u548C\u300C\u4E0D\u9009\u300D\u4E24\u79CD\u9009\u62E9\u3002</p><p>\u56E0\u6B64\u4E0D\u96BE\u5F97\u51FA\u72B6\u6001\u8F6C\u79FB\u65B9\u7A0B\uFF1A</p><ul><li><code>f[i - 1, j]</code> \uFF1A\u4E0D\u9009\u8BE5\u6570\u5B57</li><li><code>f[i - 1][j - nums[i]] + nums[j]</code> \uFF1A\u9009\u4E86\u8BE5\u6570\u5B57</li></ul><p><code>f[i][j] = max( f[i - 1, j], f[i - 1][j - nums[i]] + nums[j] )</code></p><p>\u4F18\u5316\uFF1A</p>',12),k=n("ul",null,[n("li",null,[s("\u5982\u679C\u5168\u90E8\u548C\u9664\u4EE5 2 \u4E3A\u5947\u6570\u65F6\uFF0C\u7B49\u548C\u5B50\u96C6\u7684\u76EE\u6807\u548C\u5FC5\u7136\u4E0D\u80FD\u51D1\u6210\u3002 "),n("ul",null,[n("li",null,[s("\u6839\u636E\u9898\u76EE\u5DF2\u77E5\uFF0C\u80FD\u5206\u5272\u5B50\u96C6\u7684\u5F0F\u5B50\uFF1A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"0"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"2"),n("mo",{stretchy:"false"},"]"),n("mo",null,"="),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"f[0] + f[1] + ... + f[n-2] = f[n-1]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"0"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"..."),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]")])])]),s(" \uFF08\u5047\u8BBE\u6570\u7EC4\u5DF2\u7ECF\u5347\u5E8F\u6392\u5E8F\uFF09\uFF0C\u53EF\u4EE5\u63A8\u51FA "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msubsup",null,[n("mo",null,"\u2211"),n("mrow",null,[n("mi",null,"n"),n("mo",null,"="),n("mn",null,"0")]),n("mrow",null,[n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1")])]),n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",{stretchy:"false"},"]")]),n("mo",null,"="),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"0"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"2"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"="),n("mn",null,"2"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"\\sum_{n=0}^{n-1} {f[n]} = f[0] + f[1] + ... + f[n-2] + f[n-1] = 2f[n-1]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.2537em","vertical-align":"-0.2997em"}}),n("span",{class:"mop"},[n("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"\u2211"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.954em"}},[n("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"n"),n("span",{class:"mrel mtight"},"="),n("span",{class:"mord mtight"},"0")])])]),n("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"n"),n("span",{class:"mbin mtight"},"\u2212"),n("span",{class:"mord mtight"},"1")])])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.2997em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},"]")]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"0"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"..."),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]")])])]),s(" \uFF0C\u5DE6\u53F3\u8FB9\u5168\u90E8\u9664\u4EE5 2\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mfrac",null,[n("mrow",null,[n("msubsup",null,[n("mo",null,"\u2211"),n("mrow",null,[n("mi",null,"n"),n("mo",null,"="),n("mn",null,"0")]),n("mrow",null,[n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1")])]),n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",{stretchy:"false"},"]")])]),n("mn",null,"2")]),n("mo",null,"="),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"0"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"2"),n("mo",{stretchy:"false"},"]"),n("mo",null,"+"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"\\frac{\\sum_{n=0}^{n-1} {f[n]}}{2} = f[0] + f[1] + ... + f[n-2] + f[n-1]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.5039em","vertical-align":"-0.345em"}}),n("span",{class:"mord"},[n("span",{class:"mopen nulldelimiter"}),n("span",{class:"mfrac"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"1.1589em"}},[n("span",{style:{top:"-2.655em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"2")])])]),n("span",{style:{top:"-3.23em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),n("span",{style:{top:"-3.535em"}},[n("span",{class:"pstrut",style:{height:"3em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mop mtight"},[n("span",{class:"mop op-symbol small-op mtight",style:{position:"relative",top:"0em"}},"\u2211"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8913em"}},[n("span",{style:{top:"-2.1786em","margin-left":"0em","margin-right":"0.0714em"}},[n("span",{class:"pstrut",style:{height:"2.5em"}}),n("span",{class:"sizing reset-size3 size1 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"n"),n("span",{class:"mrel mtight"},"="),n("span",{class:"mord mtight"},"0")])])]),n("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[n("span",{class:"pstrut",style:{height:"2.5em"}}),n("span",{class:"sizing reset-size3 size1 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"n"),n("span",{class:"mbin mtight"},"\u2212"),n("span",{class:"mord mtight"},"1")])])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3214em"}},[n("span")])])])])]),n("span",{class:"mspace mtight",style:{"margin-right":"0.1952em"}}),n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen mtight"},"["),n("span",{class:"mord mathnormal mtight"},"n"),n("span",{class:"mclose mtight"},"]")])])])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.345em"}},[n("span")])])])]),n("span",{class:"mclose nulldelimiter"})]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"0"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"..."),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]")])])])])])]),n("li",null,"\u4E00\u7EF4\u4E0B\u6807\u4E3A n\uFF0C\u4EE3\u8868\u5728\u8BE5\u4E0B\u6807\u4E4B\u524D\u53D6\u5230\u7684\u6570\u3002\u4F8B\u5982\u4E0B\u6807\u4E3A 2\uFF0C\u4EE3\u8868\u53EF\u4EE5\u53D6\u5230 0\uFF0C1\uFF0C2 \u4E09\u4E2A\u7269\u54C1"),n("li",null,"\u4E8C\u7EF4\u4E0B\u6807\u4E3A \u4EF7\u503C\u6570\u91CF\uFF0C\u4EE3\u8868\u5C0F\u4E8E\u8BE5\u6570\u503C\u7684\u60C5\u51B5\u4E0B\u7684\u6700\u5927\u4EF7\u503C\u3002\u4F8B\u5982\u4E8C\u7EF4\u4E0B\u6807\u4E3A 4\uFF0C\u4EE3\u8868\u4E0D\u8D85\u8FC7\u4EF7\u503C 4 \u7684\u60C5\u51B5\u4E0B\u7684\u6700\u5927\u4EF7\u503C\uFF0C\u6700\u5927\u4EF7\u503C\u662F 4\uFF0C\u4E14\u662F\u6700\u540E\u4E00\u683C\uFF0C\u5219\u8FD4\u56DE\u8BC1\u660E\u53EF\u4EE5\u51D1\u6210\u3002")],-1),d=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">//\u300C\u7B49\u548C\u5B50\u96C6\u300D\u7684\u548C\u5FC5\u7136\u662F\u603B\u548C\u7684\u4E00\u534A</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u5E94\u4E86\u603B\u548C\u4E3A\u5947\u6570\u7684\u60C5\u51B5\uFF0C\u6CE8\u5B9A\u4E0D\u80FD\u88AB\u5206\u4E3A\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u5904\u7406\u8003\u8651\u7B2C 1 \u4EF6\u7269\u54C1\u7684\u60C5\u51B5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> j <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u518D\u5904\u7406\u8003\u8651\u5176\u4F59\u7269\u54C1\u7684\u60C5\u51B5</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u904D\u5386\u4EF7\u503C</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> t<span class="token punctuation">]</span> <span class="token operator">+</span> t <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>no<span class="token punctuation">,</span> yes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6700\u5927\u4EF7\u503C\u7B49\u4E8E target\uFF0C\u8BF4\u660E\u53EF\u4EE5\u62C6\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),v=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"target")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u4E3A\u6570\u7EC4\u603B\u548C\u7684\u4E00\u534A\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u4E3A\u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u3002\u6216\u8005\u770B\u4E24\u5C42\u5FAA\u73AF\u7684\u957F\u5EA6\u3002\u5171\u6709 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"target * n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u4E2A\u72B6\u6001\u9700\u8981\u88AB\u8F6C\u79FB\uFF0C\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])],-1),b=a(`<h3 id="_3-\u4F18\u5316\u7A7A\u95F4" tabindex="-1"><a class="header-anchor" href="#_3-\u4F18\u5316\u7A7A\u95F4" aria-hidden="true">#</a> \uFF083\uFF09\u4F18\u5316\u7A7A\u95F4</h3><p>\u4E4B\u524D\u4E5F\u8BF4\u8FC7\u52A8\u6001\u89C4\u5212\u4F18\u5316\u7A7A\u95F4\u3002</p><ul><li>\u7B2C 1 \u4E2A\u65B9\u5F0F\u662F\u6EDA\u52A8\u6570\u7EC4\uFF0C\u53EA\u5B58\u653E\u4E24\u884C\u6570\u636E\uFF0C\u5F53\u524D\u884C\u548C\u4E0A\u4E00\u884C\uFF0C\u6BCF\u6B21\u8986\u76D6\u5C06\u4E0B\u4E00\u884C\u7684\u503C\u8986\u76D6\u5230\u4E0A\u4E00\u884C\u7684\u4F4D\u7F6E</li><li>\u7B2C 2 \u4E2A\u65B9\u5F0F\u4F18\u5316\u6210\u4E00\u7EF4\u6570\u7EC4\uFF0C\u5229\u7528\u6BCF\u6B21\u53D6\u6570\u636E\u7684\u65B9\u5411\u3002\u56E0\u4E3A\u6BCF\u6B21\u53D6\u6570\u636E\u7684\u662F\u4E00\u4E2A\u65B9\u5411\uFF0C<strong>\u8986\u76D6\u5DF2\u7ECF\u53D6\u6570\u636E\u7684\u4F4D\u7F6E\u5C31\u884C</strong>\u3002 <ul><li>\u4F46\u5FAA\u73AF\u662F\u5411\u53F3\u904D\u5386\u4ECE <code>0</code> \u5230 <code>target - 1</code> \uFF0C\u800C\u53D6\u6570\u7684\u65B9\u5411\u662F\u5F80\u5DE6\u53D6\u7684\u2014\u2014<code>f[i - 1][j - t]</code> \uFF0C<code>j - t</code> \u4EE3\u8868\u4E86\u662F\u53D6\u5DE6\u8FB9\u7684\u6570\uFF0C\u800C\u4E4B\u524D\u5DE6\u8FB9\u7684\u6570\u88AB\u65B0\u6570\u636E\u8986\u76D6\uFF0C\u53D6\u4E0D\u5230\u65E7\u6570\u636E\u3002</li><li>\u6240\u4EE5\u5FAA\u73AF\u9700\u8981\u6362\u4E2A\u65B9\u5411\uFF0C\u4ECE\u53F3\u5F80\u5DE6\u5FAA\u73AF <code>for (int j = target; j &gt;= 0; j--) {</code></li></ul></li></ul><p>\u5168\u90E8\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u300C\u7269\u54C1\u7EF4\u5EA6\u300D\u53D6\u6D88</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u300C\u5BB9\u91CF\u7EF4\u5EA6\u300D\u6539\u6210\u4ECE\u5927\u5230\u5C0F\u904D\u5386</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> target<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u7B2C i \u4EF6\u7269\u54C1</span>
        <span class="token keyword">int</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>j<span class="token operator">-</span>t<span class="token punctuation">]</span> <span class="token operator">+</span> t <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>no<span class="token punctuation">,</span> yes<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6700\u5927\u4EF7\u503C\u7B49\u4E8E target\uFF0C\u8BF4\u660E\u53EF\u4EE5\u62C6\u5206\u6210\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>target<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C-k-\u5927\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C-k-\u5927\u5143\u7D20" aria-hidden="true">#</a> \u4E94\u5341\u4E00\u3001\u6570\u636E\u6D41\u4E2D\u7684\u7B2C K \u5927\u5143\u7D20</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485689&amp;idx=1&amp;sn=a0f92c80f91049d5ca5b0101274b14a6&amp;chksm=fd9ca3e6caeb2af02b761d529eb833ab020694001c9ed7b0cd224dfdf615cb302ae8c28d6738&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C703. \u6570\u636E\u6D41\u4E2D\u7684\u7B2C K \u5927\u5143\u7D20\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>\u300CEasy\u300D</strong>\u3002</p><p>\u8BBE\u8BA1\u4E00\u4E2A\u627E\u5230\u6570\u636E\u6D41\u4E2D\u7B2C k \u5927\u5143\u7D20\u7684\u7C7B\uFF08class\uFF09\u3002</p><p>\u6CE8\u610F\u662F\u6392\u5E8F\u540E\u7684\u7B2C k \u5927\u5143\u7D20\uFF0C\u4E0D\u662F\u7B2C k \u4E2A\u4E0D\u540C\u7684\u5143\u7D20\u3002</p><p>\u8BF7\u5B9E\u73B0 KthLargest \u7C7B\uFF1A</p><ul><li>KthLargest(int k, int[] nums) \u4F7F\u7528\u6574\u6570 k \u548C\u6574\u6570\u6D41 nums \u521D\u59CB\u5316\u5BF9\u8C61\u3002</li><li>int add(int val) \u5C06 val \u63D2\u5165\u6570\u636E\u6D41 nums \u540E\uFF0C\u8FD4\u56DE\u5F53\u524D\u6570\u636E\u6D41\u4E2D\u7B2C k \u5927\u7684\u5143\u7D20\u3002</li></ul><p>\u793A\u4F8B\uFF1A</p><ul><li><p>\u8F93\u5165\uFF1A</p><ul><li><code>[&quot;KthLargest&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;, &quot;add&quot;]</code></li><li><code>[[3, [4, 5, 8, 2]], [3], [5], [10], [9], [4]]</code></li></ul></li><li><p>\u8F93\u51FA\uFF1A</p><ul><li><code>[null, 4, 5, 5, 8, 8]</code></li></ul></li><li><p>\u89E3\u91CA\uFF1A</p><ul><li><code>KthLargest kthLargest = new KthLargest(3, [4, 5, 8, 2]);</code></li><li><code>kthLargest.add(3); // return 4</code></li><li><code>kthLargest.add(5); // return 5</code></li><li><code>kthLargest.add(10); // return 5</code></li><li><code>kthLargest.add(9); // return 8</code></li><li><code>kthLargest.add(4); // return 8</code></li></ul></li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>1 &lt;= k &lt;= 10<sup>4</sup></li><li>0 &lt;= nums.length &lt;= 10<sup>4</sup></li><li>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></li><li>-10<sup>4</sup> &lt;= val &lt;= 10<sup>4</sup></li><li>\u6700\u591A\u8C03\u7528 add \u65B9\u6CD5 10<sup>4</sup> \u6B21</li><li>\u9898\u76EE\u6570\u636E\u4FDD\u8BC1\uFF0C\u5728\u67E5\u627E\u7B2C k \u5927\u5143\u7D20\u65F6\uFF0C\u6570\u7EC4\u4E2D\u81F3\u5C11\u6709 k \u4E2A\u5143\u7D20</li></ul></blockquote><h3 id="_1-\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#_1-\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \uFF081\uFF09\u5192\u6CE1\u6392\u5E8F</h3><ul><li>\u521D\u59CB\u5316\u65F6\uFF0C\u4E0D\u6392\u5E8F\uFF0C\u53EA\u6709\u5728\u6DFB\u52A0\u7684\u65F6\u5019\u518D\u6392\u5E8F\u3002</li><li>\u4F7F\u7528\u5217\u8868\uFF1A\u56E0\u4E3A\u6269\u5C55\u6570\u7EC4\u7684\u957F\u5EA6\u8F83\u5BB9\u6613</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">int</span> k<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k<span class="token punctuation">;</span>
		<span class="token comment">// \u4E0D\u6392\u5E8F\u4F9D\u6B21\u6DFB\u52A0\u5230\u5217\u8868</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6DFB\u52A0\u65B0\u7684\u6570\u5B57</span>
    data<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u8FDB\u884C\u5192\u6CE1\u6392\u5E8F\uFF08\u964D\u5E8F\uFF09</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u627E\u5230\u6700\u5927\u503C</span>
      <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> <span class="token function">findMax</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u6700\u5927\u503C\u4E0E\u5F53\u524D\u4F4D\u7F6E\u7684\u6570\u5B57\u4EA4\u6362</span>
      <span class="token function">swapNum</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> maxIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">swapNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> temp <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5728start\u548Cend\u4E0B\u6807\u4E4B\u95F4\u627E\u6700\u5927\u503C</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findMax</span><span class="token punctuation">(</span><span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxIndex <span class="token operator">=</span> start<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> tempNum <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>tempNum <span class="token operator">&gt;</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        max <span class="token operator">=</span> tempNum<span class="token punctuation">;</span>
        maxIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxIndex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),h=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",null,"\u2217"),n("mi",null,"k"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n * k)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"k"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(k)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u5F53 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mtext",null,"\u3001"),n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"n\u3001k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord cjk_fallback"},"\u3001"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u90FD\u5F88\u5927\u65F6\uFF0C\u5C31\u4F1A\u8D85\u65F6\u3002\u5982\u679C\u4F7F\u7528 Java \u81EA\u5E26\u7684\u6392\u5E8F\u8FDB\u884C\u6392\u5E8F\uFF0C\u4E0D\u4F1A\u8D85\u65F6\uFF0C\u4F46\u82B1\u8D39\u7684\u65F6\u95F4\u4F9D\u7136\u5F88\u591A")])],-1),g=a(`<h3 id="_2-\u79FB\u52A8\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_2-\u79FB\u52A8\u6570\u5B57" aria-hidden="true">#</a> \uFF082\uFF09\u79FB\u52A8\u6570\u5B57</h3><p>\u5176\u5B9E <strong>\u6CA1\u6709\u5FC5\u8981\u5728\u6BCF\u6B21\u6DFB\u52A0\u6570\u5B57\u540E\u8FDB\u884C\u6392\u5E8F</strong>\uFF0C\u56E0\u4E3A\u7B2C 1 \u6B21\u6DFB\u52A0\u7684\u65F6\u5019\u5DF2\u7ECF\u6392\u8FC7\u4E00\u6B21\u5E8F\u3002\u540E\u9762\u6DFB\u52A0\u7684\u65F6\u5019\u53EA\u9700\u8981\u627E\u5230\u65B0\u6570\u5B57\u7684\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u5C06\u5176\u4F59\u7684\u6570\u5B57\u5F80\u540E\u79FB\u52A8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>

  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">;</span>

  <span class="token keyword">int</span> length<span class="token punctuation">;</span>

  <span class="token keyword">int</span> k<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> nums<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>length <span class="token operator">=</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
		<span class="token comment">// \u5BF9\u6570\u7EC4\u8FDB\u884C\u6392\u5E8F\uFF08\u5347\u5E8F\uFF09</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6570\u7EC4</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tempArray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token operator">++</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679C\u6700\u5F00\u59CB\u7684\u7A7A\u7684\uFF0C\u4E0D\u9002\u5408\u79FB\u52A8\u6570\u5B57\u7B97\u6CD5</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      data <span class="token operator">=</span> tempArray<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">int</span> i <span class="token operator">=</span> length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u65B0\u6570\u6BD4\u5F53\u524D\u6570\u5B57\u5C0F\uFF0C\u76F4\u63A5\u5C06\u6570\u5B57\u5F80\u540E\u79FB</span>
        tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u65B0\u6570\u5927\u4E8E\u7B49\u4E8E\u5F53\u524D\u6570\u5B57\uFF0C\u7ED3\u675F\u5FAA\u73AF</span>
        <span class="token comment">// \u5C06\u65B0\u7684\u6570\u5B57\u653E\u5165\u7A7A\u683C\u4E2D</span>
        tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token comment">// \u5269\u4F59\u7684\u6570\u5B57\u4E00\u4E00\u5BF9\u5E94\u653E\u5165</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          tempArray<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5982\u679C\u5C06\u6240\u6709\u7684\u6570\u5B57\u5168\u90E8\u79FB\u4E86\u4E00\u904D\uFF0C</span>
    <span class="token comment">// \u5219\u65B0\u6570\u7EC4\u91CC\u7684\u7B2C1\u683C\u662F\u7A7A\u7684\uFF0C\u9700\u8981\u989D\u5916\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u66F4\u65B0\u5BF9\u9762\u7684\u91CC\u6570\u7EC4</span>
    data <span class="token operator">=</span> tempArray<span class="token punctuation">;</span>
    <span class="token keyword">return</span> data<span class="token punctuation">[</span>length <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A "),n("ul",null,[n("li",null,[s("\u6392\u5E8F\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(nlogn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u8C03\u7528 1 \u6B21 "),n("code",null,"add()"),s(" \u65B9\u6CD5\uFF1A\u6700\u5DEE "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u6700\u597D "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u6240\u4EE5\u6700\u5DEE\u60C5\u51B5\uFF0Cn \u4E2A\u6570\u5B57\u6DFB\u52A0\uFF0C\u6BCF\u6B21\u90FD\u8981\u79FB\u52A8\u5168\u90E8\u6570\u5B57\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("msup",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n^2)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])]),n("span",{class:"mclose"},")")])])])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])],-1),w=a(`<h3 id="_3-\u5C0F\u6839\u5806" tabindex="-1"><a class="header-anchor" href="#_3-\u5C0F\u6839\u5806" aria-hidden="true">#</a> \uFF083\uFF09\u5C0F\u6839\u5806</h3><ul><li>\u5C0F\u6839\u5806\uFF1A\u4F1A\u81EA\u52A8\u6392\u5E8F\u7684\u5BB9\u5668\uFF0C\u6700\u9876\u90E8\u662F\u5BB9\u5668\u4E2D\u7684\u6700\u5C0F\u503C\u3002</li><li>\u53EA\u5B58\u653E k \u4E2A\u6570\uFF1A\u56E0\u4E3A\u6211\u4EEC\u4F7F\u7528\u5230\u524D\u9762 k \u4E2A\u6570\uFF0C\u53EA\u6709\u6DFB\u52A0\u7684\u6570\u7B26\u5408\u67D0\u4E9B\u89C4\u5219\u65F6\uFF0C\u624D\u4F1A\u8C03\u6574\u8FD9 k \u4E2A\u6570 <ul><li>\u6DFB\u52A0\u7684\u6570 &lt;= \u6839\u9876\u5143\u7D20\uFF1A\u56E0\u4E3A\u5806\u91CC\u9762\u662F <strong>\u6570\u7EC4\u91CC\u524D k \u5927\u7684\u503C</strong>\uFF0C\u5982\u679C\u6DFB\u52A0\u7684\u6570\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E\u7B2C k \u5927\u7684\u503C\uFF0C\u5219\u6DFB\u52A0\u7684\u6570\u662F\u7B2C k + x \u5927\u7684\u6570\uFF0C\u6211\u4EEC\u6C38\u8FDC\u4E0D\u4F1A\u4F7F\u7528\u5230</li><li>\u6DFB\u52A0\u7684\u6570 &gt; \u6839\u9876\u5143\u7D20\uFF1A\u4E00\u5B9A\u4F1A\u5BFC\u81F4\u5806\u53D8\u5316\uFF0C\u800C\u6839\u9876\u7684\u5143\u7D20 <strong>\u4E00\u5B9A\u4F1A\u88AB\u6392\u9664\u5728\u524D\u9762 k \u4E2A\u6570</strong> \uFF0C\u6240\u4EE5\u76F4\u63A5</li><li>\u5C0F\u6839\u5806\u7684\u4F7F\u7528\u573A\u666F\uFF1A<strong>\u53EA\u5728\u4E4E\u5B58\u7684\u6570\u503C\uFF0C\u4E0D\u5728\u4E4E\u5728\u6570\u7EC4\u91CC\u7684\u4F4D\u7F6E</strong>\u3002\u5728 \u3010\u56DB\u5341\u516B\u3001\u8DF3\u8DC3\u6E38\u620F\u3011\u4E2D\uFF0C\u867D\u7136\u4E5F\u662F\u627E\u6ED1\u52A8\u7A97\u53E3\u7684\u6700\u5927\u503C\uFF0C\u4F46\u662F\u79FB\u9664\u5143\u7D20\u7684\u65F6\u5019\u662F\u6839\u636E\u5728\u6570\u7EC4\u7684\u4E0B\u6807.</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">KthLargest</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> k<span class="token punctuation">;</span>
  <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue<span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token class-name">KthLargest</span><span class="token punctuation">(</span><span class="token keyword">int</span> _k<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> _nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    k <span class="token operator">=</span> _k<span class="token punctuation">;</span>
    <span class="token comment">// \u65B0\u5EFA\u5C0F\u6839\u5806</span>
    queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">compare</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> _nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token comment">// \u524D k \u4E2A\u6570\u76F4\u63A5\u653E\u5165\u5C0F\u6839\u5806\u91CC</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>_nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5176\u4ED6\u7684\u6570\uFF0C\u8C03\u7528add()\u65B9\u6CD5\u6765\u6DFB\u52A0\uFF0C\u4EE5\u7EF4\u6301\u5C0F\u6839\u5806\u7684\u957F\u5EA6</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> k<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>_nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5C0F\u6839\u5806\u662F\u7A7A\uFF0C\u5219\u65E0\u6CD5\u53D6\u51FA\u6839\u9876\u5143\u7D20</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
    <span class="token comment">// \u53EA\u6709\u4E24\u79CD\u573A\u666F\u624D\u8981\u64CD\u4F5C</span>
    <span class="token comment">// 1. \u5806\u7684\u957F\u5EA6\u6CA1\u6709\u591F k</span>
    <span class="token comment">// 2. \u5806\u6EE1\u7684\u65F6\u5019\uFF0C\u65B0\u6570\u5927\u4E8E\u6839\u9876</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;</span> t <span class="token operator">||</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5F53\u5806\u6EE1\u7684\u65F6\u5019\u624D\u9700\u8981\u53BB\u9664\u5143\u7D20</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u56E0\u4E3A\u65E0\u8BBA\u662F\u7B2C1\u70B9\u8FD8\u662F\u7B2C2\u70B9\uFF0C\u90FD\u9700\u8981\u6DFB\u52A0\u5143\u7D20</span>
      <span class="token comment">// \u6240\u4EE5\u76F8\u540C\u7684\u64CD\u4F5C\u63D0\u53D6\u51FA\u6765</span>
      queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u6700\u574F\u60C5\u51B5\u4E0B\uFF0C"),n("code",null,"n"),s(" \u4E2A\u5143\u7D20\u5165\u5806\uFF0C\u90FD\u89E6\u53D1\u5806\u8C03\u6574\u3002\u8C03\u6574\u4E00\u6B21\u5806\u6392\u5E8F\u5C31\u9700\u8981\u65F6\u95F4 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"k"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logk)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u6240\u4EE5\u603B\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"k"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(nlogk)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"k"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logk)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mclose"},")")])])])])],-1),x=a('<h2 id="\u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62" aria-hidden="true">#</a> \u4E94\u5341\u4E8C\u3001\u5206\u5272\u7B49\u548C\u5B50\u96C62</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485727&amp;idx=1&amp;sn=2cfb1a43bdb4f47cf4457c58f809deb8&amp;chksm=fd9ca200caeb2b16e7c70ffe673886ba3577b3c084ec204a532cf4a5e0d46dc1b51b34970ba2&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C416. \u5206\u5272\u7B49\u548C\u5B50\u96C6\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u542B\u6B63\u6574\u6570\u7684\u975E\u7A7A\u6570\u7EC4\u3002\u662F\u5426\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u6570\u7EC4\u5206\u5272\u6210\u4E24\u4E2A\u5B50\u96C6\uFF0C\u4F7F\u5F97\u4E24\u4E2A\u5B50\u96C6\u7684\u5143\u7D20\u548C\u76F8\u7B49\u3002</p><p>\u6CE8\u610F:</p><ul><li>\u6BCF\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u4E0D\u4F1A\u8D85\u8FC7 100</li><li>\u6570\u7EC4\u7684\u5927\u5C0F\u4E0D\u4F1A\u8D85\u8FC7 200</li></ul><p>\u793A\u4F8B 1:</p><ul><li><p>\u8F93\u5165: [1, 5, 11, 5]</p></li><li><p>\u8F93\u51FA: true</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u53EF\u4EE5\u5206\u5272\u6210 [1, 5, 5] \u548C [11].</p></li></ul><p>\u793A\u4F8B 2:</p><ul><li><p>\u8F93\u5165: [1, 2, 3, 5]</p></li><li><p>\u8F93\u51FA: false</p></li><li><p>\u89E3\u91CA: \u6570\u7EC4\u4E0D\u80FD\u5206\u5272\u6210\u4E24\u4E2A\u5143\u7D20\u548C\u76F8\u7B49\u7684\u5B50\u96C6.</p></li></ul><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 200</code></li><li><code>1 &lt;= nums[i] &lt;= 100</code></li></ul></blockquote><h3 id="_1-\u5206\u6790-1" tabindex="-1"><a class="header-anchor" href="#_1-\u5206\u6790-1" aria-hidden="true">#</a> \uFF081\uFF09\u5206\u6790</h3><p>\u5728\u3010\u5206\u5272\u7B49\u548C\u5B50\u96C61\u3011\u4E2D\uFF0C\u6211\u4EEC\u662F <strong>\u95F4\u63A5</strong> \u5F97\u51FA\u7ED3\u679C\u3002</p><ul><li>\u95F4\u63A5\uFF1A\u5148\u6C42\u51FA\u4E0D\u8D85\u8FC7\u67D0\u4E2A\u503C\u7684\u6700\u5927\u503C\uFF0C\u518D\u5224\u65AD\u662F\u5426\u548C\u67D0\u4E2A\u503C\u76F8\u7B49\u3002</li></ul><p>\u8FD9\u6B21\u8981\u6539\u6B63\u4F7F\u7528\uFF0C\u8981 <strong>\u76F4\u63A5</strong> \u5F97\u51FA\u7ED3\u679C</p><ul><li>\u76F4\u63A5\uFF1A\u76F4\u63A5\u77E5\u9053\u662F\u5426\u53EF\u4EE5 <strong>\u51D1\u51FA</strong> \u6307\u5B9A\u6570\u5B57\u3002</li></ul><h3 id="_2-\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u73B0" aria-hidden="true">#</a> \uFF082\uFF09\u5B9E\u73B0</h3><p>\u73B0\u5728\u9700\u8981\u6539\u53D8 <strong>\u72B6\u6001\u5B9A\u4E49</strong> \u548C <strong>\u8F6C\u79FB\u65B9\u7A0B</strong>\u3002</p>',10),j=n("ul",null,[n("li",null,[s("\u72B6\u6001\u5B9A\u4E49\uFF1A "),n("ul",null,[n("li",null,[n("code",null,"f[i - 1][j]"),s(" \u4EE3\u8868\u4E0D\u9009\u5F53\u524D\u6570\u5B57\uFF0C\u662F\u5426\u6070\u597D\u53EF\u4EE5\u51D1\u51FA\uFF1B")]),n("li",null,[n("code",null,"f[i - 1][j - nums[i]]"),s(" \u4EE3\u8868\u9009\u4E86\u5F53\u524D\u6570\u5B57\uFF0C\u662F\u5426\u6070\u597D\u53EF\u4EE5\u51D1\u51FA")])])]),n("li",null,[s("\u8F6C\u79FB\u65B9\u7A0B\uFF1A "),n("ul",null,[n("li",null,[s("\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u5B58\u653E\u7684\u662F "),n("strong",null,"\u5E03\u5C14\u503C"),s("\u3002")]),n("li",null,[s("\u7B2C 1 \u884C\u4F1A\u9047\u5230\u521D\u59CB\u5316\u95EE\u9898\uFF0C\u56E0\u4E3A\u6BCF\u4E2A\u884C\u90FD\u4F9D\u9760\u4E0A\u4E00\u884C\u7684\u6570\u636E\u3002\u6240\u4EE5\u9700\u8981\u5728\u7B2C 1 \u884C\u6DFB\u52A0 "),n("strong",null,"\u4E0D\u8003\u8651\u4EFB\u4F55\u7269\u54C1"),s(" \u7684\u60C5\u51B5\u3002")]),n("li",null,[s("\u6700\u7EC8\u7684\u8F6C\u79FB\u65B9\u7A0B\u662F "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"j"),n("mo",{stretchy:"false"},"]"),n("mo",null,"="),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"j"),n("mo",{stretchy:"false"},"]"),n("mo",null,"\u2228"),n("mi",null,"f"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"["),n("mi",null,"j"),n("mo",null,"\u2212"),n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"m"),n("mi",null,"s"),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"f[i][j] = f[i-1][j] \\vee f[i][j-nums[i]]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mclose"},"]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},"]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mclose"},"]"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2228"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mclose"},"]"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mclose"},"]]")])])])]),n("li",null,[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),s(" \u7684\u53D6\u503C\u8303\u56F4 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"0"),n("mo",null,"\u223C"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"0 \\sim n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"\u223C"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \uFF1B"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"j")]),n("annotation",{encoding:"application/x-tex"},"j")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.854em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")])])]),s(" \u7684\u53D6\u503C\u8303\u56F4 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"0"),n("mo",null,"\u223C"),n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"0 \\sim target")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"\u223C"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t")])])])])])])],-1),M=a(`<p>\u6700\u540E\u7684\u6570\u7EC4\u4E3A\u8FD9\u6837\uFF1A\u5047\u8BBE\u6709 [1, 2, 3]</p><table><thead><tr><th></th><th>0</th><th>1</th><th>2</th><th>3</th></tr></thead><tbody><tr><td><strong>0</strong></td><td>T</td><td>F</td><td>F</td><td>F</td></tr><tr><td><strong>1</strong></td><td>T</td><td>T</td><td>F</td><td>F</td></tr><tr><td><strong>2</strong></td><td>T</td><td>T</td><td></td><td></td></tr><tr><td><strong>3</strong></td><td>T</td><td></td><td></td><td></td></tr></tbody></table><ul><li>\u56E0\u4E3A\u7B2C 1 \u884C\u4E0D\u653E\u4EFB\u4F55\u4E1C\u897F\uFF0C\u6240\u4EE5\u53EA\u6709\u80CC\u5305\u5BB9\u91CF\u4E3A 0 \u65F6\uFF0C\u624D\u6070\u597D\u88C5\u6EE1</li><li>\u5176\u4ED6\u884C\u5C31\u662F\u770B <strong>\u4E0A\u9762</strong> \u548C\u5F53\u524D\u884C\u7684\u524D\u9762\u67D0\u5217</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">canPartition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token comment">//\u300C\u7B49\u548C\u5B50\u96C6\u300D\u7684\u548C\u5FC5\u7136\u662F\u603B\u548C\u7684\u4E00\u534A</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> nums<span class="token punctuation">)</span> sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> target <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u5E94\u4E86\u603B\u548C\u4E3A\u5947\u6570\u7684\u60C5\u51B5\uFF0C\u6CE8\u5B9A\u4E0D\u80FD\u88AB\u5206\u4E3A\u4E24\u4E2A\u300C\u7B49\u548C\u5B50\u96C6\u300D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">!=</span> sum<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">// f[i][j] \u4EE3\u8868\u8003\u8651\u524D i \u4EF6\u7269\u54C1\uFF0C\u80FD\u5426\u51D1\u51FA\u4EF7\u503C\u300C\u6070\u597D\u300D\u4E3A j \u7684\u65B9\u6848</span>
    <span class="token comment">// \u6A2A\u5750\u6807\uFF1A0 ~ n\uFF0C\u957F\u5EA6\u4E3A n + 1</span>
    <span class="token comment">// \u7EB5\u5750\u6807\uFF1A0 ~ target,\u957F\u5EA6\u4E3A target + 1</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    
    <span class="token comment">// i\u7684\u8303\u56F4\u662F0 ~ n\uFF0C\u4F46\u7B2C1\u884C\u5DF2\u521D\u59CB\u5316\uFF0C\u5FAA\u73AF\u7684\u8303\u56F4\u662F1 ~ n</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6 nums[] \u7684\u6570 i \u9700\u8981\u51CF 1\uFF0C\u56E0\u4E3A nums \u4E0B\u6807\u8303\u56F4\u662F 0 ~ n-1</span>
      <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E0D\u9009\u8BE5\u7269\u54C1</span>
        <span class="token keyword">boolean</span> no <span class="token operator">=</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9009\u8BE5\u7269\u54C1</span>
        <span class="token keyword">boolean</span> yes <span class="token operator">=</span> j <span class="token operator">&gt;=</span> t <span class="token operator">?</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> t<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> no <span class="token operator">|</span> yes<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_=n("ul",null,[n("li",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"target")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u4E3A\u6570\u7EC4\u603B\u548C\u7684\u4E00\u534A\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u4E3A\u6570\u7EC4\u5143\u7D20\u4E2A\u6570\u3002\u6216\u8005\u770B\u4E24\u5C42\u5FAA\u73AF\u7684\u957F\u5EA6\u3002\u5171\u6709 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"target * n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8095em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u4E2A\u72B6\u6001\u9700\u8981\u88AB\u8F6C\u79FB\uFF0C\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("li",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"t"),n("mi",null,"a"),n("mi",null,"r"),n("mi",null,"g"),n("mi",null,"e"),n("mi",null,"t"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(target * n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])],-1),q=a(`<h2 id="\u4E94\u5341\u4E09\u3001\u88AB\u56F4\u7ED5\u7684\u533A\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E09\u3001\u88AB\u56F4\u7ED5\u7684\u533A\u57DF" aria-hidden="true">#</a> \u4E94\u5341\u4E09\u3001\u88AB\u56F4\u7ED5\u7684\u533A\u57DF</h2><p>\u529B\u6263\u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/surrounded-regions/</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C130. \u88AB\u56F4\u7ED5\u7684\u533A\u57DF\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u4F60\u4E00\u4E2A <code>m x n</code> \u7684\u77E9\u9635 <code>board</code> \uFF0C\u7531\u82E5\u5E72\u5B57\u7B26 <code>&#39;X&#39;</code> \u548C <code>&#39;O&#39;</code> \uFF0C\u627E\u5230\u6240\u6709\u88AB <code>&#39;X&#39;</code> \u56F4\u7ED5\u7684\u533A\u57DF\uFF0C\u5E76\u5C06\u8FD9\u4E9B\u533A\u57DF\u91CC\u6240\u6709\u7684 <code>&#39;O&#39;</code> \u7528 <code>&#39;X&#39;</code> \u586B\u5145\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\u8F93\u5165\uFF1A
board <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;O&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;O&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;O&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;O&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
  
\u8F93\u51FA\uFF1A<span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;O&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63D0\u793A\uFF1A</p><ul><li><p><code>m == board.length</code></p></li><li><p><code>n == board[i].length</code></p></li><li><p><code>1 &lt;= m, n &lt;= 200</code></p></li><li><p><code>board[i][j]</code> \u4E3A <code>&#39;X&#39;</code> \u6216 <code>&#39;O&#39;</code></p></li></ul></blockquote><h3 id="_1-\u666E\u901A\u601D\u7EF4" tabindex="-1"><a class="header-anchor" href="#_1-\u666E\u901A\u601D\u7EF4" aria-hidden="true">#</a> \uFF081\uFF09\u666E\u901A\u601D\u7EF4</h3><p>\u4F7F\u7528\u666E\u901A\u7684\u4EBA\u8111\u601D\u7EF4\uFF0C\u8FD9\u9053\u9898\u5C31\u662F\u4ECE\u4E00\u4E2A \u201C O \u201D \u51FA\u53D1\uFF0C\u7136\u540E\u627E\u5230\u5176\u4ED6 \u201C O \u201D\uFF0C\u7136\u540E\u518D\u770B\u8FD9\u4E9B \u201C O \u201D \u4E2D\u6709\u6CA1\u6709\u5230\u8FBE\u8FB9\u754C\u3002</p><p>\u8FD9\u79CD\u601D\u7EF4\u6709\u4E24\u4E2A\u9700\u8981\u8BB0\u5F55\u7684\u5730\u65B9\uFF1A</p><ul><li>\u8BB0\u5F55 <strong>\u4E4B\u524D\u8BBF\u95EE\u8FC7\u7684\u4F4D\u7F6E</strong>\uFF0C\u5728\u4E0B\u6B21\u5FAA\u73AF\u7684\u65F6\u5019\u53EF\u4EE5\u8DF3\u8FC7\u3002\u56E0\u4E3A\u8BBF\u95EE\u8FC7\u7684\u4F4D\u7F6E\uFF0C\u4E0D\u4F1A\u518D\u6539\u53D8\u4E86</li><li>\u8BB0\u5F55 <strong>\u5F53\u524D\u8D9F</strong> \u6240\u904D\u5386\u8FC7\u7684\u4F4D\u7F6E\uFF0C\u7528\u4E8E\u5C06\u5F53\u524D\u8D9F\u7684\u6240\u6709\u683C\u53D8\u6210 \u201C X \u201D\u3002</li></ul><p>\u4E0B\u9762\u4EE3\u7801\u5C31\u662F\u6A21\u4EFF\u4EBA\u8111\u601D\u7EF4\uFF1A</p><ol><li>\u9996\u5148\u904D\u5386\u6BCF\u4E00\u4E2A\u6CA1\u6709\u8BBF\u95EE\u8FC7\u7684 \u201C O \u201D \uFF0C\u7B2C 27 ~ 43 \u884C <code>board[i][j] == &#39;O&#39; &amp;&amp; flag[i][j] != &#39;-&#39;</code></li><li>\u5C06\u8FD9\u683C\u6807\u8BB0\u5DF2\u8BBF\u95EE\u8FC7\uFF0C\u5E76\u8BB0\u5F55\u5230\u4E34\u65F6\u5217\u8868 <code>memory</code> \u4E2D\u3002\u7136\u540E\u901A\u8FC7\u8FD9\u4E2A \u201C O \u201D\uFF0C\u627E\u51FA\u4E0E\u5176\u76F8\u90BB\u7684 \u201C O \u201D\uFF0C</li><li>\u91CD\u590D\u7B2C 2 \u6B65\uFF0C\u76F4\u5230 <strong>\u5468\u56F4\u88AB \u201C X \u201D \u5305\u56F4</strong> \u6216\u8005 <strong>\u5230\u8FBE\u8FB9\u754C</strong>\uFF0C\u7B2C 48 ~ 72 \u884C\u3002\u5982\u679C\u5728\u904D\u5386\u8FC7\u7A0B\u4E2D\uFF0C\u5230\u8FBE\u8FB9\u754C\uFF0C\u5219\u5C06 <code>ifWrap</code> \u7F6E\u4E3A <code>false</code> \uFF0C\u56E0\u4E3A\u53EA\u8981\u5230\u8FBE\u8FB9\u754C\uFF0C<strong>\u5F53\u524D\u8D9F\u5C31\u5904\u4E8E\u4E0D\u88AB\u5305\u56F4\u72B6\u6001</strong>\u3002</li><li>\u9000\u51FA\u9012\u5F52\u540E\uFF0C\u5224\u65AD <code>ifWrap</code> \u53D8\u91CF\uFF0C\u5982\u679C\u4E3A <code>true</code> \uFF0C\u5219\u5C06\u5F53\u524D\u8D9F\u7684\u6240\u6709\u683C\u53D8\u4E3A \u201C X \u201D</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

  <span class="token comment">// \u8BB0\u5F55\u6807\u8BB0\u6BCF\u683C\u7684\u8BBF\u95EE\u60C5\u51B5</span>
  <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> flag<span class="token punctuation">;</span>
  <span class="token comment">// \u6210\u5458\u53D8\u91CF\uFF0C\u4FBF\u4E8E\u9012\u5F52\u8C03\u7528</span>
  <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">;</span>
	<span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u8D9F\u5DF2\u8BBF\u95EE\u8FC7\u7684\u5750\u6807</span>
  <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> memory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">boolean</span> ifWrap<span class="token punctuation">;</span>

  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> direction <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0A      \u4E0B       \u5DE6      \u53F3</span>
    <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>


  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">solve</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    data <span class="token operator">=</span> board<span class="token punctuation">;</span>
    <span class="token keyword">int</span> m <span class="token operator">=</span> board<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> board<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    flag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u590D\u5236\u6210\u4E00\u6A21\u4E00\u6837\u7684\u6570\u7EC4</span>
    <span class="token function">copyArray</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> board<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u683C\u662F\u201CO\u201D\u5E76\u4E14\u6CA1\u8BBF\u95EE\u8FC7\uFF0C\u5219\u8FDB\u884C\u9012\u5F52</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;O&#39;</span> <span class="token operator">&amp;&amp;</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u91CD\u7F6E\u6807\u5FD7\u7136\u540E\u8FDB\u884C\u9012\u5F52</span>
          ifWrap <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token function">findIfWrap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// \u5982\u679C\u53D1\u73B0\u5F53\u524D\u8D9F\u662F\u88AB\u5305\u56F4\u7684\u5219\u5C06\u5F53\u524D\u8D9F\u53D8\u4E3A\u201CX\u201D</span>
          <span class="token comment">// \u5426\u5219\u6E05\u9664\u5217\u8868</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>ifWrap <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	
            <span class="token function">changeItemToX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            memory<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4F5C\u7528\uFF1A\u627E\u51FA\u5F53\u524D\u5750\u6807\u662F\u5426\u88AB\u5305\u56F4</span>
  <span class="token comment">// \u53C2\u6570\uFF1Am - \u5F53\u524D\u884C\uFF1Bn - \u5F53\u524D\u5217</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findIfWrap</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5230\u8FBE\u8FB9\u754C\u5219\u8BF4\u660E\u6CA1\u88AB\u5305\u56F4</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">==</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> n <span class="token operator">==</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">||</span> m <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ifWrap <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5C06\u5F53\u524D\u5750\u6807\u8BB0\u5F55\u5728\u5217\u8868\u4E2D</span>
    memory<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>m<span class="token punctuation">,</span> n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u683C\u5DF2\u88AB\u8BBF\u95EE</span>
    flag<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u904D\u5386\u56DB\u4E2A\u65B9\u5411</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> direction<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> item <span class="token operator">=</span> direction<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BB0\u5F55\u4E0B\u4E00\u4E2A\u5230\u7684\u683C\u5B50\u7684\u5750\u6807</span>
      <span class="token keyword">int</span> nm <span class="token operator">=</span> m <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> nn <span class="token operator">=</span> n <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u683C\u662F\u201CO\u201D\u5E76\u4E14\u6CA1\u6709\u88AB\u8BBF\u95EE\uFF0C\u5219\u8FDB\u884C\u9012\u5F52</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>nm<span class="token punctuation">]</span><span class="token punctuation">[</span>nn<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;O&#39;</span> <span class="token operator">&amp;&amp;</span> flag<span class="token punctuation">[</span>nm<span class="token punctuation">]</span><span class="token punctuation">[</span>nn<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       	<span class="token comment">// \u6DF1\u5EA6\u904D\u5386</span>
        <span class="token function">findIfWrap</span><span class="token punctuation">(</span>nm<span class="token punctuation">,</span> nn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6539\u53D8</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeItemToX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> memory<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> m <span class="token operator">=</span> memory<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> n <span class="token operator">=</span> memory<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

      data<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;X&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    memory<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">copyArray</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),O=n("ul",null,[n("li",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u56E0\u4E3A\u6BCF\u4E2A\u683C\u90FD\u904D\u5386\u8FC7\u4E00\u904D\uFF0C\u6240\u4EE5\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m*n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("li",null,[n("p",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u4E24\u4E2A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"m*n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4653em"}}),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u7684\u6570\u7EC4\uFF0C\u548C\u6700\u5927\u7A7A\u95F4\u53EF\u4EE5\u5230\u8FBE "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"m*n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4653em"}}),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),s(" \u7684\u5217\u8868\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"3"),n("mo",null,"\u2217"),n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(3*m*n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"3"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4653em"}}),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u5FFD\u7565\u5E38\u6570\u5219\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m*n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("li",null,[n("p",null,"\u4E3B\u8981\u8017\u65F6\uFF1A"),n("ul",null,[n("li",null,"\u6539\u53D8\u88AB\u5305\u56F4 \u201C O \u201D \u7684\u503C\uFF08\u5C06\u6307\u5B9A\u7684 \u201C O \u201D \u53D8\u4E3A \u201C X \u201D\uFF09\uFF1A\u5148\u8BB0\u5F55\u5F53\u524D\u8D9F\u6240\u5230\u8FBE\u7684\u4F4D\u7F6E\uFF0C\u7136\u540E\u518D\u904D\u5386\u6240\u8BB0\u5F55\u7684\u4F4D\u7F6E\uFF0C\u5C06\u5176\u5168\u90E8\u53D8\u6210 \u201C X \u201D\u3002\u5982\u679C\u5F53\u524D\u8D9F\u5230\u8FBE\u8FC7\u7684\u4F4D\u7F6E\u5F88\u591A\uFF0C\u51E0\u4E4E\u662F\u5168\u90E8\u4F4D\u7F6E\uFF0C\u5219\u904D\u5386\u4E24\u6B21\u5C31\u4F1A\u5F88\u82B1\u65F6\u95F4\uFF0C\u6700\u540E\u4E00\u4E2A\u7528\u4F8B\u5C31\u662F\u8FD9\u79CD\u60C5\u51B5\u3002")])])],-1),L=a(`<h3 id="_2-\u89C4\u5F8B\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u89C4\u5F8B\u89E3\u6CD5" aria-hidden="true">#</a> \uFF082\uFF09\u89C4\u5F8B\u89E3\u6CD5</h3><p>\u6362\u79CD\u601D\u7EF4\uFF0C\u4E4B\u524D\u662F <strong>\u4ECE\u91CC\u9762\u627E\u662F\u5426\u5230\u8FBE\u8FB9\u754C</strong>\uFF0C\u73B0\u5728\u53EF\u4EE5\u8BD5\u4E0B <strong>\u4ECE\u8FB9\u754C\u5230\u8FBE\u91CC\u9762</strong>\u3002</p><p><strong>\u5982\u679C\u901A\u8FC7\u8FB9\u754C\u904D\u5386\u5B8C\u540E\uFF0C\u6CA1\u6709\u904D\u5386\u5230\u7684 \u201C O \u201D \uFF0C\u5C31\u9700\u8981\u53D8\u4E3A \u201C X \u201D\u3002</strong></p><ul><li>\u8FD9\u4E2A\u89E3\u6CD5\u5C31\u5DE7\u5999\u5730\u89E3\u51B3\u4E86\u7B2C \uFF081\uFF09 \u70B9\u7684\u8017\u65F6\u3002 <ul><li>\u904D\u5386\u4E24\u6B21\u4E0D\u9700\u8981\u6539\u53D8\u7684 \u201C O \u201D</li><li>\u904D\u5386\u4E00\u6B21\u9700\u8981\u6539\u53D8\u7684 \u201C O \u201D</li><li>\u56E0\u4E3A\u6700\u540E\u4E00\u4E2A\u7528\u4F8B\u9700\u8981\u6539\u53D8\u7684 \u201C O \u201D\u8F83\u591A\uFF0C\u6240\u4EE5\u5728\u529B\u6263\u4E0A\u8FD9\u4E2A\u89E3\u6CD5\u6BD4\u8F83\u7701\u65F6</li></ul></li></ul><p>\u4EE3\u7801\u601D\u8DEF\uFF1A</p><ol><li>\u5C06\u901A\u8FC7\u8FB9\u754C\u7684\u904D\u5386\u5230\u7684\u4F4D\u7F6E\u53D8\u4E3A \u201C - \u201D</li><li>\u5C06\u5269\u4F59\u7684 \u201C O \u201D\uFF0C\u53D8\u4E3A \u201C X \u201D</li><li>\u5C06 \u201C - \u201D \u53D8\u4E3A \u201C O \u201D</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> m<span class="token punctuation">;</span>
  <span class="token keyword">int</span> n<span class="token punctuation">;</span>
  <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">;</span>
  <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> direction <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0A      \u4E0B       \u5DE6      \u53F3</span>
    <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">solve</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> board<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    m <span class="token operator">=</span> board<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    n <span class="token operator">=</span> board<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    data <span class="token operator">=</span> board<span class="token punctuation">;</span>

		<span class="token comment">// \u904D\u5386\u7B2C 1 \u884C\u548C\u6700\u540E 1 \u884C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u904D\u5386\u7B2C 1 \u5217\u548C\u6700\u540E 1 \u5217</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C06 &quot;O&quot; \u53D8\u4E3A &quot;X&quot;\uFF0C\u5C06 &quot;-&quot; \u53D8\u4E3A &quot;O&quot;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;O&#39;</span><span class="token punctuation">)</span>
          board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;X&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span>
          board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;O&#39;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5F53\u524D\u904D\u5386\u8FC7\uFF0C\u4E0D\u4E3A &quot;O&quot;\uFF0C\u5E76\u4E14\u5230\u8FBE\u8FB9\u754C\u4E4B\u5916\uFF0C</span>
    <span class="token comment">// \u5219\u9000\u51FA\u5F53\u5C42\u9012\u5F52</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> b <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token operator">||</span> a <span class="token operator">&gt;=</span> m <span class="token operator">||</span> b <span class="token operator">&gt;=</span> n <span class="token operator">||</span> data<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">&#39;O&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06\u5F53\u524D\u4F4D\u7F6E\u7F6E\u4E3A \u201D-\u201C</span>
    data<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">;</span>

    <span class="token comment">// \u904D\u5386\u5F53\u524D\u683C\u7684\u56DB\u4E2A\u65B9\u5411</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> direction<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> na <span class="token operator">=</span> direction<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">;</span>
      <span class="token keyword">int</span> nb <span class="token operator">=</span> direction<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> b<span class="token punctuation">;</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>na<span class="token punctuation">,</span> nb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),A=n("ul",null,[n("li",null,[n("p",null,[s("\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u56E0\u4E3A\u53D8\u5316\u503C\u9700\u8981\u904D\u5386\u6570\u7EC4\u7684\u5168\u90E8\u5143\u7D20\uFF0C\u6240\u4EE5\u590D\u6742\u5EA6\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m*n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("li",null,[n("p",null,[s("\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"m"),n("mo",null,"\u2217"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(m*n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"m"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2217"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])])],-1),X=a(`<h2 id="\u4E94\u5341\u56DB\u3001\u7B2Ck\u4E2A\u8BED\u6CD5\u7B26\u53F7" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u56DB\u3001\u7B2Ck\u4E2A\u8BED\u6CD5\u7B26\u53F7" aria-hidden="true">#</a> \u4E94\u5341\u56DB\u3001\u7B2CK\u4E2A\u8BED\u6CD5\u7B26\u53F7</h2><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/k-th-symbol-in-grammar/</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C779. \u7B2CK\u4E2A\u8BED\u6CD5\u7B26\u53F7\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u6211\u4EEC\u6784\u5EFA\u4E86\u4E00\u4E2A\u5305\u542B <code>n</code> \u884C( <strong>\u7D22\u5F15\u4ECE 1 \u5F00\u59CB</strong> )\u7684\u8868\u3002\u9996\u5148\u5728\u7B2C\u4E00\u884C\u6211\u4EEC\u5199\u4E0A\u4E00\u4E2A <code>0</code>\u3002\u63A5\u4E0B\u6765\u7684\u6BCF\u4E00\u884C\uFF0C\u5C06\u524D\u4E00\u884C\u4E2D\u7684<code>0</code>\u66FF\u6362\u4E3A<code>01</code>\uFF0C<code>1</code>\u66FF\u6362\u4E3A<code>10</code>\u3002</p><ul><li>\u4F8B\u5982\uFF0C\u5BF9\u4E8E <code>n = 3</code> \uFF0C\u7B2C <code>1</code> \u884C\u662F <code>0</code> \uFF0C\u7B2C <code>2</code> \u884C\u662F <code>01</code> \uFF0C\u7B2C3\u884C\u662F <code>0110</code> \u3002</li><li>\u7ED9\u5B9A\u884C\u6570 <code>n</code> \u548C\u5E8F\u6570 <code>k</code>\uFF0C\u8FD4\u56DE\u7B2C <code>n</code> \u884C\u4E2D\u7B2C <code>k</code> \u4E2A\u5B57\u7B26\u3002\uFF08 <code>k</code> <strong>\u4ECE\u7D22\u5F15 1 \u5F00\u59CB</strong>\uFF09</li></ul><p><strong>\u793A\u4F8B 1:</strong></p><ul><li>\u8F93\u5165: n = 1, k = 1</li><li>\u8F93\u51FA: 0</li><li>\u89E3\u91CA: \u7B2C\u4E00\u884C\uFF1A0</li></ul><p><strong>\u793A\u4F8B 2:</strong></p><ul><li>\u8F93\u5165: n = 2, k = 1</li><li>\u8F93\u51FA: 0</li><li>\u89E3\u91CA: <ul><li>\u7B2C\u4E00\u884C: 0</li><li>\u7B2C\u4E8C\u884C: 01</li></ul></li></ul><p><strong>\u63D0\u793A:</strong></p><ul><li><code>1 &lt;= n &lt;= 30</code></li><li><code>1 &lt;= k &lt;= 2n - 1</code></li></ul></blockquote><h3 id="_1-\u666E\u901A\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u666E\u901A\u89E3\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u666E\u901A\u89E3\u6CD5</h3><p>\u4ECE\u9898\u76EE\u53EF\u4EE5\u627E\u5230\u89C4\u5F8B\uFF0C\u4E0B\u4E00\u884C\u7684\u524D\u534A\u90E8\u5206\u662F\u5F53\u524D\u7684\u884C\u3002\u8FD9\u4E2A\u7279\u6027\u5C31\u53EF\u4EE5\u77E5\u9053 <strong>\u6BCF\u4E2A\u6570\u5B57\u4E0D\u4F1A\u968F\u7740\u884C\u6570\u6539\u53D8\u7684</strong>\u3002</p><p>\u73B0\u5728\u9898\u76EE\u5C31\u53D8\u6362\u6210\u4E86\uFF0C\u6C42\u7B2C x \u884C\u7684\u7B2C k \u4E2A\u5B57\u7B26\uFF0C<strong>\u7B2C x \u884C\u7684\u6570\u91CF\u662F\u6700\u63A5\u8FD1 k \u7684\u4F4D\u7F6E\u7684</strong>\uFF0C\u4E0D\u5FC5\u6C42\u51FA\u7B2C n \u884C\u7684\u5168\u90E8\u6570\u5B57\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u5047\u8BBE\u73B0\u5728\u6C42\u51FA\u7B2C 20 \u884C\u7684\u7B2C 3 \u4E2A\u6570\uFF0C\u6211\u4EEC\u4E0D\u5FC5\u5C31\u7B2C 20 \u884C\u7684\u6570\u5B57\u5168\u90E8\u6C42\u51FA\u6765\uFF0C\u53EA\u9700\u8981\u6C42\u5230\u7B2C 3 \u884C\u5C31\u884C\u3002</p><p>\u4E0B\u9762\u4E3A\u90E8\u5206\u901A\u8FC7\u4EE3\u7801\uFF0C\u601D\u8DEF\u6CA1\u9519\uFF0C\u5C31\u662F\u540E\u9762\u7684\u6848\u4F8B\u3002\u4E0D\u901A\u8FC7\u539F\u56E0\uFF0C\u9700\u8981\u7684\u6570\u5B57\u592A\u591A\uFF0C\u4F8B\u5982\u6848\u4F8B <code>30 262466395</code> \uFF0C\u5C31\u9700\u8981 268435456 \u4E2A\u4F4D\u6570\uFF0C\u53D6\u7B2C 262466395 \u4F4D\uFF0C\u800C\u5C31\u7B97\u662F long \u7C7B\u578B\uFF0C\u4E5F\u53EA\u80FD 64 \u4F4D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">kthGrammar</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BA1\u7B97\u51FA\u9700\u8981\u591A\u5C11\u4E2A\u6570\u5B57</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u603B\u7684\u5FAA\u73AF\u6B21\u6570</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B58\u653E\u6700\u7EC8\u7ED3\u679C</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token comment">// \u8BB0\u5F55\u5F53\u524D\u6709\u591A\u5C11\u4E2A\u6570\u5B57</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u53EA\u8981\u5F53\u524D\u6570\u5B57\u4E2A\u6570\u5C11\u4E8E\u9700\u8981\u7684\u6570\u5B57\uFF0C\u5C31\u7EE7\u7EED\u5FAA\u73AF\u8BA1\u7B97\u6BCF\u4E00\u884C\u7684\u6570\u5B57</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5C06\u5F53\u524D\u6570\u5B57\u7684\u540E\u4E00\u534A\u53D6\u51FA\u6765</span>
      <span class="token keyword">int</span> second <span class="token operator">=</span> <span class="token function">cutHalf</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// \u5C06\u540E\u4E00\u534A\u7684\u6570\u5B57\u8FDB\u884C\u6269\u5C55</span>
      <span class="token keyword">int</span> newSecond <span class="token operator">=</span> <span class="token function">extendBit</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5F53\u524D\u6570\u5B57\u4E2A\u6570\u7FFB\u500D</span>
      i <span class="token operator">*=</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u539F\u6570\u7EC4\u8FDB\u884C\u4F4D\u6269\u5C55\uFF0C\u6269\u5C55\u591A\u81EA\u5DF1\u7684\u4E00\u500D</span>
      res <span class="token operator">=</span> res <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u7136\u540E\u66F4\u65B0\u540E\u4E00\u534A\u7684\u6570\u5B57</span>
      res <span class="token operator">+=</span> newSecond<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

		<span class="token comment">// \u53D6\u51FA\u6307\u5B9A\u4F4D\u7F6E\u7684\u6570\u5B57</span>
    <span class="token keyword">return</span> res <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span>count <span class="token operator">-</span> k<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4F5C\u7528\uFF1A\u6269\u5C55\u53C2\u6570\u91CC\u7684\u6BCF\u4E00\u4E2A\u6570\u7EC4</span>
  <span class="token keyword">int</span> <span class="token function">extendBit</span><span class="token punctuation">(</span><span class="token keyword">int</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u53C2\u6570\u662F0\uFF0C\u5219\u76F4\u63A5\u6269\u5C55\u5B8C\u6210\u768401</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u6269\u5C55\u5B8C\u6210\u7684\u6700\u7EC8\u7ED3\u679C</span>
    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F55\u6BCF\u4F4D\u9700\u8981\u79FB\u52A8\u5230\u7684\u4F4D\u7F6E</span>
    <span class="token keyword">int</span> moveBit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>source <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u6700\u540E\u4E00\u4F4D</span>
      <span class="token keyword">int</span> bit <span class="token operator">=</span> source <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>bit <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u662F1\uFF0C\u5219\u5DE6\u79FB\u4E00\u4F4D\uFF0C\u53D8\u4E3A 10</span>
        bit <span class="token operator">=</span> bit <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u662F0\uFF0C\u5219\u52A01\uFF0C\u53D8\u4E3A 01</span>
        bit <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5C06\u7ED3\u679C\u79FB\u4F4D\u5230\u5BF9\u5E94\u4F4D\u7F6E\uFF0C\u7136\u540E\u5B58\u5230res\u91CC</span>
      res <span class="token operator">+=</span> bit <span class="token operator">&lt;&lt;</span> moveBit<span class="token punctuation">;</span>
      <span class="token comment">// \u66F4\u65B0\u79FB\u52A8\u5230\u7684\u4F4D\u7F6E</span>
      moveBit <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u6700\u540E\u4E00\u4F4D\u53BB\u6389</span>
      source <span class="token operator">=</span> source <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4F5C\u7528\uFF1A\u5C06\u53C2\u6570\u5207\u4E00\u534A</span>
  <span class="token comment">// \u8FD4\u56DE\uFF1A\u53C2\u6570\u7684\u540E\u534A\u90E8\u5206</span>
  <span class="token keyword">int</span> <span class="token function">cutHalf</span><span class="token punctuation">(</span><span class="token keyword">int</span> source<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5C06\u53C2\u6570\u53F3\u79FB\u4E00\u534A\u518D\u5DE6\u79FB\u4E00\u534A\uFF0C\u5C31\u80FD\u5C06\u540E\u534A\u90E8\u5206\u6E05\u96F6</span>
    <span class="token keyword">int</span> first <span class="token operator">=</span> source <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u53C2\u6570\u51CF\u53D6\u9AD8\u4F4D\uFF0C\u5C31\u80FD\u5F97\u5230\u4F4E\u4F4D</span>
    <span class="token keyword">int</span> second <span class="token operator">=</span> source <span class="token operator">-</span> first<span class="token punctuation">;</span>

    <span class="token keyword">return</span> second<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u89C4\u5F8B\u89E3\u6CD5-1" tabindex="-1"><a class="header-anchor" href="#_2-\u89C4\u5F8B\u89E3\u6CD5-1" aria-hidden="true">#</a> \uFF082\uFF09\u89C4\u5F8B\u89E3\u6CD5</h3><p>\u4ECE\u4E0A\u9762\u53EF\u77E5\uFF0C\u4E0D\u8BBA\u591A\u5C11\u884C\uFF0C<strong>\u6BCF\u4E00\u4F4D\u7684\u6570\u5B57\u90FD\u662F\u4E00\u6210\u4E0D\u53D8\u7684</strong>\u3002\u4F8B\u5982\u7B2C 1 \u884C\u7684\u7B2C 1 \u4E2A\u6570\u5B57\u548C\u7B2C 30 \u884C\u7684\u7B2C 1 \u4E2A\u6570\u5B57\u662F\u4E00\u81F4\u7684\u3002</p><p>\u6211\u4EEC\u5C31\u9700\u8981\u627E\u5230\u5176\u4E2D\u7684\u89C4\u5F8B\uFF0C<strong>\u8FD9\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E\u548C\u6700\u7EC8\u5F97\u51FA\u7684\u6570\u5B57\u6709\u6CA1\u6709\u89C4\u5F8B</strong>\u3002</p><p>\u770B\u5230 0 1 \u4EA4\u66FF\u51FA\u73B0\uFF0C\u4F1A\u6709\u70B9\u5947\u5076\u6821\u9A8C\u7684\u611F\u89C9</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A\u6613\u77E5\u89C1\u51E0\u4E2A\u6570\u4E3A 0110 1001</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7D22\u5F15\u4E3Ax -&gt; \u6570\u503C
  0    -&gt;  0   0000[0\u4E2A1]
  1    -&gt;  1   0001[1\u4E2A1]
  2    -&gt;  1   0010[1\u4E2A1]
  3    -&gt;  0   0011[2\u4E2A1]
  4    -&gt;  1   0100[1\u4E2A1]
  5    -&gt;  0   0101[2\u4E2A1]
  6    -&gt;  0   0110[2\u4E2A1]
  7    -&gt;  1   0111[3\u4E2A1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE 1 \u7684\u4E2A\u6570\u53EF\u4EE5\u53D1\u73B0\u89C4\u5F8B\uFF0C\u5F53 0\u30012 \u4E2A 1 \u65F6\uFF0C\u6570\u503C\u5C31\u662F 0\uFF1B\u5F53 1\u30013 \u4E2A 1 \u65F6\uFF0C\u6570\u503C\u5C31\u662F 1</p><p>\u6362\u53E5\u8BDD\u6765\u8BF4\uFF0C\u5C31\u662F\u5C06\u5F53\u524D\u7D22\u5F15\u8F6C\u6362\u6210\u4E8C\u8FDB\u5236\uFF0C <strong>\u8FD9\u4E2A\u4E8C\u8FDB\u5236\u91CC\u7684 1 \u7684\u4E2A\u6570\u4E3A\u5076\u6570\uFF0C\u6570\u503C\u5C31\u662F 0\uFF1B\u5947\u6570\u7684\u8BDD\uFF0C\u6570\u503C\u5C31\u662F 1</strong></p><p>\u4E00\u53E5\u8BDD\u6765\u8BF4\u5C31\u662F <strong>\u5076\u6821\u9A8C</strong> \uFF08\u539F\u672C\u7684\u4E8C\u8FDB\u5236\u6570 + \u6570\u503C \u7684 1 \u7684\u4E2A\u6570\u662F\u5076\u6570\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">kthGrammar</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u7B2Cx\u4F4D\uFF0C\u8F6C\u5316\u4E3A\u7D22\u5F15\u4E3Ax</span>
    k<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u4E8E\u7D2F\u8BA11\u4E2A\u4E2A\u6570</span>
    <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5FAA\u73AF\u53D6\u51FA\u6BCF\u4E00\u4E2A\u4F4D\u7684\u6570</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u53D6\u51FA\u6700\u540E1\u4F4D</span>
      <span class="token keyword">int</span> bit <span class="token operator">=</span> k <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u662F1\uFF0C\u5219\u7D2F\u8BA1\u52A01</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>bit <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        total<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u66F4\u65B0\u6700\u540E\u4E00\u4F4D</span>
      k <span class="token operator">=</span> k <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u5076\u6570\u5C31\u8FD4\u56DE0</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5982\u679C\u662F\u5947\u6570\u5C31\u8FD4\u56DE1</span>
      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u4F4D\u7F6E\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u4F4D\u7F6E\u89E3\u6CD5" aria-hidden="true">#</a> \uFF083\uFF09\u4F4D\u7F6E\u89E3\u6CD5</h3><p>\u6839\u636E\u7B2C\uFF081\uFF09\u70B9\uFF0C\u4E0B\u4E00\u884C\u7684\u524D\u534A\u90E8\u5206\u662F\u5F53\u524D\u7684\u884C\uFF0C\u6240\u4EE5\u6211\u4EEC\u5C31\u9700\u8981\u627E\u5230\u540E\u534A\u90E8\u5206 \u4E0E \u524D\u534A\u90E8\u5206\u7684\u89C4\u5F8B</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0            
01           		  -&gt; 0        \u7684\u76F8\u53CD\u662F 1    
01 10             -&gt; 01       \u7684\u76F8\u53CD\u662F 10  
0110 1001         -&gt; 0110     \u7684\u76F8\u53CD\u662F 1001 
01101001 10010110 -&gt; 01101001 \u7684\u76F8\u53CD\u662F 10010110 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u5F97\u77E5\u524D\u90E8\u5206\u53D6\u53CD\u5C31\u662F\u540E\u534A\u90E8\u5206\u3002\u4F46\u4ECE\u7B2C\uFF081\uFF09\u70B9\u53EF\u77E5\uFF0C\u6211\u4EEC\u4E0D\u53EF\u80FD\u5C06\u6240\u6709\u7684\u6570\u5B57\u6C42\u51FA\u6765\uFF0C\u7136\u540E\u518D\u53D6\u51FA\u6307\u5B9A\u4F4D\u7F6E\u7684\u6570\u5B57\u3002\u6240\u4EE5\u9700\u8981\u4E8C\u5206\u6CD5\u6765\u4E0D\u65AD\u53CD\u8F6C\u3002</p><p>\u7528\u7B2C 5 \u884C\u4E3E\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><p>\u73B0\u5728\u8981\u6C42\u51FA\u7B2C 13 \u4E2A\u6570\u5B57\u7684\u503C\uFF0C\u4ECE\u4E0A\u9762\u4E00\u4E2A\u4E2A\u6570\u53EF\u77E5\uFF0C\u7B2C13\u4E2A\u6570\u662F 0</p><ol><li><p>\u5148\u6C42\u51FA\u5F53\u524D\u884C\u7684\u6570\u5B57\u7684\u4E2A\u6570 \u2014\u2014 2<sup>4</sup> = 16</p></li><li><p>\u6839\u636E\u9700\u8981\u6C42\u6570\u5B57\u7684\u4F4D\u7F6E\u5B9A\u4F4D\u5230\u662F <strong>\u524D\u534A\u90E8\u5206</strong> \u8FD8\u662F <strong>\u540E\u534A\u90E8\u5206</strong></p></li><li><p>13 &gt; 16/2 = 8 \u6240\u4EE5\u5728\u540E\u534A\u90E8\u5206</p></li><li><p>\u7136\u540E\u5728 <strong>\u524D\u534A\u90E8\u5206\u7684\u5BF9\u5E94\u4F4D\u7F6E/\u4E0A\u4E00\u884C\u7684\u5BF9\u5E94\u4F4D\u7F6E</strong> \u53D6\u53CD</p></li><li><p>\u800C <strong>\u524D\u90E8\u5206\u7684\u5BF9\u5E94\u4F4D\u7F6E/\u4E0A\u4E00\u884C\u7684\u5BF9\u5E94\u4F4D\u7F6E</strong> \u4E5F\u53EF\u4EE5\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C\u7136\u540E\u56DE\u5230\u7B2C 1 \u6B65</p></li></ol><p>\uFF08\u7B2C 4 \u6B65\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\u8BB0\u5F55\u5728\u540E\u534A\u90E8\u5206\u7684\u4F4D\u7F6E\uFF0C\u7136\u540E\u5728\u9000\u51FA\u9012\u5F52\u7684\u65F6\u5019\u76F4\u63A5\u8BA1\u7B97\u8BB0\u5F55\u7684\u5947\u5076\u6027\uFF09</p><p>\u8FD9\u4E2A\u5C31\u53EF\u4EE5\u4F7F\u7528\u9012\u5F52\u6765\u8BA1\u7B97</p><h2 id="\u4E94\u5341\u4E94\u3001\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E94\u3001\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868" aria-hidden="true">#</a> \u4E94\u5341\u4E94\u3001\u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868</h2><p>\u539F\u6587\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485797&amp;idx=1&amp;sn=1ff86bf0657d94697cdece55767f75ba&amp;chksm=fd9ca27acaeb2b6cf3ae56cde513b218e1bbb4d8adba5e3eb79be0a5bb8f54d7135077a52b98&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C21. \u5408\u5E76\u4E24\u4E2A\u6709\u5E8F\u94FE\u8868\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>\u300CEasy\u300D</strong>\u3002</p><p>\u5C06\u4E24\u4E2A\u5347\u5E8F\u94FE\u8868\u5408\u5E76\u4E3A\u4E00\u4E2A\u65B0\u7684**\u300C\u5347\u5E8F\u300D**\u94FE\u8868\u5E76\u8FD4\u56DE\u3002</p><p>\u65B0\u94FE\u8868\u662F\u901A\u8FC7\u62FC\u63A5\u7ED9\u5B9A\u7684\u4E24\u4E2A\u94FE\u8868\u7684\u6240\u6709\u8282\u70B9\u7EC4\u6210\u7684\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><ul><li>\u8F93\u5165\uFF1A <ul><li>l1 = [1, 2, 4]</li><li>l2 = [1, 3, 4]</li></ul></li><li>\u8F93\u51FA\uFF1A[1, 1, 2 ,3, 4, 4]</li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>\u4E24\u4E2A\u94FE\u8868\u7684\u8282\u70B9\u6570\u76EE\u8303\u56F4\u662F [0, 50]</li><li>-100 &lt;= Node.val &lt;= 100</li><li><code>l1</code> \u548C <code>l2</code> \u5747\u6309\u300C\u975E\u9012\u51CF\u987A\u5E8F\u300D\u6392\u5217</li></ul><p>\u94FE\u8868\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// Definition for singly-linked list.</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> val<span class="token punctuation">;</span>
  <span class="token class-name">ListNode</span> next<span class="token punctuation">;</span>
  <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> next<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="_1-\u6838\u5FC3\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u6838\u5FC3\u89E3\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u6838\u5FC3\u89E3\u6CD5</h3><p>\u6211\u4EEC\u4F7F\u7528\u53CC\u6307\u9488\u89E3\u6CD5\u3002</p><p>\u505A\u6709\u5173\u94FE\u8868\u7684\u9898\u76EE\uFF0C\u6709\u4E2A\u5E38\u7528\u6280\u5DE7\uFF1A<strong>\u6DFB\u52A0\u4E00\u4E2A\u865A\u62DF\u5934\u7ED3\u70B9\uFF08\u54E8\u5175\uFF09</strong>\uFF0C\u53EF\u4EE5\u7B80\u5316\u8FB9\u754C\u60C5\u51B5\u7684\u5224\u65AD\u3002</p><p>\u8FB9\u754C\u60C5\u51B5\u7684\u5224\u65AD\u4E3B\u8981\u5728\u4E8E\u4E09\u4E2A\u65B9\u9762</p><ul><li>\u5176\u4E2D\u4E00\u4E2A\u94FE\u8868\u4E3A\u7A7A</li><li>\u7B2C\u4E00\u4E2A\u548C\u7B2C\u4E8C\u4E2A\u94FE\u8868\u90FD\u4E3A\u7A7A</li></ul><p>\u5982\u679C\u4E0D\u8003\u8651\u8FB9\u754C\u60C5\u51B5\u7684\u6838\u5FC3\u4EE3\u7801\u5982\u4E0B\uFF1A</p><ul><li>\u5FAA\u73AF\u7684\u9000\u51FA\u7684\u6761\u4EF6\u662F\u4E24\u4E2A\u94FE\u8868\u5176\u4E2D\u4E00\u4E2A\u4E3A\u7A7A</li><li>\u5FAA\u73AF\u91CC\u6240\u4F5C\u7684\u4E8B\u662F <ul><li>1\u3001\u627E\u51FA\u6570\u5B57\u5927\u7684\u8282\u70B9</li><li>2\u3001\u5C06\u7ED3\u679C\u94FE\u8868\u6307\u5411\u6570\u5B57\u5927\u7684\u8282\u70B9</li><li>3\u3001\u6570\u5B57\u5927\u7684\u8282\u70B9\u5411\u540E\u79FB\u52A8\u4E00\u4E2A</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>list1 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>list1<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> list2<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temp<span class="token punctuation">.</span>next <span class="token operator">=</span> list2<span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    list2 <span class="token operator">=</span> list2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    temp<span class="token punctuation">.</span>next <span class="token operator">=</span> list1<span class="token punctuation">;</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    list1 <span class="token operator">=</span> list1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u9000\u51FA\u5FAA\u73AF\u6709\u4E24\u79CD\u53EF\u80FD\uFF1A <ul><li>\u5176\u4E2D\u4E00\u4E2A\u6307\u9488\u6307\u5411\u4E3A\u7A7A -&gt; \u5C06\u4E3A\u7A7A\u7684\u6307\u9488\u6307\u5411\u4E0D\u4E3A\u7A7A\u7684\u6307\u9488</li><li>\u4E24\u4E2A\u94FE\u8868\u90FD\u4E3A\u7A7A -&gt; \u4E0D\u505A\u4EFB\u4F55\u4E8B</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span><span class="token punctuation">(</span>list1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  temp<span class="token punctuation">.</span>next <span class="token operator">=</span> list2<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  temp<span class="token punctuation">.</span>next <span class="token operator">=</span> list1<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u53CC\u6307\u9488\u89E3\u6CD5-\u54E8\u5175\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#_2-\u53CC\u6307\u9488\u89E3\u6CD5-\u54E8\u5175\u6280\u5DE7" aria-hidden="true">#</a> \uFF082\uFF09\u53CC\u6307\u9488\u89E3\u6CD5\uFF08\u54E8\u5175\u6280\u5DE7\uFF09</h3><p>\u5982\u679C\u4E0D\u6DFB\u52A0\u4E00\u4E2A\u865A\u62DF\u5934\u7ED3\u70B9\uFF08\u54E8\u5175\uFF09\uFF0C\u770B\u8981\u600E\u4E48\u6765\u5199\u4EE3\u7801\uFF1A</p><ol><li>\u5224\u65AD\u4E24\u4E2A\u94FE\u8868\u54EA\u4E2A\u4E3A\u7A7A</li><li>\u7ED3\u679C\u94FE\u8868\u6307\u5411\u5176\u4E2D\u4E0D\u4E3A\u7A7A\u7684\u94FE\u8868</li><li>\u4E0D\u4E3A\u7A7A\u94FE\u8868\u7684\u5934\u6307\u9488\u79FB\u52A8\u5230\u4E0B\u4E00\u683C</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ListNode</span> temp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>list1 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list2 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5F53list1\u4E3A\u7A7A</span>
	temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>list2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  list2 <span class="token operator">=</span> list<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>list2 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list1 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>	<span class="token comment">// \u5F53list2\u4E3A\u7A7A</span>
  temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>list2<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  list2 <span class="token operator">=</span> list<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...</span>

<span class="token keyword">return</span> temp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6DFB\u52A0\u4E86\u865A\u62DF\u5934\u7ED3\u70B9\uFF0C\u5C31\u4EE3\u7801\u5C31\u5F88\u7B80\u5355\u4E86\u3002</p><ol><li>\u5934\u6307\u9488\u4E0D\u52A8</li><li>\u65B0\u5EFA\u4E00\u4E2A\u4E34\u65F6\u6307\u9488\uFF0C\u6700\u5F00\u59CB\u6307\u5411\u5934\u7ED3\u70B9\uFF0C\u7136\u540E\u5F80\u540E\u79FB\u52A8\u6DFB\u52A0\u7ED3\u70B9</li><li>\u6700\u540E\u8FD4\u56DE\u5934\u6307\u9488\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u865A\u62DF\u5934\u7ED3\u70B9\uFF0C\u56E0\u4E3A\u7528\u4E0D\u5230\u5176\u503C\uFF0C\u5176\u503C\u53EF\u4EE5\u968F\u610F</span>
<span class="token class-name">ListNode</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5EFA\u4E00\u4E2A\u4E34\u65F6\u7ED3\u70B9</span>
<span class="token class-name">ListNode</span> temp <span class="token operator">=</span> head<span class="token punctuation">;</span>

<span class="token comment">// ...</span>

<span class="token comment">// \u8FD4\u56DE\u865A\u62DF\u5934\u7ED3\u70B9\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
<span class="token keyword">return</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u516D\u3001\u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u516D\u3001\u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9" aria-hidden="true">#</a> \u4E94\u5341\u516D\u3001\u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9</h2><p>\u539F\u6587\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247485831&amp;idx=1&amp;sn=9881e540c2c329d211dfb12308a9ce86&amp;chksm=fd9ca298caeb2b8e5120e16462e4b4722cedecdd122d97cf049a2f5f32a0254ca461c660d678&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C24. \u4E24\u4E24\u4EA4\u6362\u94FE\u8868\u4E2D\u7684\u8282\u70B9\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u7ED9\u5B9A\u4E00\u4E2A\u94FE\u8868\uFF0C\u4E24\u4E24\u4EA4\u6362\u5176\u4E2D\u76F8\u90BB\u7684\u8282\u70B9\uFF0C\u5E76\u8FD4\u56DE\u4EA4\u6362\u540E\u7684\u94FE\u8868\u3002</p><p>\u4F60\u4E0D\u80FD\u53EA\u662F\u5355\u7EAF\u7684\u6539\u53D8\u8282\u70B9\u5185\u90E8\u7684\u503C\uFF0C\u800C\u662F\u9700\u8981\u5B9E\u9645\u7684\u8FDB\u884C\u8282\u70B9\u4EA4\u6362\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1A</p><ul><li>head = [1,2,3,4]</li></ul><p>\u8F93\u51FA\uFF1A</p><ul><li>result = [2,1,4,3]</li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>\u94FE\u8868\u4E2D\u8282\u70B9\u7684\u6570\u76EE\u5728\u8303\u56F4 [0, 100] \u5185</li><li>0 &lt;= Node.val &lt;= 100</li></ul></blockquote><h3 id="_1-\u9012\u5F52\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u9012\u5F52\u89E3\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u9012\u5F52\u89E3\u6CD5</h3><p>\u56E0\u4E3A\u662F\u91CD\u590D\u505A\u4E00\u6837\u7684\u4E8B\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5FAA\u73AF\u6216\u8005\u9012\u5F52\uFF0C\u8FD9\u91CC\u5148\u4F7F\u7528\u9012\u5F52</p><p>\u6838\u5FC3\u7B97\u6CD5\uFF1A<strong>\u4EA4\u6362\u4E24\u4E2A\u7ED3\u70B9</strong>\uFF0C\u5177\u4F53\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><ol><li>\u73B0\u5728\u6307\u9488 head \u6307\u5411\u7684\u662F\u8FD9\u4E24\u4E2A\u7ED3\u70B9\u7684 <strong>\u524D\u9762\u4E00\u4E2A\u7ED3\u70B9</strong></li><li>\u5047\u8BBE\u8FD9\u4E24\u4E2A\u7ED3\u70B9\u7684\u7B2C\u4E00\u4E2A\u7ED3\u70B9\u4E3A before\uFF0C\u7B2C\u4E8C\u4E2A\u7ED3\u70B9\u4E3A after</li><li>\u5148 head \u6307\u5411 after\uFF0C\u8FD9\u6B65\u5C06 after \u7ED3\u70B9\u4ECE\u7B2C\u4E8C\u4E2A\u7ED3\u70B9\u53D8\u4E3A\u4E86\u7B2C\u4E00\u4E2A\u7ED3\u70B9\uFF0Cbefore \u7ED3\u70B9\u8FD9\u65F6\u53D8\u4E3A\u540E\u534A\u90E8\u5206\u7684\u5934\u7ED3\u70B9</li><li>\u7136\u540E\u5C06 before \u7ED3\u70B9\u6307\u5411 after \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u4E0D\u518D\u6307\u5411 after \u7ED3\u70B9\uFF0C<strong>\u9632\u6B62 after \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u4E22\u5931</strong></li><li>\u6700\u540E\u5C06 after \u6307\u5411 before \uFF0C\u8FD9\u6B65\u4E0E after \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u65AD\u5F00\uFF0C\u4E0E before \u548C\u539F\u6765\u76F8\u53CD\u8FDE\u63A5</li></ol><p>\u6700\u540E\u4EE3\u7801\u5982\u4E0B\uFF1A<strong>\u8FD9\u91CC\u4E5F\u4F7F\u7528\u4E86\u865A\u62DF\u5934\u7ED3\u70B9</strong>\uFF0C\u8FD9\u6837\u5728\u7B2C 1 \u4E2A\u9012\u5F52\u7684\u65F6\u5019\u4E5F\u7B26\u5408\u666E\u904D\u60C5\u51B5\uFF08\u6709\u524D\u7ED3\u70B9\uFF09\uFF0C\u8FD9\u6837\u53EF\u4EE5\u4E0D\u7528\u7279\u6B8A\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">ListNode</span> before <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>before <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> before<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u51FAafter\u7ED3\u70B9</span>
    <span class="token class-name">ListNode</span> after <span class="token operator">=</span> before<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    
    <span class="token comment">// \u5148 head \u6307\u5411 after</span>
    head<span class="token punctuation">.</span>next <span class="token operator">=</span> after<span class="token punctuation">;</span>
    
    <span class="token comment">// \u5C06 before \u7ED3\u70B9\u6307\u5411 after \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    before<span class="token punctuation">.</span>next <span class="token operator">=</span> after<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    
    <span class="token comment">// \u6700\u540E\u5C06 after \u6307\u5411 before</span>
    after<span class="token punctuation">.</span>next <span class="token operator">=</span> before<span class="token punctuation">;</span>

    <span class="token comment">// \u73B0\u5728before\u53D8\u4E3A\u7B2C2\u4E2A\u7ED3\u70B9</span>
    <span class="token comment">// \u4F20\u5165\u65B9\u6CD5\u7EE7\u7EED\u9012\u5F52</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5904\u7406\u4E86\u4E00\u4E9B\u8FB9\u754C\u60C5\u51B5\uFF0C\u4F8B\u5982\u4E24\u4E2A\u7ED3\u70B9\u5176\u4E2D\u6709\u4E00\u4E2A\u4E3A\u7A7A\uFF0C\u6216\u8005\u4E24\u4E2A\u90FD\u4E3A\u7A7A\uFF0C\u5224\u65AD\u987A\u5E8F\u5982\u4E0B\uFF1A</p><ol><li>\u4E24\u4E2A\u4E3A\u7A7A\uFF0C\u53EA\u9700\u8981\u5224\u65AD before \u662F\u5426\u4E3A\u7A7A</li><li>\u5982\u679C\u5176\u4E2D\u4E00\u4E2A\u4E3A\u7A7A\uFF0C\u90A3\u4E00\u5B9A\u662F after \u4E3A\u7A7A\uFF0C\u53EA\u9700\u8981\u5224\u65AD after \u662F\u5426\u4E3A\u7A7A</li><li>\u6CE8\u610F\u4E00\u5B9A\u5148\u5224\u65AD before \u4E3A\u7A7A\uFF0C\u5982\u679C\u4E3A\u7A7A\u5219 before.next \u5C31\u4F1A\u62A5\u9519\uFF0C\u5982\u7B2C 2 \u884C\u3002after \u7684\u521D\u59CB\u5316\u4E00\u5B9A\u8981\u5199\u5728 if \u91CC\u9762\uFF0C\u5982\u7B2C 4 \u884C</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token class-name">ListNode</span> before <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>before <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> before<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u53D6\u51FAafter\u7ED3\u70B9</span>
    <span class="token class-name">ListNode</span> after <span class="token operator">=</span> before<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u8FED\u4EE3\u89E3\u6CD5-\u54E8\u5175\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#_2-\u8FED\u4EE3\u89E3\u6CD5-\u54E8\u5175\u6280\u5DE7" aria-hidden="true">#</a> \uFF082\uFF09\u8FED\u4EE3\u89E3\u6CD5\uFF08\u54E8\u5175\u6280\u5DE7\uFF09</h3><p>\u6240\u6709\u7684\u9012\u5F52\u90FD\u80FD\u8F6C\u5316\u4E3A\u8FED\u4EE3\uFF1A\u5C06\u9012\u5F52\u9000\u51FA\u7684\u6761\u4EF6\u53D8\u4E3A\u8FED\u4EE3\uFF08\u5FAA\u73AF\uFF09\u9000\u51FA\u7684\u6761\u4EF6</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">swapPairs</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">ListNode</span> empty <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  empty<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">;</span>

  <span class="token class-name">ListNode</span> temp <span class="token operator">=</span> empty<span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>temp<span class="token punctuation">.</span>next<span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> before <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token comment">// \u53D6\u51FAafter\u7ED3\u70B9</span>
    <span class="token class-name">ListNode</span> after <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>

    <span class="token comment">// \u5148 head \u6307\u5411 after</span>
    temp<span class="token punctuation">.</span>next <span class="token operator">=</span> after<span class="token punctuation">;</span>

    <span class="token comment">// \u5C06 before \u7ED3\u70B9\u6307\u5411 after \u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</span>
    before<span class="token punctuation">.</span>next <span class="token operator">=</span> after<span class="token punctuation">.</span>next<span class="token punctuation">;</span>

    <span class="token comment">// \u6700\u540E\u5C06 after \u6307\u5411 before</span>
    after<span class="token punctuation">.</span>next <span class="token operator">=</span> before<span class="token punctuation">;</span>

    temp <span class="token operator">=</span> before<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> empty<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E94\u5341\u4E03\u3001\u641C\u7D22\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E94\u5341\u4E03\u3001\u641C\u7D22\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4" aria-hidden="true">#</a> \u4E94\u5341\u4E03\u3001\u641C\u7D22\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4</h2><p>\u539F\u6587\u94FE\u63A5\uFF1Ahttps://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&amp;mid=2247486020&amp;idx=2&amp;sn=9ada4b6e7eccecddbd8faa18f14c4eeb&amp;chksm=fd9ca15bcaeb284d727905c174624e32b39b196e2337a2bfc791b22fcce35eb543b552031530&amp;cur_album_id=1715134171561410565&amp;scene=189#wechat_redirect</p><p>\u539F\u9898\u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/search-in-rotated-sorted-array/</p><blockquote><p>\u8FD9\u662F LeetCode \u4E0A\u7684**\u300C33. \u641C\u7D22\u65CB\u8F6C\u6392\u5E8F\u6570\u7EC4\u300D**\uFF0C\u96BE\u5EA6\u4E3A <strong>Medium</strong>\u3002</p><p>\u5347\u5E8F\u6392\u5217\u7684\u6574\u6570\u6570\u7EC4 nums \u5728\u9884\u5148\u672A\u77E5\u7684\u67D0\u4E2A\u70B9\u4E0A\u8FDB\u884C\u4E86\u65CB\u8F6C</p><p>\u4F8B\u5982\uFF0C [0,1,2,4,5,6,7] \u7ECF\u65CB\u8F6C\u540E\u53EF\u80FD\u53D8\u4E3A [4,5,6,7,0,1,2] \u3002</p><p>\u8BF7\u4F60\u5728\u6570\u7EC4\u4E2D\u641C\u7D22 target \uFF0C\u5982\u679C\u6570\u7EC4\u4E2D\u5B58\u5728\u8FD9\u4E2A\u76EE\u6807\u503C\uFF0C\u5219\u8FD4\u56DE\u5B83\u7684\u7D22\u5F15\uFF0C\u5426\u5219\u8FD4\u56DE -1 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><ul><li><p>\u8F93\u5165\uFF1Anums = [4, 5, 6, 7, 0, 1, 2], target = 0</p></li><li><p>\u8F93\u51FA\uFF1A4</p></li></ul><p>\u793A\u4F8B 2\uFF1A</p><ul><li>\u8F93\u5165\uFF1Anums = [4, 5, 6, 7, 0, 1, 2], target = 3</li><li>\u8F93\u51FA\uFF1A-1</li></ul><p>\u63D0\u793A\uFF1A</p><ul><li>1 &lt;= nums.length &lt;= 5000</li><li>- &lt;= nums[i] &lt;=</li><li><code>nums</code> \u4E2D\u7684\u6BCF\u4E2A\u503C\u90FD \u72EC\u4E00\u65E0\u4E8C</li><li><code>nums</code> \u80AF\u5B9A\u4F1A\u5728\u67D0\u4E2A\u70B9\u4E0A\u65CB\u8F6C</li><li>- &lt;= target &lt;=</li></ul><p>\u8FDB\u9636\uFF1A\u4F60\u53EF\u4EE5\u8BBE\u8BA1\u4E00\u4E2A\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A \u7684\u89E3\u51B3\u65B9\u6848\u5417\uFF1F</p></blockquote><h3 id="_1-\u4E8C\u5206\u89E3\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u4E8C\u5206\u89E3\u6CD5" aria-hidden="true">#</a> \uFF081\uFF09\u4E8C\u5206\u89E3\u6CD5</h3><p>\u6734\u7D20\u89E3\u6CD5\u5F88\u7B80\u5355\uFF0C\u76F4\u63A5\u904D\u5386\u6570\u7EC4\u6BCF\u4E00\u4E2A\u503C\u5C31\u53EF\u4EE5\u3002\u73B0\u5728\u4F7F\u7528\u4E8C\u5206\u89E3\u6CD5\u6765\u89E3\u51B3</p><ol><li>\u4F7F\u7528\u4E8C\u5206\u6CD5\u627E\u51FA\u65CB\u8F6C\u70B9\u3002</li></ol><p>\u5C0F\u6280\u5DE7\uFF1A</p><ul><li><p><code> / 2</code> \u8FD0\u7B97\u53EF\u4EE5\u4F7F\u7528 <code>&gt;&gt;1</code> \u6765\u4EE3\u66FF</p></li><li><p>\u6839\u636E\u9898\u76EE\u53EF\u4EE5\u77E5\u9053\uFF0C\u65CB\u8F6C\u70B9\u662F\u5DE6\u4FA7\uFF0C<strong>\u9700\u8981\u6CE8\u610F <code>mid</code> \u7684\u53D6\u503C\u548C\u5224\u65AD\u7684\u8054\u52A8\u5173\u7CFB</strong>\u3002</p><ul><li>\u4F8B\u5982\u5F53\u53EA\u6709\u4E24\u4E2A\u5143\u7D20\u65F6\uFF0C<code>mid</code> \u53D6\u5F97\u662F\u5DE6\u8FB9\u90A3\u4E2A\u6570\uFF0C\u7136\u540E\u5728\u4E0B\u9762\u5224\u65AD\u9700\u8981\u6539\u53D8 r \u6216\u8005 l\u3002\u6839\u636E\u65CB\u8F6C\u70B9\u5728\u5DE6\u4FA7\uFF0C\u5E76\u4E14\u65E0\u91CD\u590D\u503C\uFF0C\u53EF\u77E5\u82E5\u53EA\u5269\u4E24\u4E2A\u6570\uFF0C\u5DE6\u8FB9\u7684\u6570\u4E00\u5B9A\u662F\u65CB\u8F6C\u70B9\uFF0C<strong>\u6240\u4EE5\u9700\u8981\u6539\u53D8 r</strong> \uFF0C\u5982\u4EE3\u7801\u6240\u793A \u2014\u2014 <code>r = mid - 1;</code></li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// mid = (r + l + 1) / 2 \u3010&gt;&gt;1\u3011</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// = \u7684\u60C5\u51B5\u662F\u5F53\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\u7684\u65F6\u5019</span>
    l <span class="token operator">=</span> mid<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// \u4E0D\u53EF\u4EE5\u6539\u53D8\u4E3A r = mid;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u5224\u65AD\u76EE\u6807\u6570\u5728\u5DE6\u4FA7\u8FD8\u662F\u53F3\u4FA7\u3002</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 2. \u5224\u65AD\u662F\u5426\u76EE\u6807\u6570\u5728\u65CB\u8F6C\u70B9\u7684\u5DE6\u8FB9\u548C\u53F3\u8FB9</span>
<span class="token comment">// \u6B64\u65F6 l \u548C r \u90FD\u4EE3\u8868\u65CB\u8F6C\u70B9\uFF0C\u6539\u53D8 l \u6216 r\uFF0C\u6784\u9020\u51FA\u4E00\u4E2A\u53EA\u5347\u5E8F\u7684\u6570\u5217</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4EE3\u8868\u76EE\u6807\u6570\u5728\u65CB\u8F6C\u70B9\u53F3\u8FB9</span>
  r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  l <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u65CB\u8F6C\u70B9\u7684\u7279\u6B8A\u6027\uFF0C\u6240\u4EE5\u4E0D\u80FD\u5305\u62EC\u5728\u53F3\u8FB9</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// \u65CB\u8F6C\u70B9\u7684\u7279\u6B8A\u6027\uFF0C\u53EF\u4EE5\u5305\u62EC\u5728\u5DE6\u8FB9</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u4F7F\u7528\u4E8C\u5206\u6CD5\u627E\u51FA\u76EE\u6807\u6570</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5728\u8FD9\u91CC\u627E\u5230\u6700\u63A5\u8FD1\u76EE\u6807\u6570\u7684\u4F4D\u7F6E</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">+</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r <span class="token operator">=</span> mid<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// \u8FD9\u91CC\u4E0D\u5305\u62EC\u7B49\u4E8E\u4E2D\u95F4\u6570\u7684\u8BDD\uFF0C\u5C31\u4E00\u5B9A\u8981\u79FB\u52A8</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">return</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token operator">?</span> l <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,77),N=n("ol",null,[n("li",null,[s("\u867D\u7136\u4F7F\u7528\u4E86\u4E24\u6B21\u4E8C\u5206\u6CD5\uFF0C\u5176\u65F6\u95F4\u590D\u6742\u5EA6\u662F "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"2"),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(2logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"2"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \uFF0C\u4F46\u7701\u7565\u5E38\u6570\u65F6\u95F4\u590D\u6742\u5EA6\u4F9D\u7136\u662F "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])],-1),z=a(`<p>\u5168\u90E8\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// 1. \u627E\u51FA\u65CB\u8F6C\u70B9</span>
        <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// TODO mid = (r + l + 1) / 2 \u3010&gt;&gt;1\u3011</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// = \u7684\u60C5\u51B5\u662F\u5F53\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\u7684\u65F6\u5019</span>
                l <span class="token operator">=</span> mid<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// TODO \u662F\u5426\u53EF\u4EE5\u6539\u53D8\u4E3A r = mid;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 2. \u5224\u65AD\u662F\u5426\u76EE\u6807\u6570\u5728\u65CB\u8F6C\u70B9\u7684\u5DE6\u8FB9\u548C\u53F3\u8FB9</span>
        <span class="token comment">// \u6B64\u65F6 l \u548C r \u90FD\u4EE3\u8868\u65CB\u8F6C\u70B9\uFF0C\u6539\u53D8 l \u6216 r\uFF0C\u6784\u9020\u51FA\u4E00\u4E2A\u53EA\u5347\u5E8F\u7684\u6570\u5217</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4EE3\u8868\u76EE\u6807\u6570\u5728\u65CB\u8F6C\u70B9\u53F3\u8FB9</span>
            r <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
            l <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u65CB\u8F6C\u70B9\u7684\u7279\u6B8A\u6027\uFF0C\u6240\u4EE5\u4E0D\u80FD\u5305\u62EC\u5728\u53F3\u8FB9</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// \u65CB\u8F6C\u70B9\u7684\u7279\u6B8A\u6027\uFF0C\u53EF\u4EE5\u5305\u62EC\u5728\u5DE6\u8FB9</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5728\u8FD9\u91CC\u627E\u5230\u6700\u63A5\u8FD1\u76EE\u6807\u6570\u7684\u4F4D\u7F6E</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">+</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                r <span class="token operator">=</span> mid<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment">// \u8FD9\u91CC\u4E0D\u5305\u62EC\u7B49\u4E8E\u4E2D\u95F4\u6570\u7684\u8BDD\uFF0C\u5C31\u4E00\u5B9A\u8981\u79FB\u52A8</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> nums<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token operator">?</span> l <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u7684\u6298\u73B0\u56FE\uFF0C\u53EF\u4EE5\u6A21\u62DF\u8FD9\u79CD\u60C5\u51B5</p>`,3);function C(B,E){const t=c("ECharts");return e(),l("div",null,[u,r,m,k,d,v,b,h,g,y,w,f,x,j,M,_,q,O,L,A,X,N,z,o(t,{id:"echarts-30087756",config:"%7B%0A%20%20%22xAxis%22%3A%20%7B%0A%20%20%20%20%22type%22%3A%20%22category%22%2C%0A%20%20%20%20%22data%22%3A%20%5B%221%22%2C%20%222%22%2C%20%223%22%2C%20%224%22%2C%20%225%22%2C%20%226%22%2C%20%227%22%2C%20%228%22%2C%20%229%22%2C%20%2210%22%5D%0A%20%20%7D%2C%0A%20%20%22yAxis%22%3A%20%7B%0A%20%20%20%20%22type%22%3A%20%22value%22%0A%20%20%7D%2C%0A%20%20%22series%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22data%22%3A%20%5B6%2C%207%2C%208%2C%209%2C%2010%2C%2011%2C%201%2C%202%2C%203%2C%204%5D%2C%0A%20%20%20%20%20%20%22type%22%3A%20%22line%22%0A%20%20%20%20%7D%0A%20%20%5D%0A%7D%0A",title:"%E4%B8%80%E4%B8%AA%E6%8A%98%E7%BA%BF%E5%9B%BE%E6%A1%88%E4%BE%8B",type:"json"})])}var T=p(i,[["render",C],["__file","\u7B97\u6CD5\u4E03.html.vue"]]);export{T as default};
