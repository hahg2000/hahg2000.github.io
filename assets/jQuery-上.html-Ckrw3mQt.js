import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,f as t}from"./app-BVqESlQI.js";const p={},e=t(`<h1 id="jquery-上" tabindex="-1"><a class="header-anchor" href="#jquery-上"><span>jQuery-上</span></a></h1><h2 id="一、初始jquery" tabindex="-1"><a class="header-anchor" href="#一、初始jquery"><span>一、初始jQuery</span></a></h2><h3 id="_1-1-jquery是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-jquery是什么"><span>1.1 jQuery是什么</span></a></h3><p>jQuery 是一个优秀的 JS 函数库，其官网为 https://jquery.com/。</p><p>大部分网站都使用到了 jQuery ，其口号为 write less , do more。</p><p>因为查找 DOM 元素比增删改元素的操作更复杂，所以这个框架设计的初心就是更容易查找 DOM 元素。所以第一个字母是小写，而 Query 的开头是大写。</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery图标.png" style="zoom:80%;"><h3 id="_1-2-为什么选择jquery" tabindex="-1"><a class="header-anchor" href="#_1-2-为什么选择jquery"><span>1.2 为什么选择jQuery</span></a></h3><ol><li>可以链式调用。</li><li>读写和一。对于一个函数不传参数就是读，传了参数就是写。</li><li>浏览器兼容。对于 jQuery 的低版本是可以兼容 IE 的低版本。</li><li>易扩展插件。</li><li>ajax封装。</li></ol><h3 id="_1-3-怎么使用" tabindex="-1"><a class="header-anchor" href="#_1-3-怎么使用"><span>1.3 怎么使用</span></a></h3><p>这里举一个例子来说明怎么使用 jQuery。</p><p>需求：有一个文本框和一个按钮，点击按钮会弹出文本框输入的内容。</p><h4 id="_1-页面布局" tabindex="-1"><a class="header-anchor" href="#_1-页面布局"><span>（1）页面布局</span></a></h4><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn01<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>原生JS按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn02<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>jQuery按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-完成原生js按钮" tabindex="-1"><a class="header-anchor" href="#_2-完成原生js按钮"><span>（2）完成原生JS按钮</span></a></h4><p>原生 JS 实现应该已经很熟悉了，获取按钮元素和文本框元素，然后为按钮绑定监听，在其响应函数中获取到文本框元素的值。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> btn01 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    btn01<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alert</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-使用jq实现" tabindex="-1"><a class="header-anchor" href="#_3-使用jq实现"><span>（3）使用jQ实现</span></a></h4><p>首先引入 jQuery 的 JS 文件，引入 JS 文件有两种方式：</p><ul><li>一个是使用 CDN ，要求需要网络，微软CDN 【https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.6.0.js】。</li><li>二是直接下载本地使用，官网上提供了两个种 JS 文件： <ul><li>以 min.js 结尾的是压缩版本，适用于上线到网络的网站。例如：【jquery-3.6.0.min.js】。</li><li>单单以 js 结尾的版本，适用于开发时候使用。例如：【jquery-3.6.0.js】。</li></ul></li><li>jQuery 手册：【https://jquery.cuishifeng.cn/】。</li></ul><table><thead><tr><th>步骤</th><th>原生JS</th><th>jQuery</th><th>备注</th></tr></thead><tbody><tr><td>1.绑定页面加载监听</td><td><code>window.onload = function(){}</code></td><td><code>$( function(){} )</code></td><td></td></tr><tr><td>2.获取DOM元素对象</td><td><code>document.getElementById();</code></td><td><code>$(&quot;元素选择器&quot;)</code></td><td>jQuery返回的是jQuery对象；<br>而原生返回的是DOM对象</td></tr><tr><td>3.绑定单击事件监听</td><td><code>元素对象.onclick = function () {}</code></td><td><code>jQuery对象.click( function(){} )</code></td><td>使用 jQuery 对象里的方法。</td></tr><tr><td>4.获取文本框的值</td><td><code>文本框元素对象.value</code></td><td><code>jQuery对象.val()</code></td><td></td></tr></tbody></table><p>最终代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-总结所写的代码" tabindex="-1"><a class="header-anchor" href="#_4-总结所写的代码"><span>（4）总结所写的代码</span></a></h4><p>在上面我们使用了 <code>$( )</code> 和 <code>$( ).xxx</code> ，两种方式使用 jQuery。、</p><p>在 jQuery 源码中，我们可以看到这行代码。<code>window.jQuery = window.$ = jQuery;</code> 其通过对 window 绑定属性，而向外暴露了一个函数对象，我们可以直接调用，也就是说<strong>我们使用的 $ 符号和 jQuery 是同一个函数对象</strong>。</p><ul><li><p>因为 “ $ &quot; 符号后面加上了 &quot; () &quot; 号，所以可以得知其为 <strong>函数对象</strong> ，我们称之为 <strong>jQuery 核心函数</strong>，使用 <code>jQuery()</code> 一样的效果。</p></li><li><p>通常使用 &quot; . &quot; 调用对象的属性和方法，所以可以得知返回为 <strong>jQuery 对象</strong>，我们称之为 <strong>jQuery 核心对象</strong>。</p></li></ul><p>jQuery 核心对象的命名我们可以遵循一个规则，<strong>变量名前加上 ” $ “ 符号</strong>。</p><p>我们改下上面的代码，改动的地方第 3 ~ 4 行。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> $btn02 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $btn02<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#msg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-jquery的两把利器" tabindex="-1"><a class="header-anchor" href="#_1-4-jquery的两把利器"><span>1.4 jQuery的两把利器</span></a></h3><p>jQuery的两个利器：</p><ul><li>jQuery 核心函数；</li><li>jQuery 核心对象。</li></ul><h4 id="_1-jquery核心函数" tabindex="-1"><a class="header-anchor" href="#_1-jquery核心函数"><span>（1）jQuery核心函数</span></a></h4><ul><li>jQuery 核心函数简称 jQuery 函数，可以使用 【$ / jQuery】表示。</li><li>jQuery 库向外直接暴露的就是【$ / jQuery】。</li><li>引入 jQuery 文件后，直接使用即可。 <ul><li>当函数使用：<code>$(xxx)</code></li><li>当对象使用：<code>$.xxx()</code></li></ul></li></ul><p>下面为 jQuery 的一部分源码：第 5 行中很明显就知道 jQuery 的是一个函数，然后在第 9 行中，返回了一个 new 出来的对象，这个对象就是 jQuery 核心对象。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span>
version <span class="token operator">=</span> <span class="token string">&quot;3.6.0&quot;</span><span class="token punctuation">,</span>

    <span class="token comment">// Define a local copy of jQuery</span>
    <span class="token function-variable function">jQuery</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">selector<span class="token punctuation">,</span> context</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// The jQuery object is actually just the init constructor &#39;enhanced&#39;</span>
        <span class="token comment">// Need init if jQuery is called (just allow error to be thrown if not included)</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">jQuery<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>init</span><span class="token punctuation">(</span> selector<span class="token punctuation">,</span> context <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-jquery核心对象" tabindex="-1"><a class="header-anchor" href="#_2-jquery核心对象"><span>（2）jQuery核心对象</span></a></h4><p>jQuery 核心对象，简称 jQuery 对象。</p><ul><li><p>获取 jQuery 对象：<strong>运行 jQuery 函数</strong> 就可以得到。</p></li><li><p>使用 jQuery 对象：查帮助手册，<strong>直接调用里面的属性和方法</strong>。例如 <code>$xxx.yyy()</code></p></li></ul><h4 id="_3-查看帮助文档" tabindex="-1"><a class="header-anchor" href="#_3-查看帮助文档"><span>（3）查看帮助文档</span></a></h4><p>我们需要学习一下如何查找帮助文档，jQuery 帮助文档分为几大块，现在我们只使用了第一列和第二列。</p><ul><li>第一列是选择器，是用来定位 DOM 元素，用的是蓝色方框。</li><li>第二列是 jQuery 核心，包括 jQuery 对象和 jQuery 函数的使用，用的是红色方框。 <ul><li>jQuery 函数传入的参数可以有三种。</li><li>jQuery 对象可以使用图中的那几个属性和方法。</li></ul></li></ul><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery手册目录-标记1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、jquery核心函数" tabindex="-1"><a class="header-anchor" href="#二、jquery核心函数"><span>二、jQuery核心函数</span></a></h2><h3 id="_2-1-作为函数调用" tabindex="-1"><a class="header-anchor" href="#_2-1-作为函数调用"><span>2.1 作为函数调用</span></a></h3><p>&quot; jQuery &quot; 作为函数调用有三种方式：</p><h4 id="_1-第一种调用方式" tabindex="-1"><a class="header-anchor" href="#_1-第一种调用方式"><span>（1）第一种调用方式</span></a></h4><p>通过传入的参数不同，函数作用就不同。</p><ul><li><code>jQuery( [selector,[context]] )</code><ul><li>作用：查找 DOM 元素。</li><li>参数1：<code>selector【String】</code>：用来查找的字符串。</li><li>参数2：<code>context【jQuery-jQuery对象/Element-元素对象】</code>：作为待查找的 DOM 元素集、文档或 jQuery 对象。</li></ul></li><li><code>jQuery( element )</code><ul><li>作用：将传入的 DOM 元素对象封装成 jQuery 对象。</li><li>参数1：<code>element【Element-元素对象】</code> ：DOM 元素对象。</li></ul></li><li><code>jQuery( elementArray )</code><ul><li>作用：将传入的 DOM 元素对象数组封装成 jQuery 对象。</li><li>参数1：<code>elementArray【HTMLCollection-元素对象集合】</code>。</li></ul></li><li><code>jQuery( object )</code> （少用） <ul><li>作用：将普通的对象封装成数组。</li><li>参数1：<code>object【Object-对象】</code>。</li></ul></li><li><code>jQuery( jQuery )</code>（少用） <ul><li>作用：克隆指定的 jQuery 对象。</li><li>参数1：<code>jQuery【jQuery-jQuery对象】</code></li></ul></li></ul><p>下面举一个代码例子。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1.传入选择器字符串</span>
<span class="token keyword">var</span> $box1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#box1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$box1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 &lt;div id=&quot;box1&quot;&gt;&lt;/div&gt;</span>

<span class="token comment">// 2.传入DOM元素</span>
<span class="token keyword">var</span> box1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;box1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$box1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>box1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$box1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 &lt;div id=&quot;box1&quot;&gt;&lt;/div&gt;</span>

<span class="token comment">// 3.传入DOM元素集合</span>
<span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> $divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 2</span>

<span class="token comment">// 输出：</span>
<span class="token comment">// 0 &lt;div id=&quot;box1&quot;&gt;&lt;/div&gt;</span>
<span class="token comment">// 1 &lt;div&gt;&lt;/div&gt;</span>
$divs<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-第二种调用方式" tabindex="-1"><a class="header-anchor" href="#_2-第二种调用方式"><span>（2）第二种调用方式</span></a></h4><p>这种调用方式主要是传入 DOM 元素的字符串，创建 DOM 元素，然后包装成 jQuery 对象。</p><ul><li><p><code> jQuery(html,[ownerDoc])</code> (v1.0)</p><ul><li><code>html【String】</code>：用于动态创建 DOM 元素的 <strong>完整的</strong> HTML标记字符串；</li><li><code>ownerDocument</code>：创建DOM 元素所在的文档；</li></ul></li><li><p><code>jQuery(html,props)</code> （v1.8）</p><ul><li><code>html【String】</code>：用于动态创建 DOM元素的 <strong>标签</strong>；</li><li><code>props【Object】</code>：<strong>用于附加到新创建元素上的属性、事件和方法</strong>。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1.传入html字符串</span>
<span class="token keyword">var</span> $div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div class=&#39;test&#39;&gt;这是个div&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &lt;div class=&#39;test&#39;&gt;这是个div&lt;/div&gt;</span>

<span class="token comment">// 2.第1个参数传入标签</span>
<span class="token comment">//   第2个参数传入需要添加的属性的集合</span>
$div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;这是个div&quot;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;我被点击了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出 &lt;div class=&#39;test&#39;&gt;这是个div&lt;/div&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-第三种调用方式" tabindex="-1"><a class="header-anchor" href="#_3-第三种调用方式"><span>（3）第三种调用方式</span></a></h4><p>第三种的调用方式就是直接传入一个回调函数，当 <strong>DOM 文档加载</strong> 完成后执行回调函数，这个时机就是 <strong>当 DOMContentLoaded 事件触发时，仅当DOM加载完成，不包括样式表，图片</strong> ，时间后于 <code>window.onload</code> 事件。</p><ul><li><code>jQuery(callback)</code><ul><li><code>callback【Function】</code>：当 DOM 文档加载完成后执行回调函数。</li></ul></li></ul><h3 id="_2-2-作为对象调用" tabindex="-1"><a class="header-anchor" href="#_2-2-作为对象调用"><span>2.2 作为对象调用</span></a></h3><p>“ $ ” 和 “ jQuery &quot; 也可以作为对象调用。</p><p>语法： <code>$.方法名()</code> 。</p><p>使用场景：需要对某个普通对象进行操作。</p><p>使用类别：作为工具使用 或 作为 Ajax 请求，用的是橙色方框。</p><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery手册目录-标记2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-举例使用" tabindex="-1"><a class="header-anchor" href="#_2-3-举例使用"><span>2.3 举例使用</span></a></h3><h4 id="_1-函数举例" tabindex="-1"><a class="header-anchor" href="#_1-函数举例"><span>（1）函数举例</span></a></h4><p>需求：有一个文本框和一个按钮，当点击按钮时，输出 <strong>按钮的文本</strong> 并添加一个文本框。</p><ul><li>第 13 行，在点击事件的回调函数中，this 的值依然是 DOM 元素。</li><li>第 25 行，使用了文档处理模块的 appendTo，将指定 DOM 元素添加到指定位置。</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 页面布局 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn01<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 引入jQuery文件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/jquery-3.6.0.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span>
  // 传入选择器字符串
  $(&quot;#btn01&quot;).click(function () {

    // 这里的this为DOM元素
    // 这样输出也可以
    // console.log(this.innerHTML);

    // 传入DOM元素
    console.log($(this).html());

    var inputStr = &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>text<span class="token punctuation">&#39;</span></span><span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>&quot;;
    // 使用文档处理模块的appendTo
    // 传入html字符串
    $(inputStr).appendTo(&quot;div&quot;);
  });
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-对象举例" tabindex="-1"><a class="header-anchor" href="#_2-对象举例"><span>（2）对象举例</span></a></h4><p>遍历数组和对象中的所有数据，并将对象里的数据的前后空格去掉。</p><ul><li>第 7 行使用的是 <code>$.each( array [, callback] )</code>。 <ul><li>回调函数的第一个参数为 <strong>数组里每一个元素的索引</strong>，第二个参数为索引的值。</li></ul></li><li>第 19 行使用的使用<code>$.each( object [, callback] )</code>。 <ul><li>回调函数的第一个参数为 <strong>对象里的每一个元素的属性名</strong>，第二个参数为属性名所对应的属性值。</li></ul></li><li>第 20 行使用的是 <code>$.trim(&quot;字符串&quot;)</code> ，可以去掉字符串起始和结尾的空格。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39; hahg &#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">hobby</span><span class="token operator">:</span> <span class="token string">&#39; games&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// @param {number} index</span>
<span class="token comment">// @param value</span>
$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span> <span class="token operator">+</span> index <span class="token operator">+</span> <span class="token string">&quot;个数是&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 输出</span>
<span class="token comment">// 第0个数是1</span>
<span class="token comment">// 第1个数是3</span>
<span class="token comment">// 第2个数是2</span>
<span class="token comment">// 第3个数是5</span>
<span class="token comment">// 第4个数是8</span>

<span class="token comment">// @param {String} key</span>
<span class="token comment">// @param value</span>
$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;key:(&quot;</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;);value:(&quot;</span> <span class="token operator">+</span> $<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 输出</span>
<span class="token comment">// key:(name);value:(hahg)</span>
<span class="token comment">// key:(hobby);value:(games)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外还有许多有用的工具，需要的时候查 API 即可。主要还有几个方面的工具：</p><ul><li><strong>数组和对象操作</strong></li><li><strong>函数操作</strong></li><li><strong>测试操作</strong></li><li>字符串操作——<code>$.tirm(&quot;字符串&quot;)</code></li><li>URL</li><li>插件编写</li></ul><h2 id="三、jquery-核心对象" tabindex="-1"><a class="header-anchor" href="#三、jquery-核心对象"><span>三、jQuery 核心对象</span></a></h2><h3 id="_2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-简介"><span>2.1 简介</span></a></h3><ul><li>jQuery 核心对象是执行 jQuery 核心函数返回的对象。</li><li>jQuery 对象内部包含的是 DOM 元素对象的伪数组。</li><li>jQuery 对象拥有许多有用的属性和方法，让使用者能方便的操作 DOM。</li></ul><h3 id="_2-2-分类" tabindex="-1"><a class="header-anchor" href="#_2-2-分类"><span>2.2 分类</span></a></h3><p>jQuery 对象里有的方法分为几类：</p><ul><li>基本行为</li><li>属性</li><li>CSS</li><li>文档</li><li>筛选</li><li>事件</li><li>效果</li></ul><h3 id="_2-3-基本行为的使用" tabindex="-1"><a class="header-anchor" href="#_2-3-基本行为的使用"><span>2.3 基本行为的使用</span></a></h3><p>这里先主要说明一下基本行为的一些方法</p><ul><li><code>each( callback )</code> ：以每一个匹配的元素作为上下文来执行一个函数 <ul><li><code>callback【Function】</code> ：回调函数， <code>this</code> 将指向 jQuery 对象的每一个 DOM 元素。</li><li>函数将有一个隐含参数，其值为当前 DOM 元素在 jQuery 集合里的索引。</li></ul></li><li><code>length</code>：jQuery 对象中元素的个数。</li><li><code>get([index]) / [index]</code> ：取出 jQuery 对象中的某一个 DOM 元素。 <ul><li><code>[index]【Number】</code> ：可选参数，取出 jQuery 对象中 第 几 个位置上的 DOM 元素。若不填写，则代表所有的 DOM 元素。</li></ul></li><li><code>index( [selector|element] )</code>：获取到 DOM 元素在兄弟节点中的索引。 <ul><li>传参数的情况： <ul><li><code>jQuery对象.index(selector)</code>：</li><li>传入一个选择器字符串，用于查找 <strong>在指定的 jQuery 对象中</strong>，符合该选择器的 DOM 元素的索引。</li><li><code>jQuery对象.index(element)</code>：</li><li>传入一个 DOM 元素或者 jQuery 对象，用于查找 <strong>在指定的 jQuery 对象中</strong>，与 DOM 元素或者 jQuery 对象中的 DOM 元素相等的索引。</li></ul></li><li>不传参数的情况（常用）： <ul><li><code>jQuery对象.index()</code></li><li>查找当前 jQuery 对象中的 DOM 元素在兄弟节点中的索引。</li></ul></li></ul></li></ul><h3 id="_2-4-基本行为的实例" tabindex="-1"><a class="header-anchor" href="#_2-4-基本行为的实例"><span>2.4 基本行为的实例</span></a></h3><p>这里举一个例子来使用上面的这些方法。</p><p>页面有四个按钮。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>测试1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>测试2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>测试4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn03<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>测试3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>需求：</strong></p><ol><li>统计一共有多少个按钮。</li><li>取出第 2 个按钮的文本。</li><li>输出所有按钮标签的文本。</li><li>输出 id 等于 &quot; btn03 &quot; 的按钮在所有的按钮中的索引。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. 统计一共有多少个按钮</span>
<span class="token comment">// 使用length属性</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>

<span class="token comment">// 2. 取出第 2 个按钮的文本</span>
<span class="token comment">// 使用 get() 方法</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 测试2</span>

<span class="token comment">// 3. 输出所有按钮标签的文本</span>
<span class="token comment">// 使用 each() 方法</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token operator">+</span>index<span class="token operator">+</span><span class="token string">&quot;个的文本是&quot;</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 第0个的文本是测试1</span>
<span class="token comment">// 第1个的文本是测试2</span>
<span class="token comment">// 第2个的文本是测试4</span>
<span class="token comment">// 第3个的文本是测试3</span>

<span class="token comment">// 4. 输出 id 等于 &quot; btn03 &quot; 的按钮在所有的按钮中的索引。</span>
<span class="token comment">// 使用 index() 方法</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#btn03&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在可以补充一下 jQuery 目录。</p><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery手册目录-标记3.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="四、选择器" tabindex="-1"><a class="header-anchor" href="#四、选择器"><span>四、选择器</span></a></h2><p>这一章将介绍如何在 jQuery 中使用选择器，这个就是 CSS 中的元素选择器。</p><p>如果熟悉选择器的话，可以在这个网站练习，复习下 CSS 选择器。</p><ul><li>https://flukeout.github.io/</li></ul><h3 id="_4-1-基本选择器" tabindex="-1"><a class="header-anchor" href="#_4-1-基本选择器"><span>4.1 基本选择器</span></a></h3><p>基本选择器最常用的选择器，有下面几种。</p><table><thead><tr><th>名称</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>id 选择器</td><td><code>$( &quot;#id&quot; )</code></td><td>获取一个含有指定 id 的元素</td></tr><tr><td>标签选择器</td><td><code>$( &quot;div&quot; )</code></td><td>获取一组指定标签的元素</td></tr><tr><td>类选择器</td><td><code>$( &quot;.class&quot; )</code></td><td>获取一组含有指定类的元素</td></tr><tr><td>并集选择器</td><td><code>$( &quot;sel1, sel2, sel3&quot; )</code></td><td>获取符合任意一个选择器的元素</td></tr><tr><td>交集选择器</td><td><code>$( &quot;sel1sel2sel3&quot; )</code></td><td>获取三个选择器都符合的元素</td></tr></tbody></table><p>下面举例来使用他们。这里有一个页面。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div1(class=&quot;box&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div2(class=&quot;box&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>span(class=&quot;box&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAAA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>BBBB(title=&quot;hello&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>CCCC(class=&quot;box&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DDDD(title=&quot;hello&quot;)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>需求：</strong></p><ol><li>选择 id 为 div1 的元素。</li><li>选择所有的 div 元素。</li><li>选择所有 class 等于 box 的元素。</li><li>选择所有 div 和 span 元素。</li><li>选择所有 class 等于 box 的 div 元素。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. 选择 id 为 div1 的元素。使用id选择器</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(1)</span>
<span class="token comment">//  0: div#div1.box</span>
<span class="token comment">//  length: 1</span>

 <span class="token comment">// 2. 选择所有的 div 元素。使用标签选择器</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(3)</span>
<span class="token comment">//  0: div#div1.box</span>
<span class="token comment">//  1: div#div2.box</span>
<span class="token comment">//  2: div#div3</span>
<span class="token comment">//  length: 3</span>

 <span class="token comment">// 3. 选择所有 class 等于 box 的元素。使用类选择器</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(4)</span>
<span class="token comment">//  0: div#div1.box</span>
<span class="token comment">//  1: div#div2.box</span>
<span class="token comment">//  2: span.box</span>
<span class="token comment">//  3: li.box</span>
<span class="token comment">//  length: 4</span>

<span class="token comment">// 4. 选择所有 div 和 span 元素。使用并集选择器</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div, span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(4)</span>
<span class="token comment">//  0: div#div1.box</span>
<span class="token comment">//  1: div#div2.box</span>
<span class="token comment">//  2: div#div3</span>
<span class="token comment">//  3: span.box</span>
<span class="token comment">//  length: 4</span>

<span class="token comment">// 5. 选择所有 class 等于 box 的 div 元素。使用交集选择器</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div.box&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2)</span>
<span class="token comment">//  0: div#div1.box</span>
<span class="token comment">//  1: div#div2.box</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-层次选择器" tabindex="-1"><a class="header-anchor" href="#_4-2-层次选择器"><span>4.2 层次选择器</span></a></h3><p>层次选择器可以通过层级来查找父元素、子元素以及兄弟元素。层级选择器有下面几种：</p><table><thead><tr><th>名称</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>子代选择器</td><td><code>$( &quot;parent&gt;child&quot; )</code></td><td>获取到父元素的子代元素</td></tr><tr><td>后代选择器</td><td><code>$( &quot;parent child&quot; )</code></td><td>获取到父元素的所有后代元素</td></tr><tr><td>单个兄弟选择器</td><td><code>$( &quot;pre+next&quot; )</code></td><td>获取到指定元素的后面一个元素</td></tr><tr><td>部分兄弟选择器</td><td><code>$( &quot;parent~next&quot; )</code></td><td>获取到指定元素的后面所有元素</td></tr></tbody></table><p>下面举例来使用他们，有一个页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAAA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>CCCC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>BBBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>DDDD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>EEEE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>需求：</strong></p><ol><li>选择 ul 下的所有的 span 元素。</li><li>选择 ul 下的子代 span 元素</li><li>选择所有 class 等于 box 的元素。</li><li>选择 class 为 box 的下一个兄弟 li 元素。</li><li>选择 class 为 box 的后面所有兄弟 li 元素。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. 选择 ul 下的所有的 span 元素。</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &lt;span&gt;BBBB&lt;/span&gt; &lt;span&gt;DDDD&lt;/span&gt; &lt;span&gt;EEEE&lt;/span&gt;</span>


<span class="token comment">// 2. 选择 ul 下的子代 span 元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&gt;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &lt;span&gt;EEEE&lt;/span&gt;</span>

<span class="token comment">// 3. 选择 class 为 box 的下一个兄弟 li 元素。</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.box+li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//之前的元素：&lt;li class=&quot;box&quot;&gt;CCCC&lt;/li&gt;</span>
<span class="token comment">// &lt;li title=&quot;hello&quot;&gt;&lt;span&gt;BBBB&lt;/span&gt;&lt;/li&gt;</span>

<span class="token comment">// 4. 选择 class 为 box 的后面所有兄弟 li 元素。</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.box~li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//之前的元素：&lt;li class=&quot;box&quot;&gt;CCCC&lt;/li&gt;</span>
<span class="token comment">// &lt;li title=&quot;hello&quot;&gt;&lt;span&gt;BBBB&lt;/span&gt;&lt;/li&gt; </span>
<span class="token comment">// &lt;li title=&quot;hello&quot;&gt;&lt;span&gt;DDDD&lt;/span&gt;&lt;/li&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-过滤选择器" tabindex="-1"><a class="header-anchor" href="#_4-3-过滤选择器"><span>4.3 过滤选择器</span></a></h3><p>过滤选择器，在原有选择器匹配的元素中进一步进行过滤的选择器。</p><p>其中过滤选择器有分为：</p><ul><li>基本筛选——选择第几个 DOM 元素。</li><li>内容筛选——对 DOM 元素里面的内容进行筛选</li><li>可见性筛选——对 DOM 元素的是否可见进行筛选</li><li>属性筛选——对 DOM 元素的 <strong>是否含有某个属性</strong> 或 <strong>属性值等于某个值</strong> 进行筛选</li><li>子元素筛选——对 DOM 元素的子元素进行筛选</li></ul><h4 id="_1-基本筛选" tabindex="-1"><a class="header-anchor" href="#_1-基本筛选"><span>（1）基本筛选</span></a></h4><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:first</code></td><td>选择匹配的第一个元素</td></tr><tr><td>2</td><td><code>:last</code></td><td>选择匹配的最后一个元素</td></tr><tr><td>3</td><td><code>:not(&quot;选择器字符串&quot;)</code></td><td>去除所有与给定选择器匹配的元素</td></tr><tr><td>4</td><td><code>:even</code></td><td>匹配所有索引值为偶数的元素</td></tr><tr><td>5</td><td><code>:odd</code></td><td>匹配所有索引值为奇数的元素</td></tr><tr><td>6</td><td><code>:eq(index)</code></td><td>匹配一个给定索引值的元素</td></tr><tr><td>7</td><td><code>:gt(index)</code></td><td>匹配所有大于给定索引值的元素</td></tr><tr><td>8</td><td><code>:lt(index)</code></td><td>匹配所有小于给定索引值的元素</td></tr></tbody></table><p>有一个页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>div4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分别使用上面的元素和方法：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1.选择第一个元素 :first </span>
<span class="token keyword">var</span> $div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment">// jQuery.fn.init(1)   </span>
<span class="token comment">//  0: div#div1.a1     </span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 2.选择最后一个元素 :last</span>
$div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(1)   </span>
<span class="token comment">//  0: div#div4 </span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 3.选择class不是a1的div元素 :not(selector)</span>
<span class="token keyword">var</span> $divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:not(&#39;.a1&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(1)   </span>
<span class="token comment">//  0: div#div4 </span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 4.选择偶数索引的div元素 :even</span>
$divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:even&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2)</span>
<span class="token comment">//  0: div#div1.a1</span>
<span class="token comment">//  1: div#div3.a1</span>

<span class="token comment">// 5.选择奇数索引的div元素 :even</span>
$divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:odd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2)</span>
<span class="token comment">//  0: div#div2.a1</span>
<span class="token comment">//  1: div#div4</span>

<span class="token comment">// 6.选择索引为2的div元素 :eq(index)</span>
$div <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:eq(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init</span>
<span class="token comment">//  0: div#div3.a1</span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 7.选择索引大于2的div元素 :gt(index)</span>
$divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:gt(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init</span>
<span class="token comment">//  0: div#div4</span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 8.选择索引小于2的div元素 :lt(index)</span>
$divs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:lt(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$divs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2)</span>
<span class="token comment">//  0: div#div1.a1</span>
<span class="token comment">//  1: div#div2.a1</span>
<span class="token comment">//  length: 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-内容筛选" tabindex="-1"><a class="header-anchor" href="#_2-内容筛选"><span>（2）内容筛选</span></a></h4><p>内容筛选可以在原先元素对内容进一步筛选。</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:contains(&quot;文本字符串&quot;)</code></td><td>匹配有指定文本字符串的元素</td></tr><tr><td>2</td><td><code>:has(“选择器字符串”)</code></td><td>匹配含有选择器所匹配的元素的元素</td></tr><tr><td>3</td><td><code>:empty</code></td><td>匹配所有不包含子元素或者文本的空元素</td></tr><tr><td>4</td><td><code>:parent</code></td><td>匹配含有子元素或者文本的元素</td></tr></tbody></table><p>有一个页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>222<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分别使用上面的元素和方法：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1.选择含有文本为 &quot;111&quot; 的div元素</span>
<span class="token keyword">var</span> $elements <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:contains(&#39;111&#39;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2) </span>
<span class="token comment">//  0: div#div1</span>
<span class="token comment">//  1: div#div2</span>

<span class="token comment">// 2.选择含有 span 标签的div元素</span>
$elements <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:has(span)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$elements<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3.选择里面没有任何内容的div元素</span>
$elements <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init</span>
<span class="token comment">//  0: div#div4</span>
<span class="token comment">//  length: 1</span>

<span class="token comment">// 4.选择含有内容的div元素</span>
$elements <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div:parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(3)</span>
<span class="token comment">//  0: div#div1</span>
<span class="token comment">//  1: div#div2</span>
<span class="token comment">//  2: div#div3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-可见性筛选" tabindex="-1"><a class="header-anchor" href="#_3-可见性筛选"><span>（3）可见性筛选</span></a></h4><p>可见性筛选，就是在原先的元素中筛选出可见的和不可见的元素。</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:hidden</code></td><td>匹配所有不可见元素，或者type为hidden的元素</td></tr><tr><td>2</td><td><code>:visible</code></td><td>匹配所有的可见元素</td></tr></tbody></table><h4 id="_4-子元素筛选" tabindex="-1"><a class="header-anchor" href="#_4-子元素筛选"><span>（4）子元素筛选</span></a></h4><p>子元素筛选，就是对原先的元素中筛选出需要的子元素。因为涉及到子元素，所以一般都有子代或后代选择器。</p><p><span style="color:red;">下面所有传入参数都不是索引，都是从 1 开始计数。</span></p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:first-child</code></td><td>匹配所给的祖先选择器的第一个子元素</td></tr><tr><td>2</td><td><code>:last-child</code></td><td>匹配最后一个子元素</td></tr><tr><td>3</td><td>\`:nth-child(index</td><td>odd</td></tr><tr><td>4</td><td>\`:nth-last-child(index</td><td>odd</td></tr><tr><td>5</td><td><code>element:first-of-type</code></td><td>匹配是在其父元素中是第一个 element 元素的元素</td></tr><tr><td>6</td><td><code>element:last-of-type</code></td><td>匹配是在其父元素中是最后一个 element 元素的元素</td></tr><tr><td>7</td><td>\`element:nth-of-type(index</td><td>even</td></tr><tr><td>8</td><td>\`element:nth-last-of-type(index</td><td>even</td></tr><tr><td>9</td><td><code>:only-child</code></td><td>如果某个元素是父元素中唯一的子元素，那将会被匹配</td></tr><tr><td>10</td><td><code>:only-of-type</code></td><td>先把父元素里子元素分类，然后如果哪一种类型的元素的数量只有一个，则选中他</td></tr></tbody></table><hr><p>首先页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>div1的div标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>div1的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>单独的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>单独的span标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>ul的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>ul的li标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>ul的span标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>div2的p标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>div2的span标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/子元素筛选示例1.png" style="zoom:65%;"><hr><ul><li>第 2 行：是 p 标签而且是父元素的第一个元素的元素有三个： 页面代码的第 5 行、第 13 行和第 19 行，而第 9 行不是。下面图片使用碧绿色标识。</li><li>第 5 行：div 元素里的最后一个元素，而且是 span 元素的有： 页面代码的第 20 行，而第 15 行不是，因为其父元素不是 div。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 选择父元素的第一个子元素是p标签的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p:first-child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#bfa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 选择div元素里的最后一个元素是span标签的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div span:last-child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#4169E1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 选择ul标签里的第二个子元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul :nth-child(2)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#00FFFF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 选择ul标签里的倒数第一个个子元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul :nth-last-child(1)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#FFE4C4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/子元素筛选示例2.png" style="zoom:65%;"><hr><ul><li>第 2 行：选择 p 标签第一次在这个父元素出现的元素，使用红色背景标识。 <ul><li>页面代码里的第 4 ~ 6 行的 div 里只有一个且同时只出现过一次 p 标签；</li><li>第 9 行的 p 标签，在 body 是第一次出现。</li><li>第 12 ~ 16 行和第 18 ~ 21 行中都有 p 标签。</li></ul></li><li>第 5 行：选择 div 里在不同种类型的只有一个的元素，用红色边框标识。 <ul><li>第 2 ~ 7 行中，因为里面的 div 类型有两个，所以不会选中。</li><li>第 18 ~ 21 行中，里面的 span 类型和 p 类型都只有一个，所以会选中。</li><li>第 4 ~ 6 行中，因为其满足了 <code>:first-child</code> 的条件，所以也满足 <code>:only-of-type</code> 的条件。、</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 选择父元素里的第一次出现p类型的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;p:first-of-type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#bfa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 选择div里在不同种类型的只有一个的元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;div :only-of-type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;border&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2px solid red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/子元素筛选示例3.png" style="zoom:65%;"><h4 id="_5-属性筛选" tabindex="-1"><a class="header-anchor" href="#_5-属性筛选"><span>（5）属性筛选</span></a></h4><p>属性筛选就是筛选属性符合指定条件的元素。</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>[attribute]</code></td><td>匹配含有指定属性的元素</td></tr><tr><td>2</td><td><code>[attribute=value]</code></td><td>匹配属性是指定的值的元素</td></tr><tr><td>3</td><td><code>[attribute!=value]</code></td><td>匹配所有不含有指定的属性，<br>或者属性不等于特定值的元素</td></tr><tr><td>4</td><td><code>[attribute^=value]</code></td><td>匹配属性的值是以指定值开头的元素</td></tr><tr><td>5</td><td><code>[attribute$=value]</code></td><td>匹配属性的值是以指定值结尾的元素</td></tr><tr><td>6</td><td><code>[attribute*=value]</code></td><td>匹配属性的值是包含指定值的元素</td></tr><tr><td>7</td><td><code>[selector1][selector2][selectorN]</code></td><td>复合属性选择器，需要同时满足多个条件时使用。</td></tr></tbody></table><p>首先页面如下，几个文本框：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input1<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>input4<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/属性筛选示例1.png" style="zoom:67%;"><hr><ul><li>第 2 行：选择 id 属性的值不为 &quot; input3 &quot; 的元素，使用红色背景。 <ul><li>页面的第 2 行和第 5 行的值都不为 “ input3 ”。</li><li>而第 3 行的没有 id 属性，所以也匹配。</li></ul></li><li>第 5 行：选择既有 id 属性又有 name 属性的元素，使用黑色粗边框。 <ul><li>页面的第 2 行和第 4 行的元素匹配。</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 使用 [attribute!=value] </span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[id!=&#39;input3&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用 [selector1][selector2][selectorN]</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[id][name]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;border&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5px solid black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/属性筛选示例2.png" style="zoom:67%;"><h4 id="_6-表格隔行变色" tabindex="-1"><a class="header-anchor" href="#_6-表格隔行变色"><span>（6）表格隔行变色</span></a></h4><p>在许多网站的表格的样式都会使用隔行变色，来美化表格。现在用 jQuery 来实现这个样式。</p><p>页面布局如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>工资<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>入职时间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>$3500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>2010-10-25<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0);<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">table</span><span class="token punctuation">{</span>
    <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">table&gt;tbody tr:first-child</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span><span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 162<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token selector">th, td</span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原始界面如下，这里的表头有原先的样式，不需要再改变：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/表格隔行变色原始.png" style="zoom:70%;"><p>所以我们需要在表格的第二行或者第三行开始变色。</p><ul><li>第二行开始变色，所选择的行数是【2，4，6】，n 是从 0 开始，则表达式是 <code>2n</code>。</li><li>第三行开始变色，所选择的行数是【3，5，7】，n 是从 0 开始，则表达式是 <code>2n+3</code>。</li></ul><p>js 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第二行开始变色</span>
<span class="token comment">// $(&quot;table&gt;tbody tr:nth-child(2n)&quot;).css(&quot;background-color&quot;, &quot;rgb(225, 225, 225)&quot;);</span>

<span class="token comment">// 第三行开始变色</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;table&gt;tbody tr:nth-child(2n+3)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rgb(225, 225, 225)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三行开始变色示例如下：</p><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/表格隔行变色示例.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-4-表单选择器" tabindex="-1"><a class="header-anchor" href="#_4-4-表单选择器"><span>4.4 表单选择器</span></a></h3><p>表单选择器可以直接选择不同种的表单类型，还可以选择在指定状态的表单。</p><p>具体如下：</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:input</code></td><td>匹配所有 input, textarea, select 和 button 标签</td></tr><tr><td>2</td><td><code>:text/:password</code></td><td>匹配单行文本框 / 匹配密码文本框</td></tr><tr><td>3</td><td><code>:radio/:checkbox</code></td><td>匹配单选框 / 匹配多选框</td></tr><tr><td>4</td><td><code>:submit</code></td><td>匹配 type 的值为 submit 的 input 标签及 button 标签</td></tr><tr><td>5</td><td><code>:image/:file/:reset</code></td><td>匹配 type 的值为 image / file / reset 的 input 标签</td></tr><tr><td>6</td><td><code>:button</code></td><td>匹配 type 的值为 button 的 input 标签及 button 标签</td></tr></tbody></table><p>表单对象属性</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>:checked</code></td><td>匹配所有选中的被选中元素<br>（复选框、单选框等，select 中的 option）</td></tr><tr><td>2</td><td><code>:selected</code></td><td>匹配所有选中的 option 元素</td></tr><tr><td>3</td><td><code>:enabled</code></td><td>匹配所有可用元素</td></tr><tr><td>4</td><td><code>:disabled</code></td><td>匹配所有不可用元素</td></tr></tbody></table><h3 id="_4-5-tab切换" tabindex="-1"><a class="header-anchor" href="#_4-5-tab切换"><span>4.5 Tab切换</span></a></h3><p>这里做一个小功能，点击上面的标签栏选项，下面的页面进行切换。</p><p>页面图片如下所示：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/Tab标签切换.png" style="zoom:67%;"><p>页面代码如下：</p><ul><li><code>visibility: hidden;</code> 与 <code>display: none;</code> 的区别： <ul><li>前者只是隐藏，但占据的位置还存在。</li><li>后者是在页面上消失，会触发回流。</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>10元套餐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>30元套餐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tab3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>50元套餐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2323<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content2<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>sss<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content3<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>yyy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">#content1, #content2, #content3</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 306px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid black<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#content1, #tab1</span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">#content2, #tab2</span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #bfa<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">#content3, #tab3</span><span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> rebeccapurple<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#tab</span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#tab&gt;li</span><span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>js 的代码如下：</p><ul><li>使用 <code>:visible</code> 来获取到当前显示的元素。</li><li>使用 <code>jQuery对象.index()</code> 来获取到当前 Tab 标签的索引。</li><li>使用 <code>:nth-child()</code> 来使用获取到的索引，切换页面。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#tab&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#container :visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;visibility&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#container :nth-child(&quot;</span> <span class="token operator">+</span> temp <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;visibility&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;visible&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需求：</p><ol><li>选择第一个 div</li><li>选择最后一个 class 为 box 的元素</li><li>选择所有 class 属性不为 box 的 div</li></ol><h2 id="五、核心对象操作属性" tabindex="-1"><a class="header-anchor" href="#五、核心对象操作属性"><span>五、核心对象操作属性</span></a></h2><p>这章将介绍使用核心对象来操作 DOM 元素的属性。</p><h3 id="_5-1-属性的增删" tabindex="-1"><a class="header-anchor" href="#_5-1-属性的增删"><span>5.1 属性的增删</span></a></h3><p>在 HTML 标签中，会有标签原本就有的属性，例如 id ，name 等；也会有自定义属性，例如 vue 里的 v-model。</p><p>下面这行代码中，id 是原有属性，test 是自定义属性。</p><p><code>&lt;div id=&quot;div1&quot; test=&quot;test&quot;&gt;&lt;/div&gt;</code></p><p>添加属性有两种方法：<code>attr()</code> 和 <code>prop()</code></p><p>其形参都一致：</p><ul><li><code>name</code>：属性名；只会查找一次。</li><li><code>properties</code>：普通对象；可以一次修改多个属性。</li><li><code>key, value</code>：属性名，属性值；设置一个属性。</li><li><code>key,function(index, attr)</code>：属性名，回调函数； <ul><li>函数里的 index 为当前 jQuery 对象里 DOM 元素的索引。</li><li>函数里的 attr 为旧的属性值。</li></ul></li></ul><p>但两个使用场合不同：</p><ul><li><code>attr()</code> 的使用的原生方法是 <code>element.getAttribute()</code> ，其可以获得 DOM 元素上的 <strong>所有属性</strong>，包括自定义属性。</li><li><code>prop()</code> 的使用的原生方式是 <code>element[xxx]</code> ，<strong>其只能获得原有属性</strong>。</li></ul><p>使用上面的代码测试一下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> $div1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用 prop()</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// div1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// undefined</span>

<span class="token comment">// 使用 attr()</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// div1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么 <code>prop()</code> 就完全没有用了吗？ <code>attr()</code>的可以获得的属性就包含了 <code>prop()</code> 的。</p><p>其实 jQuery 的 <code>prop()</code> 和原生的 <code>element[xxx]</code> 都可以获得表单的当前状态。最典型的例子就是单选框和多选框。</p><p><span style="color:red;">因为我们点击单选框或者多选框时，DOM 元素中的 checked 的属性都不会改变。</span></p><p><strong>总结：</strong> 当属性值为布尔值时，例如 checked，selected，disabled，使用 <code>prop()</code> ，其他则使用 <code>attr()</code></p><hr><p>有添加当然也有删除：</p><table><thead><tr><th>编号</th><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td><code>removeAttr(name)</code></td><td>删除所有属性</td></tr><tr><td>2</td><td><code>removeProp(name)</code></td><td>删除原有属性</td></tr></tbody></table><h3 id="_5-2-类的增删" tabindex="-1"><a class="header-anchor" href="#_5-2-类的增删"><span>5.2 类的增删</span></a></h3><p>类作为 DOM 元素的属性，也是可以操作的。可以进行增加、删除和切换。</p><ul><li><code>addClass/removeClass( class | fn )</code><ul><li><code>class</code>：需要增加 / 删除的类名，如果是多个类名，需要传递数组。</li><li><code>fn( index , class )</code>：回调函数。index 当前所遍历的对象在原先 jQuery 对象中的索引，class 为旧的 class 值。</li></ul></li><li><code>toggleClass(class | fn [,sw])</code><ul><li><code>class</code>：需要切换的类名，如果是多个类名，需要传递数组。</li><li><code>fn( index ,className ,state ) [,sw]</code>：回调函数，返回一个类名字符串或者类名数组。 <ul><li>index 当前所遍历的对象在原先 jQuery 对象中的索引；</li><li>className 为旧的 class 值；</li><li>state 为 <code>toggleClass()</code> 的第二个参数的值；</li><li>sw，可选参数，用于标识样式是增加还是删除。</li></ul></li></ul></li></ul><h3 id="_5-3-文本的增改" tabindex="-1"><a class="header-anchor" href="#_5-3-文本的增改"><span>5.3 文本的增改</span></a></h3><p>jQuery 提供了三个方法来操作文本属性：</p><ul><li><code>html( [val|fn] )</code>： <ul><li><code>val</code>：用于设定HTML内容的值；</li><li><code>function( index, html )</code>：此函数返回一个 HTML 字符串。自动传入两个参数，index 为元素在集合中的索引位置，html为原先的 HTML 的值。</li><li>无参数：返回 jQuery 对象中第一个 DOM 元素的 HTML 的值，与 <code>element.innerHTML</code> 一致。</li></ul></li><li><code>text( [val|fn] )</code>： <ul><li><code>val</code>：用于设定文本内容的值；</li><li><code>function( index, text )</code>：此函数返回一个文本字符串。自动传入两个参数，index 为元素在集合中的索引位置，text 为原先的 text 的值。</li><li>无参数：返回 jQuery 对象中所有 DOM 元素的文本内容组合起来的文本。</li></ul></li><li><code>val( [val | fn | arr] )</code>： <ul><li><code>val</code>：要设置的值；</li><li><code>function(index, value)</code>：此函数返回一个要设置的值。自动传入两个参数，index 为元素在集合中的索引位置，value 为原先的 value 值。</li><li><code>arr</code>：数组，用于设置 check 和 select 的选项，<strong>填入需要选中的选项的 name 值</strong>。</li><li>无参数：返回 jQuery 对象中第一个 DOM 元素的 value 的值，<strong>若 DOM 元素是 select 下拉框元素，则会返回一个数组</strong>。</li></ul></li></ul><h2 id="六、核心对象操作样式" tabindex="-1"><a class="header-anchor" href="#六、核心对象操作样式"><span>六、核心对象操作样式</span></a></h2><p>我们也可以对 jQuery 对象直接操作 css 样式，例如背景颜色、位置等。</p><h3 id="_6-1-直接操作css" tabindex="-1"><a class="header-anchor" href="#_6-1-直接操作css"><span>6.1 直接操作css</span></a></h3><ul><li>获取到的指定样式属性的属性值。 <ul><li><code>.css( propertyName )</code>：传入一个属性名字符串。</li><li><code>.css( propertyNames )</code>：传入一个属性名字符串数组。</li></ul></li><li>设置指定样式属性的属性值。 <ul><li><code>.css( propertyName, value )</code>：传入一个属性名字符串和属性值字符串。</li><li><code>.css( propertyName, function(index, value) )</code>：传入一个属性名字符串和一个回调函数。回调函数需要返回一个属性值字符串，自动传入两个参数，index 为元素在集合中的索引位置，value 为原先的 value 值。</li><li><code>.css( properties )</code>：传入一个普通对象，用于一次设置多个属性的值。</li></ul></li></ul><h3 id="_6-2-操作元素的位置" tabindex="-1"><a class="header-anchor" href="#_6-2-操作元素的位置"><span>6.2 操作元素的位置</span></a></h3><p>操作元素的位置有四个方法，两个是操作元素在页面的位置，另外两个是操作滚动条位置。</p><h4 id="_1-操作元素在页面的位置" tabindex="-1"><a class="header-anchor" href="#_1-操作元素在页面的位置"><span>（1）操作元素在页面的位置</span></a></h4><p>操作元素在整个页面的坐标：</p><ul><li><code>.offset()</code>：返回一个对象，对象里有 left 和 top 属性。作用是得到当前元素的整个页面的坐标。对于设置了 <code>visibility:hidden</code> 的元素，仍然可以获取到坐标，但设置了<code>display:none</code> 的元素，获取不到其坐标。</li><li><code>.offset( coordinates )</code>：传入一个普通对象，普通对象里需要有 left 和 top 属性。作用设置元素在整个页面的坐标。</li><li><code>.offset( function(index, coords) )</code>：传入一个回调函数。该回调函数需要返回一个普通对象，普通对象里需要有 left 和 top 属性。函数里自动传入两个参数，index 为元素在集合中的索引位置，coords 为原先的坐标值。</li></ul><p>获取元素在 <strong>相对于偏移父元素的坐标</strong>：</p><ul><li><code>.position()</code>：返回一个对象，对象里有 left 和 top 属性。</li></ul><p>举一个例子：</p><p>有一个页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#div2</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token comment">/* z-index: 1; */</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#div1</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> rebeccapurple<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面示例如下：</p><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQ相对距离和绝对距离.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后使用上面的方法分别获得两个 div 的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> $div1 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> $div2 <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 大div的真实位置：</span>
<span class="token comment">// {&quot;top&quot;: 50,&quot;left&quot;: 50 } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 小div的真实位置：</span>
<span class="token comment">// {&quot;top&quot;: 100,&quot;left&quot;: 50 } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div2<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 大div相对于body的位置：</span>
<span class="token comment">// {&quot;top&quot;: 50,&quot;left&quot;: 50 } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div1<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 小div相对于大div的位置：</span>
<span class="token comment">// {&quot;top&quot;: 50,&quot;left&quot;: 0 } </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$div2<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-操作页面的滚动" tabindex="-1"><a class="header-anchor" href="#_2-操作页面的滚动"><span>（2）操作页面的滚动</span></a></h4><p>获取垂直滚动距离：</p><ul><li><code>.scrollLeft()</code></li></ul><p>设置垂直滚动距离：</p><ul><li><code>.scrollLeft( value )</code></li></ul><p>获取水平滚动距离：</p><ul><li><code>.scrollTop()</code></li></ul><p>设置垂直滚动距离：</p><ul><li><code>.scrollTop( value )</code></li></ul><p>可以使用这些方法来实现返回顶端的功能：</p><ul><li><code>$(&quot;html&quot;).scrollTop(0);</code></li></ul><p>之前提到过，如果子元素内容过多，父元素会产生滚动条，所以滚动条是 <strong>属于父元素</strong> 的。body 标签的内容过多，html 标签就产生滚动条。</p><p>如果需要平滑的返回顶端，原生 JS 提供了相对应的方法。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#top&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token comment">// 可以填写三个参数：</span>
        <span class="token comment">// smooth(平滑滚动),instant(瞬间滚动),默认值auto</span>
        <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">&quot;smooth&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-操作元素的尺寸" tabindex="-1"><a class="header-anchor" href="#_6-3-操作元素的尺寸"><span>6.3 操作元素的尺寸</span></a></h3><p>元素的尺寸分为三种类型，内容尺寸、内部尺寸和外部尺寸。</p><ul><li>内容尺寸：内容尺寸就是元素的 height 和 weight 值 <ul><li><code>height( [val | fn] )</code></li><li><code>weight( [val | fn] )</code></li></ul></li><li>内部尺寸：内部尺寸就是元素的内容尺寸加上 padding 的值。 <ul><li><code>innerHeight()</code></li><li><code>innerWidth()</code></li></ul></li><li>外部尺寸：外部尺寸就是在元素的内部尺寸加上 border 的值，也可以同时加上 margin 的值。 <ul><li><code>outerHeight( [options] )</code></li><li><code>outerWidth( [options] )</code></li><li><code>options</code> ：可选参数，填写 true 时，就会加上 margin 的值。</li></ul></li></ul><p>举一个例子：</p><p>有一个页面如下：</p><ul><li>div1 里有 div2</li><li>div1 的宽度为 300，高度为 300</li><li>div1 的 margin 为 50，边框为 10，padding 为 30</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#div2</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> aqua<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#div1</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> rebeccapurple<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 10px solid seagreen<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片示例如下：</p><figure><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQ元素的尺寸.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>分别使用上面的函数：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 300</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">innerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 360 = 300 + 30(padding) * 2 </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 380 = 360 + 10(border) * 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 480 = 380 + 50(margin) * 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七、总结" tabindex="-1"><a class="header-anchor" href="#七、总结"><span>七、总结</span></a></h2><p>根据上面所学的内容，继续完善 jQuery 手册的标记。</p><figure><img src="https://github.com/hahg2000/picture/blob/Senior-JS/jQuery手册目录-标记4.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,267),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","jQuery-上.html.vue"]]),r=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%8A.html","title":"jQuery-上","lang":"zh-CN","frontmatter":{"description":"jQuery-上 一、初始jQuery 1.1 jQuery是什么 jQuery 是一个优秀的 JS 函数库，其官网为 https://jquery.com/。 大部分网站都使用到了 jQuery ，其口号为 write less , do more。 因为查找 DOM 元素比增删改元素的操作更复杂，所以这个框架设计的初心就是更容易查找 DOM 元素。...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%8A.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"jQuery-上"}],["meta",{"property":"og:description","content":"jQuery-上 一、初始jQuery 1.1 jQuery是什么 jQuery 是一个优秀的 JS 函数库，其官网为 https://jquery.com/。 大部分网站都使用到了 jQuery ，其口号为 write less , do more。 因为查找 DOM 元素比增删改元素的操作更复杂，所以这个框架设计的初心就是更容易查找 DOM 元素。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95-%E6%A0%87%E8%AE%B01.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-24T04:33:47.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"jQuery-上"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2024-02-24T04:33:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jQuery-上\\",\\"image\\":[\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95-%E6%A0%87%E8%AE%B01.png\\",\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95-%E6%A0%87%E8%AE%B02.png\\",\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95-%E6%A0%87%E8%AE%B03.png\\",\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/%E8%A1%A8%E6%A0%BC%E9%9A%94%E8%A1%8C%E5%8F%98%E8%89%B2%E7%A4%BA%E4%BE%8B.png\\",\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQ%E7%9B%B8%E5%AF%B9%E8%B7%9D%E7%A6%BB%E5%92%8C%E7%BB%9D%E5%AF%B9%E8%B7%9D%E7%A6%BB.png\\",\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQ%E5%85%83%E7%B4%A0%E7%9A%84%E5%B0%BA%E5%AF%B8.png\\",\\"https://github.com/hahg2000/picture/blob/Senior-JS/jQuery%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95-%E6%A0%87%E8%AE%B04.png\\"],\\"dateModified\\":\\"2024-02-24T04:33:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、初始jQuery","slug":"一、初始jquery","link":"#一、初始jquery","children":[{"level":3,"title":"1.1 jQuery是什么","slug":"_1-1-jquery是什么","link":"#_1-1-jquery是什么","children":[]},{"level":3,"title":"1.2 为什么选择jQuery","slug":"_1-2-为什么选择jquery","link":"#_1-2-为什么选择jquery","children":[]},{"level":3,"title":"1.3 怎么使用","slug":"_1-3-怎么使用","link":"#_1-3-怎么使用","children":[]},{"level":3,"title":"1.4 jQuery的两把利器","slug":"_1-4-jquery的两把利器","link":"#_1-4-jquery的两把利器","children":[]}]},{"level":2,"title":"二、jQuery核心函数","slug":"二、jquery核心函数","link":"#二、jquery核心函数","children":[{"level":3,"title":"2.1 作为函数调用","slug":"_2-1-作为函数调用","link":"#_2-1-作为函数调用","children":[]},{"level":3,"title":"2.2 作为对象调用","slug":"_2-2-作为对象调用","link":"#_2-2-作为对象调用","children":[]},{"level":3,"title":"2.3 举例使用","slug":"_2-3-举例使用","link":"#_2-3-举例使用","children":[]}]},{"level":2,"title":"三、jQuery 核心对象","slug":"三、jquery-核心对象","link":"#三、jquery-核心对象","children":[{"level":3,"title":"2.1 简介","slug":"_2-1-简介","link":"#_2-1-简介","children":[]},{"level":3,"title":"2.2 分类","slug":"_2-2-分类","link":"#_2-2-分类","children":[]},{"level":3,"title":"2.3 基本行为的使用","slug":"_2-3-基本行为的使用","link":"#_2-3-基本行为的使用","children":[]},{"level":3,"title":"2.4 基本行为的实例","slug":"_2-4-基本行为的实例","link":"#_2-4-基本行为的实例","children":[]}]},{"level":2,"title":"四、选择器","slug":"四、选择器","link":"#四、选择器","children":[{"level":3,"title":"4.1 基本选择器","slug":"_4-1-基本选择器","link":"#_4-1-基本选择器","children":[]},{"level":3,"title":"4.2 层次选择器","slug":"_4-2-层次选择器","link":"#_4-2-层次选择器","children":[]},{"level":3,"title":"4.3 过滤选择器","slug":"_4-3-过滤选择器","link":"#_4-3-过滤选择器","children":[]},{"level":3,"title":"4.4 表单选择器","slug":"_4-4-表单选择器","link":"#_4-4-表单选择器","children":[]},{"level":3,"title":"4.5 Tab切换","slug":"_4-5-tab切换","link":"#_4-5-tab切换","children":[]}]},{"level":2,"title":"五、核心对象操作属性","slug":"五、核心对象操作属性","link":"#五、核心对象操作属性","children":[{"level":3,"title":"5.1 属性的增删","slug":"_5-1-属性的增删","link":"#_5-1-属性的增删","children":[]},{"level":3,"title":"5.2 类的增删","slug":"_5-2-类的增删","link":"#_5-2-类的增删","children":[]},{"level":3,"title":"5.3 文本的增改","slug":"_5-3-文本的增改","link":"#_5-3-文本的增改","children":[]}]},{"level":2,"title":"六、核心对象操作样式","slug":"六、核心对象操作样式","link":"#六、核心对象操作样式","children":[{"level":3,"title":"6.1 直接操作css","slug":"_6-1-直接操作css","link":"#_6-1-直接操作css","children":[]},{"level":3,"title":"6.2 操作元素的位置","slug":"_6-2-操作元素的位置","link":"#_6-2-操作元素的位置","children":[]},{"level":3,"title":"6.3 操作元素的尺寸","slug":"_6-3-操作元素的尺寸","link":"#_6-3-操作元素的尺寸","children":[]}]},{"level":2,"title":"七、总结","slug":"七、总结","link":"#七、总结","children":[]}],"git":{"createdTime":1708749227000,"updatedTime":1708749227000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":31.4,"words":9420},"filePathRelative":"学习/前端/JS框架/jQuery-上.md","localizedDate":"2024年2月24日","excerpt":"\\n<h2>一、初始jQuery</h2>\\n<h3>1.1 jQuery是什么</h3>\\n<p>jQuery 是一个优秀的 JS 函数库，其官网为 https://jquery.com/。</p>\\n<p>大部分网站都使用到了 jQuery ，其口号为 write less , do more。</p>\\n<p>因为查找 DOM 元素比增删改元素的操作更复杂，所以这个框架设计的初心就是更容易查找 DOM 元素。所以第一个字母是小写，而 Query 的开头是大写。</p>\\n<img src=\\"https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQuery图标.png\\" style=\\"zoom:80%;\\">","autoDesc":true}');export{k as comp,r as data};
