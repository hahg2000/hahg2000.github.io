const e=JSON.parse('{"key":"v-71ef0d96","path":"/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/9.html","title":"第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库","lang":"zh-CN","frontmatter":{"description":"第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库 自从电脑有了分层文件系统以来，\\"我知道有这个文件，但不知道它放在哪\\"这个问题就一直困扰着人们。1974年发布的Unix第五个版本引入的 find 命令，到今天仍在使用。查找文件的艺术已经走过了很长一段路：伴随现代操作系统一起不断发展的文件索引和搜索功能。 给程序员的工具箱里添加类似 find 这样的功能依旧非常有价值，在本章，我们将通过编写一个Haskell库给我们的 find 命令添加更多功能，我们将通过一些有着不同的健壮度的方法来完成这个库。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/Haskell%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/9.html"}],["meta",{"property":"og:title","content":"第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库"}],["meta",{"property":"og:description","content":"第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库 自从电脑有了分层文件系统以来，\\"我知道有这个文件，但不知道它放在哪\\"这个问题就一直困扰着人们。1974年发布的Unix第五个版本引入的 find 命令，到今天仍在使用。查找文件的艺术已经走过了很长一段路：伴随现代操作系统一起不断发展的文件索引和搜索功能。 给程序员的工具箱里添加类似 find 这样的功能依旧非常有价值，在本章，我们将通过编写一个Haskell库给我们的 find 命令添加更多功能，我们将通过一些有着不同的健壮度的方法来完成这个库。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-23T13:50:18.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-23T13:50:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-23T13:50:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"find命令","slug":"find命令","link":"#find命令","children":[]},{"level":2,"title":"简单的开始：递归遍历目录","slug":"简单的开始-递归遍历目录","link":"#简单的开始-递归遍历目录","children":[{"level":3,"title":"再次认识匿名和命名函数","slug":"再次认识匿名和命名函数","link":"#再次认识匿名和命名函数","children":[]},{"level":3,"title":"为什么提供 mapM 和 forM","slug":"为什么提供-mapm-和-form","link":"#为什么提供-mapm-和-form","children":[]}]},{"level":2,"title":"一个本地查找函数","slug":"一个本地查找函数","link":"#一个本地查找函数","children":[]},{"level":2,"title":"谓词在保持纯粹的同时支持从贫类型到富类型","slug":"谓词在保持纯粹的同时支持从贫类型到富类型","link":"#谓词在保持纯粹的同时支持从贫类型到富类型","children":[]},{"level":2,"title":"安全的获得一个文件的大小","slug":"安全的获得一个文件的大小","link":"#安全的获得一个文件的大小","children":[{"level":3,"title":"请求-使用-释放循环","slug":"请求-使用-释放循环","link":"#请求-使用-释放循环","children":[]}]},{"level":2,"title":"为谓词而开发的领域特定语言","slug":"为谓词而开发的领域特定语言","link":"#为谓词而开发的领域特定语言","children":[{"level":3,"title":"多用提升（lifting）来减少样板代码","slug":"多用提升-lifting-来减少样板代码","link":"#多用提升-lifting-来减少样板代码","children":[]},{"level":3,"title":"谓词组合","slug":"谓词组合","link":"#谓词组合","children":[]}]},{"level":2,"title":"定义并使用新算符","slug":"定义并使用新算符","link":"#定义并使用新算符","children":[]},{"level":2,"title":"控制遍历","slug":"控制遍历","link":"#控制遍历","children":[{"level":3,"title":"练习","slug":"练习-1","link":"#练习-1","children":[]}]},{"level":2,"title":"代码密度，可读性和学习过程","slug":"代码密度-可读性和学习过程","link":"#代码密度-可读性和学习过程","children":[{"level":3,"title":"练习","slug":"练习-2","link":"#练习-2","children":[]}]},{"level":2,"title":"编码指南","slug":"编码指南","link":"#编码指南","children":[{"level":3,"title":"常用布局风格","slug":"常用布局风格","link":"#常用布局风格","children":[]}]},{"level":2,"title":"练习","slug":"练习-3","link":"#练习-3","children":[]}],"git":{"createdTime":1703339418000,"updatedTime":1703339418000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":37.18,"words":11155},"filePathRelative":"学习/Haskell中文文档/9.md","localizedDate":"2023年12月23日","excerpt":"<h1> 第 9 章：I/O学习 —— 构建一个用于搜索文件系统的库</h1>\\n<p>自从电脑有了分层文件系统以来，\\"我知道有这个文件，但不知道它放在哪\\"这个问题就一直困扰着人们。1974年发布的Unix第五个版本引入的 <code>find</code> 命令，到今天仍在使用。查找文件的艺术已经走过了很长一段路：伴随现代操作系统一起不断发展的文件索引和搜索功能。</p>\\n<p>给程序员的工具箱里添加类似 <code>find</code> 这样的功能依旧非常有价值，在本章，我们将通过编写一个Haskell库给我们的\\n<code>find</code> 命令添加更多功能，我们将通过一些有着不同的健壮度的方法来完成这个库。</p>","autoDesc":true}');export{e as data};
