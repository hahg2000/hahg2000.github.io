import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as p,c as e,f as a,a as n,b as s}from"./app-BVqESlQI.js";const o={},c=a(`<h1 id="jquery-中" tabindex="-1"><a class="header-anchor" href="#jquery-中"><span>jQuery-中</span></a></h1><h2 id="一、jquery对象的筛选和查找" tabindex="-1"><a class="header-anchor" href="#一、jquery对象的筛选和查找"><span>一、jQuery对象的筛选和查找</span></a></h2><p><strong>筛选：</strong> 在已查找出来的集合中进行再次过滤，过滤出不需要的。与并集选择器的功能相似。</p><p><strong>查找：</strong> 以当前的集合为起点，进行向外查找需要的元素。或者说在当前元素的 DOM 节点树查找。</p><h3 id="_1-1-筛选" tabindex="-1"><a class="header-anchor" href="#_1-1-筛选"><span>1.1 筛选</span></a></h3><p>首先有以位置为条件的筛选：</p><ul><li><code>eq( index | -index )</code></li><li>获取当前链式操作中索引为 n 的 jQuery 对象，返回 jQuery 对象。</li><li>参数大于0，正向选取；参数小于0，反向选取。</li><li>类似的有 <code>get(index)</code>,不过 <code>get(index)</code> 返回的是 DOM 对象。</li><li>与选择器 <code>:eq(index)</code> 类似。</li><li><code>first()</code><ul><li>获取第一个元素。</li><li>与选择器 <code>:first</code> 类似。</li></ul></li><li><code>last()</code><ul><li>获取最后一个元素。</li><li>与选择器 <code>:last</code> 类似。</li></ul></li></ul><p>然后是以参数为条件的筛选：</p><ul><li><p><code>is( selector | selection | elements | fn)</code>：返回布尔值，判断当前 jQuery 对象是否符合参数条件。</p><ul><li><code>selector</code>：选择器字符串。</li><li><code>selection</code>：jQuery 集合。</li><li><code>elements</code>： 一个或者多个 DOM 元素。</li><li><code>fn</code> ：<code>Function( Integer index, Element element ) =&gt; Boolean</code></li></ul></li><li><p><code>hasClass(class)</code></p><ul><li>检查当前的元素是否含有某个特定的类。</li><li>与 <code>is(&quot;.&quot; + class)</code> 一样。</li></ul></li><li><p><code>fliter( selector | selection | elements | fn )</code>：返回 jQuery 对象，找到符合参数条件的元素。</p><ul><li><code>selector</code>：选择器字符串。</li><li><code>selection</code>：jQuery 集合。</li><li><code>elements</code>： 一个或者多个 DOM 元素。</li><li><code>fn</code> ：<code>Function( Integer index, Element element ) =&gt; Boolean</code></li></ul></li><li><p><code>not( selector | selection | fn )</code>：从匹配元素的集合中删除与指定表达式匹配的元素</p><ul><li><code>selector</code>：选择器字符串。</li><li><code>selection</code>：jQuery 集合。</li><li><code>fn</code> ：<code>Function( Integer index, Element element ) =&gt; Boolean</code></li></ul></li></ul><p>也可以以孩子为条件筛选：</p><ul><li><code>has( selector | contained )</code>：选择包含特定后代的元素。 <ul><li><code>selector</code>：选择器字符串。</li><li><code>contained</code>：一个 DOM 元素。</li></ul></li></ul><p>下面举一个例子，来使用这些方法。</p><p>页面代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>BBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>CCC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>DDD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>EEE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有如下需求：</p><ol><li>选择 li 标签的第一个元素；</li><li>选择 li 标签的最后一个元素；</li><li>选择 li 标签的第二个元素；</li><li>选择 title 属性为 hello 的 li 标签；</li><li>选择 title 属性不为 hello 的 li 标签；</li><li>选择子元素有 span 标签的 li 标签。</li></ol><p>jQuery 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 1. li标签的第一个元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// AAA</span>

<span class="token comment">// 2. li标签的最后一个元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &lt;span&gt;EEE&lt;/span&gt;</span>

<span class="token comment">// 3. li标签的第二个元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// BBB</span>

<span class="token comment">// 4. title属性为hello的li标签</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;[title=&#39;hello&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// BBB</span>

<span class="token comment">// 5. title属性不为hello的li标签</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;:not([title=&#39;hello&#39;])&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token string">&quot;[title=&#39;hello&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  

<span class="token comment">// 6. 子元素有span标签的li标签</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$lis<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;span&gt;EEE&lt;/span&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-查找" tabindex="-1"><a class="header-anchor" href="#_1-2-查找"><span>1.2 查找</span></a></h3><p>**查找：**以当前的集合为起点，进行向外查找需要的元素。或者说在当前元素的 DOM 节点树查找。</p><p>首先是当前元素为起点，查找其拥有元素。</p><ul><li><code>children( [selector] )</code>：查找子代元素 <ul><li><code>selector</code>：可选参数，选择器字符串。用于对子元素进行筛选。</li></ul></li><li><code>find( selector | element )</code>：查找后代元素 <ul><li><code>selector</code>：选择器字符串。</li><li><code>element</code>：DOM 元素或者 jQuery 对象。</li></ul></li></ul><p>其次是当前元素为起点，查找其被哪些元素拥有。</p><ul><li><code>parent( [selector] )</code>：查找父元素 <ul><li><code>selector</code>：可选参数，选择器字符串。用于对父元素进行筛选。</li></ul></li><li><code>.parents( [selector] )</code>：查找祖先元素。 <ul><li><code>selector</code>：可选参数，选择器字符串。用于对祖先元素进行筛选。</li></ul></li><li><code>parentsUntil( [selector] | [selection] [, filter] )</code>：查找祖先元素，直到遇到符合指定选择器的元素，不包括匹配到的元素。 <ul><li><code>selector</code>：可选参数，选择器字符串。</li><li><code>selection</code>：可选参数，DOM 元素或者 jQuery 对象。在 jQuery 1.6 版本之后。</li><li><code>filter</code>：可选参数，对查找结果进一步筛选。</li></ul></li></ul><p>然后是其次是当前元素为起点，查找其兄弟元素。</p><ul><li><p><code>next/prev( [selector] )</code>：查找下一个元素 / 查找上一个元素</p><ul><li><code>selector</code>：可选参数，选择器字符串。用于筛选。</li></ul></li><li><p><code>nextAll/prevAll( [selector] )</code>：查找 当前元素之后的所有元素 / 查找当前元素之前 的所有元素。</p><ul><li><code>selector</code>：可选参数，选择器字符串。用于筛选。</li></ul></li><li><p><code>nextUntil/ prevUntil( [selector] | [selection] [, filter] )</code>：查找 之后 / 之前 的元素，直到遇到符合指定选择器的元素，不包括匹配到的元素。</p><ul><li><code>selector</code>：可选参数，选择器字符串。</li><li><code>selection</code>：可选参数，DOM 元素或者 jQuery 对象。在 jQuery 1.6 版本之后。</li><li><code>filter</code>：可选参数，对查找结果进一步筛选。</li></ul></li><li><p><code>.siblings( [selector] )</code>：查找当前元素的兄弟节点</p><ul><li><code>selector</code>：可选参数，选择器字符串。</li></ul></li></ul><p>下面举一个例子来使用 <code>parentsUntil()</code> 方法。</p><p>有一个页面如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jQuery 代码如下：</p><ul><li>第一个输出：以 id 为 t4 的 li 元素为起点，找到祖先元素是 ul 且有 title 属性的元素。 <ul><li>找到 id 为 t3 的 ul 元素，因为其父元素的父元素符合条件。</li><li>找到 id 为 t2 的 li 元素，因为其父元素符合条件。</li></ul></li><li>第二个输出：在第 2 的条件下加上函数的第二个参数——筛选条件，就会对结果进一步筛选，这里保留的是 ul 元素。</li><li>第三个输出：以 id 为 t4 的 li 元素为起点，找到祖先元素的 id 为 t3 的元素。只找到了起点的父元素符合标准，但是这个函数不会包括符合条件的元素，所以没有 DOM 元素找到。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 以id为t4的li元素为起点，找到祖先元素是ul且有title属性</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#t4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parentsUntil</span><span class="token punctuation">(</span><span class="token string">&quot;ul[title]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(2)</span>
<span class="token comment">//  0: ul#t3</span>
<span class="token comment">//  1: li#t2</span>

<span class="token comment">// 以id为t4的li元素为起点，找到祖先元素是ul且有title属性，最后查找到的元素是ul元素</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;li[title=&#39;t4&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parentsUntil</span><span class="token punctuation">(</span><span class="token string">&quot;ul[title]&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(1)</span>
<span class="token comment">//  0: ul#t3</span>

<span class="token comment">// 以id为t4的li元素为起点，找到祖先元素的id为t3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#t4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parentsUntil</span><span class="token punctuation">(</span><span class="token string">&quot;#t3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// jQuery.fn.init(0)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、全选练习" tabindex="-1"><a class="header-anchor" href="#二、全选练习"><span>二、全选练习</span></a></h2><p>我们现在使用 jQuery 来完成 原生 JS 中的全选练习。</p><p>页面代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    你喜欢的运动是？
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allCheckOrNot<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allCheckOrNot<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> 全选/全不选
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>足球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>football<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>football<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>足球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>篮球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>basketball<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>basketball<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>羽毛球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badminton<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>badminton<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>羽毛球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>items<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>乒乓球<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableTennis<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableTennis<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>乒乓球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkedAllBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>全 选<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkedNoBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>全 不 选<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkedRevBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>反 选<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sendBtn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提 交<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/全选练习示例.png" style="zoom:80%;"><h4 id="_1-实现全选和全不选" tabindex="-1"><a class="header-anchor" href="#_1-实现全选和全不选"><span>（1）实现全选和全不选</span></a></h4><ol><li>第 2 行：为全选按钮绑定单击监听。</li><li>第 1 行，获取到 name 属性为 items 的多选框元素。</li><li>第 3 行，再使用获取到的多选框元素全部设置为未选中。</li><li>第 4 行，同时将上面的 全选/全不选 按钮勾上。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> $items <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;:checkbox[name=&#39;items&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#checkedAllBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#allCheckOrNot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同理，全不选也是如此。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#checkedNoBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#allCheckOrNot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-实现反选" tabindex="-1"><a class="header-anchor" href="#_2-实现反选"><span>（2）实现反选</span></a></h4><ol><li>第 3 ~ 5 行：我们可以使用 each() 函数来对每一个元素的选中状态进行反转。</li><li>第 8 ~ 11 行：我们可以使用 jQuery 里的隐式循环来完成状态反转。</li><li>第 13 ~ 17 行：当点击反选后，查找当前被选择的多选框的数量，来判断 全选/全不选 按钮是否选择，也可以使用第 18 行，直接将判断结果作为参数。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#checkedRevBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 使用each()函数</span>
    <span class="token comment">// $items.each(function (index, element) {</span>
    <span class="token comment">//   element.checked = !element.checked;</span>
    <span class="token comment">// })</span>

    <span class="token comment">// 使用prop()的第二个参数</span>
    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token operator">!</span>attr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
    <span class="token comment">// 根据当前被选择的多选框的数量来判断 全选/全不选 按钮是否选择</span>
    <span class="token comment">// if ($items.filter(&quot;:checked&quot;).length === $items.length) {</span>
    <span class="token comment">//     $(&quot;#allCheckOrNot&quot;).prop(&quot;checked&quot;, true);</span>
    <span class="token comment">// } else {</span>
    <span class="token comment">//     $(&quot;#allCheckOrNot&quot;).prop(&quot;checked&quot;, false);</span>
    <span class="token comment">// }</span>
     <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#allCheckOrNot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;:checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> $items<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-实现提交" tabindex="-1"><a class="header-anchor" href="#_3-实现提交"><span>（3）实现提交</span></a></h4><p>提交功能很简单，使用 filter() 方法查找出已被选上的元素，再输出元素的 value 值。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#sendBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;:checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-实现-全选-全不选" tabindex="-1"><a class="header-anchor" href="#_4-实现-全选-全不选"><span>（4）实现 全选/全不选</span></a></h4><p>全选/全不选也很简单，每次把四个按钮设置为 全选/全不选 按钮的选中状态。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#allCheckOrNot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $items<span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-实现自动勾选" tabindex="-1"><a class="header-anchor" href="#_5-实现自动勾选"><span>（5）实现自动勾选</span></a></h4><p>与实现反选的代码的第 13 ~ 18 行一致。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> $items<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// if ($items.filter(&quot;:checked&quot;).length === $items.length) {</span>
    <span class="token comment">//   $(&quot;#allCheckOrNot&quot;).prop(&quot;checked&quot;, true);</span>
    <span class="token comment">// } else {</span>
    <span class="token comment">//   $(&quot;#allCheckOrNot&quot;).prop(&quot;checked&quot;, false);</span>
    <span class="token comment">// }</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#allCheckOrNot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">&quot;checked&quot;</span><span class="token punctuation">,</span> $items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;:checked&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> $items<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、文档处理" tabindex="-1"><a class="header-anchor" href="#三、文档处理"><span>三、文档处理</span></a></h2><p>在运行 JS 文件时，一大部分的时间是查找 DOM 元素，前面已学过，还有一大部分的时间是操作 DOM 元素，接下来就介绍如何操作 DOM 元素，即文档处理。</p><h3 id="_3-1-插入子元素" tabindex="-1"><a class="header-anchor" href="#_3-1-插入子元素"><span>3.1 插入子元素</span></a></h3><p>插入当前元素的子元素，有四个方法。</p><ul><li><code>append( content [, content] )</code>：在当前元素的子元素 <strong>末尾</strong> 添加元素。 <ul><li><code>append( function )</code></li></ul></li><li><code>prepend( content [, content] )</code>：在当前元素的子元素 <strong>开头</strong> 添加元素。 <ul><li><code>prepend( function )</code></li></ul></li></ul><p>参数：</p><ul><li><code>content</code>： 可以是 HTML 字符串——htmlString，可以是DOM元素——Element，可以是文本元素——Text ，可以是元素数组——Array，也可以是 jQuery 对象——jQuery。</li><li><code>function</code>： <code>Function( Integer index, String html ) =&gt; htmlString or Element or Text or jQuery</code></li></ul><hr><ul><li><code>appendTo( target )</code>：将当前元素添加到指定目标元素的里面的最后面。</li><li><code>prependTo( target )</code>：将当前元素添加到指定目标元素的里面的最前面。</li></ul><p>参数：</p><ul><li><strong>可以是选择器字符串——Selector</strong>，可以是 HTML字符串——htmlString，可以是DOM元素——Element，可以是文本元素——Text ，可以是元素数组——Array，也可以是 jQuery 对象——jQuery</li></ul><h3 id="_3-2-插入兄弟元素" tabindex="-1"><a class="header-anchor" href="#_3-2-插入兄弟元素"><span>3.2 插入兄弟元素</span></a></h3><p>在查找到的元素旁边插入元素。与上面的方法很类似。也有正插和反插。</p><ul><li><p><code>after( content [, content] )</code>：在当前元素的 <strong>后面</strong> 添加元素。</p><ul><li><code>after( function )</code></li></ul></li><li><p><code>before( content [, content] )</code>：在当前元素的子元素 <strong>前面</strong> 添加元素。</p><ul><li><code>before( function )</code></li></ul></li><li><p><code>insertAfter( target )</code>：将当前元素添加到指定目标元素的后面。</p></li><li><p><code>insertBefore( target )</code>：将当前元素添加到指定目标元素的前面。</p></li></ul><p>参数都与 3.1 节一致。</p><h3 id="_3-3-替换元素" tabindex="-1"><a class="header-anchor" href="#_3-3-替换元素"><span>3.3 替换元素</span></a></h3><p>替换元素有两种方法，分别为：</p><ul><li><code>replaceWith( newContent )</code>：将当前元素替换成 <strong>参数所传的值</strong>。 <ul><li><code>newContent</code>：htmlString or Element or Array or jQuery</li></ul></li><li><code>replaceAll( target )</code>：将当前元素 <strong>去替换</strong> 参数所代表的元素。 <ul><li><code>target</code>：<strong>Selector</strong> or jQuery or Array or Element</li></ul></li></ul><h3 id="_3-4-删除元素" tabindex="-1"><a class="header-anchor" href="#_3-4-删除元素"><span>3.4 删除元素</span></a></h3><p>删除元素有两种方法，分别为：</p><ul><li><code>empty()</code>：清空当前元素的 <strong>所有子元素</strong>。</li><li><code>remove( [selector] )</code>：删除当前元素。不仅 DOM 元素被删除，而且绑定在元素的事件和附加数据都会被删除。不过其不会在 jQuery 对象中删除。 <ul><li><code>selector</code>：选择器字符串，对当前元素筛选出需要删除的元素。</li></ul></li><li><code>.detach( [selector] )</code>：删除当前元素。虽然 DOM 元素被删除，但是绑定在元素的事件和附加数据都不会被删除。也不会在 jQuery 对象中删除。</li></ul><h3 id="_3-5-示例" tabindex="-1"><a class="header-anchor" href="#_3-5-示例"><span>3.5 示例</span></a></h3><p>下面的示例使用上面所提到的方法。</p><p>页面代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bbb<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>BBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ccc<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>CCC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>DDD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>EEE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>起始页面如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/文档处理原始.png" style="zoom:70%;"><p>jQuery 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//1. 往ul的第一个子元素前面添加元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;插入到第一个元素之前&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2. 往ul的最后一个子元素后面添加元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;插入到最后一个子元素之后&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3. 往 id 为 ccc 的 li 元素前面添加元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;插入到ccc之后&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//4. 往 id 为 ccc 的 li 元素后面添加元素</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;插入到ccc之前&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//5. 将 id 为 bbb 的元素替换</span>
<span class="token comment">// $(&quot;&lt;li&gt;替换bbb&lt;/li&gt;&quot;).replaceAll(&quot;#bbb&quot;);</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;li&gt;替换bbb&lt;/li&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完毕后的页面如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/文档处理运行结果.png" style="zoom:70%;"><h2 id="四、事件处理" tabindex="-1"><a class="header-anchor" href="#四、事件处理"><span>四、事件处理</span></a></h2><p>jQuery 对事件处理分有几个方面：</p><ul><li>页面载入</li><li>事件处理</li><li><s>事件委派（3.0已全部弃用）</s></li><li>事件切换</li><li>事件</li></ul><h3 id="_4-1-事件载入" tabindex="-1"><a class="header-anchor" href="#_4-1-事件载入"><span>4.1 事件载入</span></a></h3><p>事件载入在之前提过，就是 <code>$( document ).ready( function(){} )</code> 或者 <code>$( function(){} )</code></p><p>其与 <code>window.onload( function(){} )</code>的区别是：</p><ul><li>加载的时机不同，前者是仅在 DOM 树加载完成时调用，不包括图片等一些页面资源。后者则是在页面全部资源加载完成后执行。</li><li>绑定事件数量不同，前者可以绑定多个 <code>ready</code> 事件，后者则只能绑定一个 <code>load</code> 的事件。</li></ul><p>下面举一个例子：有一个页面，页面里只有一张图片，图片是百度的 logo。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://bkimg.cdn.bcebos.com/pic/b8014a90f603738da97755563251a751f81986184626?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UyNzI=,g_7,xp_5,yp_5/format,f_auto<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后分别调用上面的所提到的方法。</p><ol><li>无论是 <code>onload</code> 和 <code>ready</code> 事件都会加入到循环队列里，所以第 9 行先输出。</li><li>然后 <code>ready</code> 事件先于 <code>onload</code> 事件所以会先输出第 6 行，最后输出第 2 行。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onload&quot;</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;执行js代码&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 分别输出</span>
<span class="token comment">// 1. 执行js代码</span>
<span class="token comment">// 2. ready 0</span>
<span class="token comment">// 3. onload 2032</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-事件处理" tabindex="-1"><a class="header-anchor" href="#_4-2-事件处理"><span>4.2 事件处理</span></a></h3><p>事件处理包括事件绑定和解除以及触发。</p><h4 id="_1-事件绑定" tabindex="-1"><a class="header-anchor" href="#_1-事件绑定"><span>（1）事件绑定</span></a></h4><ul><li><code>.on( events [, selector ] [, data ] [, handler ] )</code>：为元素绑定指定的事件。 <ul><li><code>events</code>：事件字符串。</li><li><code>selector</code>：选择器字符串，用于筛选当前 jQuery 对象，可以实现事件委托功能。</li><li><code>data</code>：触发事件时要传递给 <code>event.data</code> 中的处理程序的数据。</li><li><code>handler</code>：当事件触发时，所执行的回调函数。</li></ul></li><li><code>.one( events [, selector ] [, data ] [, handler ] )</code>：为元素绑定一次性事件。</li></ul><h4 id="_2-事件解除" tabindex="-1"><a class="header-anchor" href="#_2-事件解除"><span>（2）事件解除</span></a></h4><ul><li><code>.off( events [, selector ] [, handler ] )</code>：为元素解除指定的事件。 <ul><li>如果需要解除当前元素的所有委托，可以执行代码 <code>$( &quot;selector&quot; ).off( &quot;events&quot;, &quot;**&quot; );</code></li></ul></li></ul><h4 id="_3-事件触发" tabindex="-1"><a class="header-anchor" href="#_3-事件触发"><span>（3）事件触发</span></a></h4><p>使用 JS 来修改 DOM 元素不会触发事件，所以需要手动触发事件。</p><ul><li><code>.trigger( eventType [, extraParameters ] )</code>：模拟真实的触发事件，会在 DOM 树上触发事件的冒泡和委托。 <ul><li><code>eventType</code>：触发的事件字符串</li><li><code>extraParameters</code>：数组或者普通对象。触发事件后传递给回调函数的数据。</li></ul></li><li><code>.triggerHandler( eventType [, extraParameters ] )</code>：只会触发指定的事件，不会触发事件的冒泡和委托。</li></ul><h3 id="_4-3-事件的切换" tabindex="-1"><a class="header-anchor" href="#_4-3-事件的切换"><span>4.3 事件的切换</span></a></h3><p>事件的切换提供了两个方面：鼠标移出移入和元素的显示隐藏</p><ul><li><code>hover( [ handlerIn, ] handlerOut )</code>：鼠标移出移入，与 <code>jQuery对象.mouseenter().mouseleave()</code> 作用一致。 <ul><li><code>handlerIn</code>：鼠标移入所执行的回调函数。</li><li><code>handlerOut</code>：鼠标移出所执行的回调函数。</li></ul></li><li><code>toggle( duration [, easing ] [, complete ] )</code>：设置显示隐藏元素的效果。 <ul><li><code>duration</code>：字符串或者整型。效果执行的时间。</li><li><code>easing</code>：效果执行过程中的速率变化。默认为 <code>swing</code>，执行速率先增大再减少。可选参数<code>linear</code> ，执行速率不变。</li><li><code>complete</code>：效果运行完毕后，执行的回调函数。</li></ul></li><li><code>toggle( display )</code>：设置元素是否显示。 <ul><li><code>display</code>：布尔值，用于设置元素是否显示。</li></ul></li></ul><h3 id="_4-4-事件" tabindex="-1"><a class="header-anchor" href="#_4-4-事件"><span>4.4 事件</span></a></h3><p>大多数事件都可以像单击事件 <code>click()</code> 那样直接调用方法来绑定，不需要必须使用 <code>on()</code> 方法来绑定。</p><h4 id="_1-鼠标移入移出" tabindex="-1"><a class="header-anchor" href="#_1-鼠标移入移出"><span>（1）鼠标移入移出</span></a></h4><p>鼠标移入移出，jQuery 提供了两对方法：</p><ul><li><code>mouseover( [eventData], handler )</code>：在移动到当前元素触发，<strong>移动其子元素也会触发</strong>。</li><li><code>mouseout( [eventData], handler )</code>：在移出当前元素触发，<strong>移出其子元素也会触发</strong>。 <ul><li><code>eventData</code>：任何类型，传递给回调函数的参数。</li><li><code>handler</code>：回调函数，当事件触发时执行的函数。</li></ul></li></ul><hr><ul><li><code>mouseenter( [eventData], handler )</code>：在移动到当前元素触发，<strong>移动其子元素不会触发</strong>。</li><li><code>mouseleave( [eventData], handler )</code>：在移出当前元素触发，<strong>移出其子元素不会触发</strong>。</li></ul><h4 id="_2-event对象" tabindex="-1"><a class="header-anchor" href="#_2-event对象"><span>（2）event对象</span></a></h4><p>当触发事件时，会有一个隐式参数 event 对象。</p><ul><li>我们可以使用其对象里有许多有用的数据。例如 <code>event.offsetX</code> 、<code>event.target</code>。</li><li>我们可以通过其来阻止事件冒泡。使用<code>event.stopPropagation()</code> 方法。</li><li>我们可以通过其来阻止浏览器的默认行为。使用 <code>event.preventDefault()</code> 方法。</li></ul><h2 id="五、添加删除记录" tabindex="-1"><a class="header-anchor" href="#五、添加删除记录"><span>五、添加删除记录</span></a></h2><p>下面做原生 JS 所做过的练习——添加删除记录。</p><h3 id="_5-1-页面布局" tabindex="-1"><a class="header-anchor" href="#_5-1-页面布局"><span>5.1 页面布局</span></a></h3><p>页面代码如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 35%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userTable<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>名字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>邮箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>123@qq.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Jack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>456@qq.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Tim<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>789@qq.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>21<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 35%<span class="token punctuation">;</span> <span class="token property">padding-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    姓名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    邮箱：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    年龄：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addBtn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面图片示例如下：</p><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/添加删除记录界面.png" style="zoom:80%;"><p>实现的功能：</p><ol><li>在文本框中输入信息后点击按钮就可以添加到表格中。</li><li>点击删除按钮就可以删除当前行数据。</li></ol><h3 id="_5-2-jquery代码" tabindex="-1"><a class="header-anchor" href="#_5-2-jquery代码"><span>5.2 jQuery代码</span></a></h3><h4 id="_1-提交信息" tabindex="-1"><a class="header-anchor" href="#_1-提交信息"><span>（1）提交信息</span></a></h4><ol><li>第 1 行：为提交按钮绑定单击事件</li><li>第 2 ~ 4 行：当点击提交按钮时，分别获取姓名、email 和 年龄的文本框的内容。</li><li>第 6 行：使用 html 字符串作为参数，将其包装成 jQuery 对象，以便调用其里面的方法。</li><li>第 7 ~ 10 行：使用了 jQuery 的特性——链式调用来逐步往 tr 标签里添加内容。</li><li>第 11 行：因为当前有的是添加的数据，所以直接调用 <code>appendTo()</code> 方法来添加到表格里面，不需要先存到一个变量里，再调用 <code>append()</code> 方法。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#addBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> email <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;tr&gt;&lt;/tr&gt;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&quot;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;td&gt;&lt;a href=&#39;javascript:;&#39;&gt;delete&lt;/a&gt;&lt;/td&gt;&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">&quot;#userTable&gt;tbody&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-删除当前行" tabindex="-1"><a class="header-anchor" href="#_2-删除当前行"><span>（2）删除当前行</span></a></h4><p>实现删除当前行，需要为每一个删除按钮绑定单击事件，如果要为新添加的数据也绑定同样的单击事件，就要事件委托，用 <code>on()</code> 方法。</p><ul><li>第 1 行：方法的第二个参数传入 &quot; a &quot; ，意思是将 a 标签的单击事件委托给 userTable 元素。</li><li>第 5 ~ 7 行：使用 <code>:contains()</code> 选择器来获取到 ” 名字 “ 所在列的索引。</li><li>第 10 行：根据名字索引，提取出当前行的名字信息。</li><li>第 12 ~ 14 行：弹出提示框。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#userTable&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> $tr <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">&quot;tr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取到名字的列索引</span>
    <span class="token keyword">let</span> nameIndex <span class="token operator">=</span> $tr<span class="token punctuation">.</span><span class="token function">prevAll</span><span class="token punctuation">(</span><span class="token string">&quot;:last&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;:contains(&#39;名字&#39;)&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 根据列索引取出提示的名字</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> $tr<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">&quot;:eq(&quot;</span> <span class="token operator">+</span> nameIndex <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;请问是要删除 &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot; 吗？&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $tr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、效果" tabindex="-1"><a class="header-anchor" href="#六、效果"><span>六、效果</span></a></h2><h3 id="_6-1-内置动画" tabindex="-1"><a class="header-anchor" href="#_6-1-内置动画"><span>6.1 内置动画</span></a></h3><h4 id="_1-淡入淡出" tabindex="-1"><a class="header-anchor" href="#_1-淡入淡出"><span>（1）淡入淡出</span></a></h4><p>淡入淡出的动画效果是：改变元素的透明度，最后将元素改变 <code>display:none</code>。</p><ul><li><code>fadeIn/fadeout/fadeToggle( [duration ] [, easing ] [, complete ] )</code>：显示 / 隐藏 / 动画切换 元素 <ul><li><code>duration</code>：字符串或者整型。效果执行的时间。字符串可选：&quot;slow&quot;，&quot;normal&quot;， &quot;fast&quot;。</li><li><code>easing</code>：效果执行过程中的速率变化。默认为 <code>swing</code>，执行速率先增大再减少。可选参数<code>linear</code> ，执行速率不变。</li><li><code>complete</code>：效果运行完毕后，执行的回调函数。</li></ul></li><li><code>fadeIn/fadeout/fadeToggle( options )</code><ul><li><code>options</code>：普通对象。设置方法的一些参数。</li></ul></li></ul><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/淡入淡出示意图.gif" style="zoom:70%;"><h4 id="_2-缩小放大" tabindex="-1"><a class="header-anchor" href="#_2-缩小放大"><span>（2）缩小放大</span></a></h4><p>缩小放大的动画效果是：改变元素的高度，最后将元素改变 <code>display:none</code>。</p><ul><li><code>slideUp/slideDown/slideToggle( [duration ] [, easing ] [, complete ] )</code>：显示 / 隐藏 / 动画切换 元素。</li><li><code>slideUp/slideDown/slideToggle( options )</code></li></ul><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/缩小放大示意图.gif" style="zoom:70%;"><h4 id="_3-显示隐藏" tabindex="-1"><a class="header-anchor" href="#_3-显示隐藏"><span>（3）显示隐藏</span></a></h4><p>显示隐藏的动画效果是：改变元素的高度和高度，最后将元素改变 <code>display:none</code>。</p><ul><li><code>show/hide/toggle( [duration ] [, easing ] [, complete ] )</code>：显示 / 隐藏 / 动画切换 元素。</li><li><code>show/hide/toggle( options )</code></li><li><code>show/hide/toggle()</code>：立即 显示 / 隐藏 / 动画切换 元素。</li></ul><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/显示隐藏示意图.gif" style="zoom:70%;"><h3 id="_6-2-自定义动画" tabindex="-1"><a class="header-anchor" href="#_6-2-自定义动画"><span>6.2 自定义动画</span></a></h3><p>我们可以使用自定义动画来做出我们自己所需的动画。</p><ul><li><code>animate( properties [, duration ] [, easing ] [, complete ] )</code><ul><li><code>properties</code>：执行完动画的最终数据。若不知道最终数据，可以使用 <code>+= / -=</code> 等符号来直接设置所移动的距离。</li><li><code>duration</code>：字符串或者整型。效果执行的时间。字符串可选：&quot;slow&quot;，&quot;normal&quot;， &quot;fast&quot;。</li><li><code>easing</code>：效果执行过程中的速率变化。默认为 <code>swing</code>，执行速率先增大再减少。可选参数<code>linear</code> ，执行速率不变。</li><li><code>complete</code>：效果运行完毕后，执行的回调函数。</li></ul></li></ul><p>我们也可以在需要时停止动画。</p><ul><li><code>stop( [clearQueue ] [, jumpToEnd ] )</code>：停止动画。 <ul><li><code>clearQueue</code>：是否清除动画队列。</li><li><code>jumpToEnd</code>：是否立即完成当前这一步的动画。</li></ul></li><li><code>finish( [queue] )</code>：停止动画。清除动画队列，立即完成动画队列里的动画。 <ul><li><code>queue</code>：停止动画的队列名称。</li></ul></li></ul><p>我们也可以对动画效果进行延迟。</p><ul><li><code>delay( duration [, queueName ] )</code>：延迟执行动画。 <ul><li><code>duration</code>：整型，延迟的时间。</li><li><code>queue</code>：停止动画的队列名称。</li></ul></li></ul><h2 id="七、轮播图" tabindex="-1"><a class="header-anchor" href="#七、轮播图"><span>七、轮播图</span></a></h2><h3 id="_7-1-简介" tabindex="-1"><a class="header-anchor" href="#_7-1-简介"><span>7.1 简介</span></a></h3><p>我们使用 jQuery 做一个较完整的轮播图。</p><p>轮播图效果如下：</p><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/jQ轮播图示例.gif" style="zoom:60%;"><h3 id="_7-2-页面布局" tabindex="-1"><a class="header-anchor" href="#_7-2-页面布局"><span>7.2 页面布局</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>leftBtn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>左箭头.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rightBtn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>右箭头.png<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>imgList<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A4.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A1.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A2.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A3.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A4.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../图片/A1.JPG<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">#imgList img</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#outer</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 5px solid rebeccapurple<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#imgList</span> <span class="token punctuation">{</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#imgList li</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#nav</span> <span class="token punctuation">{</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 340px<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 139px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#nav li</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  <span class="token selector">#nav a</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #f5804e<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid royalblue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#leftBtn,
  #rightBtn</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">opacity</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 185px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">#rightBtn</span> <span class="token punctuation">{</span>
    <span class="token property">left</span><span class="token punctuation">:</span> 468px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-实现翻页" tabindex="-1"><a class="header-anchor" href="#_7-3-实现翻页"><span>7.3 实现翻页</span></a></h3><p>首先做出平滑翻页的效果，我们需要使用到自定义动画。</p><ol><li>为了可扩展性，我们需要定义几个常量——图片的数量和图片的。并且自动设置 ul 标签的宽度。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 图片的总数量</span>
<span class="token keyword">const</span> <span class="token constant">IMG_NUM</span> <span class="token operator">=</span> $imgList<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

<span class="token comment">// 一张图片的总宽度（包括边框和边距）</span>
<span class="token keyword">const</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#imgList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>

<span class="token comment">// 动态设置ul的宽度</span>
$imgList<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> <span class="token constant">IMG_NUM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>下面的第 6 行：考虑到复用，我们需要将向右动画和向左动画分别封装成一个函数。</li><li>下面的第 6 行：函数的参数有两个，一个是跳转的图片数量，另一个是跳转所花费的时间。</li><li>下面的第 8 行：有了跳转的图片数量，就可以计算出跳转到的 left 值。</li><li>下面的第 11 行：知道了最终 left 值，就可以执行动画了。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 执行向右翻页效果
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">number</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">speed</span>
 */</span>  
<span class="token keyword">function</span> <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 根据跳转的数量来计算出目标left值</span>
    <span class="token keyword">let</span> targetLeft <span class="token operator">=</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> number<span class="token punctuation">;</span>

    <span class="token comment">// 执行动画效果</span>
    $imgList<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;-=&quot;</span> <span class="token operator">+</span> targetLeft <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 变化当前图片的索引</span>
      imgIndex <span class="token operator">+=</span> number<span class="token punctuation">;</span>

      <span class="token comment">// 计算出执行动画效果后的left值</span>
      <span class="token keyword">let</span> currentLeft <span class="token operator">=</span> <span class="token operator">-</span> imgIndex <span class="token operator">*</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

      <span class="token comment">// 如果是最后一张图片则跳转到第二张图片</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentLeft <span class="token operator">===</span> <span class="token constant">LAST_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $imgList<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token constant">SECOND_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imgIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>上面的第 13 行，我使用一个变量来存放当前所展示的图片的索引值，之后用于同步下面小方框的动画。当执行完效果后当前图片的索引。</li><li>上面的第 16 行，执行完效果后就计算出当 left 的值。</li><li>上面的第 19 ~ 22 行，根据 left 的值来判断是否为图片列表的最后一张，如果是最后一张则跳转到第二张，可以参考下面的图片示例。</li></ol><img src="https://raw.githubusercontent.com/hahg2000/picture/Senior-JS/轮播图循环示意.png" style="zoom:80%;"><ol start="8"><li>向左的也是如此，判断当前的 left 的值是否为图片列表的第一张，如果是第一章则跳转到倒数第二张。如下面的代码所示。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@description</span>: 执行向左翻页效果
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">number</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">speed</span>
 */</span>  
<span class="token keyword">function</span> <span class="token function">leftMove</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 执行动画效果</span>
    $imgList<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;+=&quot;</span> <span class="token operator">+</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> number <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      
      <span class="token comment">// 变化当前图片的索引</span>
      imgIndex <span class="token operator">-=</span> number<span class="token punctuation">;</span>

      <span class="token comment">// 计算出执行动画效果后的left值</span>
      <span class="token keyword">let</span> currentLeft <span class="token operator">=</span> <span class="token operator">-</span> imgIndex <span class="token operator">*</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

      <span class="token comment">// 如果是第一张图片则跳转到最后第二张图片</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentLeft <span class="token operator">===</span> <span class="token constant">FIRST_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $imgList<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token constant">LAST_SERCOND_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        imgIndex <span class="token operator">=</span> <span class="token constant">IMG_NUM</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-实现自动翻页" tabindex="-1"><a class="header-anchor" href="#_7-4-实现自动翻页"><span>7.4 实现自动翻页</span></a></h3><p>实现循环翻页需要使用到定时器。</p><ol><li>为了解耦合，我定义了新的两个常量——自动播放的移动速度和每张图片停留的时间。</li><li>下面的第 3 行，在定时器的回调函数里，调用 <code>rightMove()</code> 函数来以 <strong>自动播放的移动速度 移动 1 张图片</strong>。</li><li>下面的第 4 行，而定时器的调用延迟为 自动播放的移动速度 + 每张图片停留的时间。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 启动定时器，定时执行动画效果</span>
<span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span> <span class="token operator">+</span> <span class="token constant">STAY_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-同步更新状态栏" tabindex="-1"><a class="header-anchor" href="#_7-5-同步更新状态栏"><span>7.5 同步更新状态栏</span></a></h3><p>同步更新状态栏，也需要定时器，但开启两个定时器，效率比较差，所以决定将同步更新状态栏功能添加到向左移和向右移的函数里。</p><p>状态栏的布局如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nav<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>因为红色背景是 a 标签的，所以需要获取到所有 a 标签。</li><li>下面的第 2 行，再根据获取的所有 a 标签设置空背景。</li><li>下面的第 4 行，在设置指定的元素为红色背景。这里需要注意的是索引问题，因为下面的 nav 只有四个。索引的关系为下表。</li></ol><table><thead><tr><th>图片的索引</th><th>nav的索引</th></tr></thead><tbody><tr><td>1</td><td>0</td></tr><tr><td>2</td><td>1</td></tr><tr><td>3</td><td>2</td></tr><tr><td>4</td><td>3</td></tr></tbody></table><ol start="4"><li>因为防止 nav 的索引越界，所以需要在最后面，即在更新完 imgIndex 的值之后添加下面的代码。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 设置nav的样式</span>
$nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// imgIndex - 1 是因为eq()函数是从0开始计算的</span>
$nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>imgIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整的 <code>rightMove()</code> 方法如下：</p>`,188),l=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{js:"",class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@description"),s(`: 执行向右翻页效果
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("Number"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"number"),s(`
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token class-name"},[n("span",{class:"token punctuation"},"{"),s("Number"),n("span",{class:"token punctuation"},"}")]),s(),n("span",{class:"token parameter"},"speed"),s(`
 */`)]),s(`  
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"rightMove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[s("number"),n("span",{class:"token punctuation"},","),s(" speed")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 根据跳转的数量来计算出目标left值"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" targetLeft "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token constant"},"IMG_WIDTH"),s(),n("span",{class:"token operator"},"*"),s(" number"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"// 执行动画效果"),s(`
    $imgList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"animate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"left"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"-="'),s(),n("span",{class:"token operator"},"+"),s(" targetLeft "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" speed"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 变化当前图片的索引"),s(`
        imgIndex `),n("span",{class:"token operator"},"+="),s(" number"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 计算出执行动画效果后的left值"),s(`
        `),n("span",{class:"token keyword"},"let"),s(" currentLeft "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"-"),s(" imgIndex "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token constant"},"IMG_WIDTH"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token comment"},"// 如果是最后一张图片则跳转到第二张图片"),s(`
        `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("currentLeft "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token constant"},"LAST_LEFT"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            $imgList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"css"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"left"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"SECOND_LEFT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            imgIndex `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`

        `),n("span",{class:"token comment"},"// 设置nav的样式"),s(`
        $nav`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"children"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"children"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"css"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"background-color"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// imgIndex - 1 是因为eq()函数是从0开始计算的"),s(`
        $nav`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"children"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"children"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("imgIndex "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"css"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"background-color"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"red"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),u=a(`<h3 id="_7-6-点击状态栏跳转图片" tabindex="-1"><a class="header-anchor" href="#_7-6-点击状态栏跳转图片"><span>7.6 点击状态栏跳转图片</span></a></h3><ol><li>下面的第 1 行：为每个状态栏按钮绑定单击事件监听。</li><li>下面的第 3 行：计算出当前的点击的按钮的索引。我们需要把用户新点击的索引与 <code>imgIndex</code> 比较，但我们通过 <code>$(this).index()</code> 获取到的是 <strong>状态栏的索引</strong>，而 <code>imgIndex</code> 的是 <strong>图片的索引</strong>。根据上面的规律，我们需要进行换算才能比较。</li><li>下面的第 6 ~ 19 行：判断用户点击的是在当前的图片的左边还是右边，然后 <strong>调用不同的方法</strong> 移动到目标位置。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#nav&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前点击li的索引</span>
    <span class="token keyword">let</span> newIndex <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// 判断现在的图片位置是目标位置的左边还是右边</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&lt;</span> imgIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 计算出需要移动的图片数量</span>
        <span class="token keyword">let</span> moveNum <span class="token operator">=</span> imgIndex <span class="token operator">-</span> newIndex<span class="token punctuation">;</span>

        <span class="token comment">// 向左移指定的图片数量</span>
        <span class="token function">leftMove</span><span class="token punctuation">(</span>moveNum<span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&gt;</span> imgIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 计算出需要移动的图片数量</span>
        <span class="token keyword">let</span> moveNum <span class="token operator">=</span> newIndex <span class="token operator">-</span> imgIndex<span class="token punctuation">;</span>

        <span class="token comment">// 向右移指定的图片数量</span>
        <span class="token function">rightMove</span><span class="token punctuation">(</span>moveNum<span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-7-快速翻页问题" tabindex="-1"><a class="header-anchor" href="#_7-7-快速翻页问题"><span>7.7 快速翻页问题</span></a></h3><ul><li>因为 jQuery 的动画效果会内置排队，所以不用担心快速点击时发生问题。</li><li>如果不使用 jQuery 的动画，则需要加一个标识符，来标识现在是否在翻页。</li></ul><h3 id="_7-8-完整代码" tabindex="-1"><a class="header-anchor" href="#_7-8-完整代码"><span>7.8 完整代码</span></a></h3><p>完整的 jQuery 代码如下：</p><details class="hint-container details"><summary>点击查看全部代码</summary><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> $imgList <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#imgList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> $nav <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#nav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 图片的总数量</span>
<span class="token keyword">const</span> <span class="token constant">IMG_NUM</span> <span class="token operator">=</span> $imgList<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

<span class="token comment">// 一张图片的总宽度（包括边框和边距）</span>
<span class="token keyword">const</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#imgList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>

<span class="token comment">// 第一张图片的left值</span>
<span class="token keyword">const</span> <span class="token constant">FIRST_LEFT</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// 第二张图片的left值</span>
<span class="token keyword">const</span> <span class="token constant">SECOND_LEFT</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

<span class="token comment">// 最后一张图片的left值</span>
<span class="token keyword">const</span> <span class="token constant">LAST_LEFT</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token constant">IMG_NUM</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

<span class="token comment">// 最后第二张图片的left值</span>
<span class="token keyword">const</span> <span class="token constant">LAST_SERCOND_LEFT</span> <span class="token operator">=</span> <span class="token constant">LAST_LEFT</span> <span class="token operator">+</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

<span class="token comment">// 自动播放的速度</span>
<span class="token keyword">const</span> <span class="token constant">AUTO_ANIMATE_SPEED</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>

<span class="token comment">// 每张图片停留的时间</span>
<span class="token keyword">const</span> <span class="token constant">STAY_TIME</span> <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>

<span class="token comment">// 点击下面导航栏和左右按钮的速度</span>
<span class="token keyword">const</span> <span class="token constant">JUMP_ANIMATE_SPEED</span> <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>

<span class="token comment">// 当前显示图片的索引</span>
<span class="token keyword">let</span> imgIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// 动态设置ul的宽度</span>
$imgList<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> $imgList<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 将ul的left值设置为第二张图片</span>
$imgList<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token constant">SECOND_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 为左按钮绑定点击监听</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#leftBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">leftMove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 为右按钮绑定点击监听</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#rightBtn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
   * <span class="token keyword">@description</span>: 执行向右翻页效果
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">number</span>
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Number<span class="token punctuation">}</span></span> <span class="token parameter">speed</span>
   */</span>  
<span class="token keyword">function</span> <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 根据跳转的数量来计算出目标left值</span>
    <span class="token keyword">let</span> targetLeft <span class="token operator">=</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> number<span class="token punctuation">;</span>

    <span class="token comment">// 执行动画效果</span>
    $imgList<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;-=&quot;</span> <span class="token operator">+</span> targetLeft <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 变化当前图片的索引</span>
        imgIndex <span class="token operator">+=</span> number<span class="token punctuation">;</span>

        <span class="token comment">// 计算出执行动画效果后的left值</span>
        <span class="token keyword">let</span> currentLeft <span class="token operator">=</span> <span class="token operator">-</span> imgIndex <span class="token operator">*</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

        <span class="token comment">// 如果是最后一张图片则跳转到第二张图片</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentLeft <span class="token operator">===</span> <span class="token constant">LAST_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            $imgList<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token constant">SECOND_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            imgIndex <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 设置nav的样式</span>
        $nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// imgIndex - 1 是因为eq()函数是从0开始计算的</span>
        $nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>imgIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">leftMove</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> speed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 执行动画效果</span>
    $imgList<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token string">&quot;+=&quot;</span> <span class="token operator">+</span> <span class="token constant">IMG_WIDTH</span> <span class="token operator">*</span> number <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 变化当前图片的索引</span>
        imgIndex <span class="token operator">-=</span> number<span class="token punctuation">;</span>

        <span class="token comment">// 计算出执行动画效果后的left值</span>
        <span class="token keyword">let</span> currentLeft <span class="token operator">=</span> <span class="token operator">-</span> imgIndex <span class="token operator">*</span> <span class="token constant">IMG_WIDTH</span><span class="token punctuation">;</span>

        <span class="token comment">// 如果是第一张图片则跳转到最后第二张图片</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentLeft <span class="token operator">===</span> <span class="token constant">FIRST_LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            $imgList<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token constant">LAST_SERCOND_LEFT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            imgIndex <span class="token operator">=</span> <span class="token constant">IMG_NUM</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 设置nav的样式</span>
        $nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $nav<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>imgIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;background-color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#nav&gt;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前点击li的索引</span>
    <span class="token keyword">let</span> newIndex <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// 判断现在的图片位置是目标位置的左边还是右边</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&lt;</span> imgIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 计算出需要移动的图片数量</span>
        <span class="token keyword">let</span> moveNum <span class="token operator">=</span> imgIndex <span class="token operator">-</span> newIndex<span class="token punctuation">;</span>

        <span class="token comment">// 向左移指定的图片数量</span>
        <span class="token function">leftMove</span><span class="token punctuation">(</span>moveNum<span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&gt;</span> imgIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 计算出需要移动的图片数量</span>
        <span class="token keyword">let</span> moveNum <span class="token operator">=</span> newIndex <span class="token operator">-</span> imgIndex<span class="token punctuation">;</span>

        <span class="token comment">// 向右移指定的图片数量</span>
        <span class="token function">rightMove</span><span class="token punctuation">(</span>moveNum<span class="token punctuation">,</span> <span class="token constant">JUMP_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 启动定时器，定时执行动画效果</span>
<span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span> <span class="token operator">+</span> <span class="token constant">STAY_TIME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 实现当鼠标移动进去后停止播放，移出来后继续播放</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#outer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// clearInterval(timer); </span>
    timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">rightMove</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">AUTO_ANIMATE_SPEED</span> <span class="token operator">+</span> <span class="token constant">STAY_TIME</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="八、多库共存" tabindex="-1"><a class="header-anchor" href="#八、多库共存"><span>八、多库共存</span></a></h2><p>因为 jQuery 使用了 <code>$</code> 符号，所以如果有些库也需要使用 <code>$</code> 符号，就会产生冲突。</p><ul><li><code>jQuery.noConflict( [removeAll] )</code>：释放 <code>$</code> 符号的使用权。 <ul><li><code>removeAll</code>：如果为 true ，则移出所有的 jQuery 核心函数和核心对象，包括 <code>jQuery</code> 和 <code>$</code>。</li></ul></li></ul><p>举一个例子：</p><ul><li>第 6 行释放 <code>$</code> 的使用权，所以第 8 行报错，第 9 行使用 <code>jQuery</code> 则不会报错</li><li>第 11 行移出了所有的 jQuery 核心函数和核心对象，所以第 14 行代码也会报错</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>

jQuery<span class="token punctuation">.</span><span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 释放$的使用权</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 报错</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>

jQuery<span class="token punctuation">.</span><span class="token function">noConflict</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 移出jQuery核心函数和核心对象</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 报错</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 报错</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),i=[c,l,u];function k(r,d){return p(),e("div",null,i)}const g=t(o,[["render",k],["__file","jQuery-中.html.vue"]]),b=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%AD.html","title":"jQuery-中","lang":"zh-CN","frontmatter":{"description":"jQuery-中 一、jQuery对象的筛选和查找 筛选： 在已查找出来的集合中进行再次过滤，过滤出不需要的。与并集选择器的功能相似。 查找： 以当前的集合为起点，进行向外查找需要的元素。或者说在当前元素的 DOM 节点树查找。 1.1 筛选 首先有以位置为条件的筛选： eq( index | -index ) 获取当前链式操作中索引为 n 的 jQu...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/JS%E6%A1%86%E6%9E%B6/jQuery-%E4%B8%AD.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"jQuery-中"}],["meta",{"property":"og:description","content":"jQuery-中 一、jQuery对象的筛选和查找 筛选： 在已查找出来的集合中进行再次过滤，过滤出不需要的。与并集选择器的功能相似。 查找： 以当前的集合为起点，进行向外查找需要的元素。或者说在当前元素的 DOM 节点树查找。 1.1 筛选 首先有以位置为条件的筛选： eq( index | -index ) 获取当前链式操作中索引为 n 的 jQu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-24T04:33:47.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:modified_time","content":"2024-02-24T04:33:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jQuery-中\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-24T04:33:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"一、jQuery对象的筛选和查找","slug":"一、jquery对象的筛选和查找","link":"#一、jquery对象的筛选和查找","children":[{"level":3,"title":"1.1 筛选","slug":"_1-1-筛选","link":"#_1-1-筛选","children":[]},{"level":3,"title":"1.2 查找","slug":"_1-2-查找","link":"#_1-2-查找","children":[]}]},{"level":2,"title":"二、全选练习","slug":"二、全选练习","link":"#二、全选练习","children":[]},{"level":2,"title":"三、文档处理","slug":"三、文档处理","link":"#三、文档处理","children":[{"level":3,"title":"3.1 插入子元素","slug":"_3-1-插入子元素","link":"#_3-1-插入子元素","children":[]},{"level":3,"title":"3.2 插入兄弟元素","slug":"_3-2-插入兄弟元素","link":"#_3-2-插入兄弟元素","children":[]},{"level":3,"title":"3.3 替换元素","slug":"_3-3-替换元素","link":"#_3-3-替换元素","children":[]},{"level":3,"title":"3.4 删除元素","slug":"_3-4-删除元素","link":"#_3-4-删除元素","children":[]},{"level":3,"title":"3.5 示例","slug":"_3-5-示例","link":"#_3-5-示例","children":[]}]},{"level":2,"title":"四、事件处理","slug":"四、事件处理","link":"#四、事件处理","children":[{"level":3,"title":"4.1 事件载入","slug":"_4-1-事件载入","link":"#_4-1-事件载入","children":[]},{"level":3,"title":"4.2 事件处理","slug":"_4-2-事件处理","link":"#_4-2-事件处理","children":[]},{"level":3,"title":"4.3 事件的切换","slug":"_4-3-事件的切换","link":"#_4-3-事件的切换","children":[]},{"level":3,"title":"4.4 事件","slug":"_4-4-事件","link":"#_4-4-事件","children":[]}]},{"level":2,"title":"五、添加删除记录","slug":"五、添加删除记录","link":"#五、添加删除记录","children":[{"level":3,"title":"5.1 页面布局","slug":"_5-1-页面布局","link":"#_5-1-页面布局","children":[]},{"level":3,"title":"5.2 jQuery代码","slug":"_5-2-jquery代码","link":"#_5-2-jquery代码","children":[]}]},{"level":2,"title":"六、效果","slug":"六、效果","link":"#六、效果","children":[{"level":3,"title":"6.1 内置动画","slug":"_6-1-内置动画","link":"#_6-1-内置动画","children":[]},{"level":3,"title":"6.2 自定义动画","slug":"_6-2-自定义动画","link":"#_6-2-自定义动画","children":[]}]},{"level":2,"title":"七、轮播图","slug":"七、轮播图","link":"#七、轮播图","children":[{"level":3,"title":"7.1 简介","slug":"_7-1-简介","link":"#_7-1-简介","children":[]},{"level":3,"title":"7.2 页面布局","slug":"_7-2-页面布局","link":"#_7-2-页面布局","children":[]},{"level":3,"title":"7.3 实现翻页","slug":"_7-3-实现翻页","link":"#_7-3-实现翻页","children":[]},{"level":3,"title":"7.4 实现自动翻页","slug":"_7-4-实现自动翻页","link":"#_7-4-实现自动翻页","children":[]},{"level":3,"title":"7.5 同步更新状态栏","slug":"_7-5-同步更新状态栏","link":"#_7-5-同步更新状态栏","children":[]},{"level":3,"title":"7.6 点击状态栏跳转图片","slug":"_7-6-点击状态栏跳转图片","link":"#_7-6-点击状态栏跳转图片","children":[]},{"level":3,"title":"7.7 快速翻页问题","slug":"_7-7-快速翻页问题","link":"#_7-7-快速翻页问题","children":[]},{"level":3,"title":"7.8 完整代码","slug":"_7-8-完整代码","link":"#_7-8-完整代码","children":[]}]},{"level":2,"title":"八、多库共存","slug":"八、多库共存","link":"#八、多库共存","children":[]}],"git":{"createdTime":1708749227000,"updatedTime":1708749227000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":27.01,"words":8104},"filePathRelative":"学习/前端/JS框架/jQuery-中.md","localizedDate":"2024年2月24日","excerpt":"\\n<h2>一、jQuery对象的筛选和查找</h2>\\n<p><strong>筛选：</strong> 在已查找出来的集合中进行再次过滤，过滤出不需要的。与并集选择器的功能相似。</p>\\n<p><strong>查找：</strong> 以当前的集合为起点，进行向外查找需要的元素。或者说在当前元素的 DOM 节点树查找。</p>\\n<h3>1.1 筛选</h3>\\n<p>首先有以位置为条件的筛选：</p>\\n<ul>\\n<li><code>eq( index | -index )</code></li>\\n<li>获取当前链式操作中索引为 n 的 jQuery 对象，返回 jQuery 对象。</li>\\n<li>参数大于0，正向选取；参数小于0，反向选取。</li>\\n<li>类似的有 <code>get(index)</code>,不过 <code>get(index)</code> 返回的是 DOM 对象。</li>\\n<li>与选择器 <code>:eq(index)</code> 类似。</li>\\n<li><code>first()</code>\\n<ul>\\n<li>获取第一个元素。</li>\\n<li>与选择器 <code>:first</code> 类似。</li>\\n</ul>\\n</li>\\n<li><code>last()</code>\\n<ul>\\n<li>获取最后一个元素。</li>\\n<li>与选择器 <code>:last</code> 类似。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{g as comp,b as data};
