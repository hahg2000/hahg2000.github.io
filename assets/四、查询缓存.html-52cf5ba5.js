const e=JSON.parse('{"key":"v-1bc3a3ce","path":"/%E5%AD%A6%E4%B9%A0/%E5%90%8E%E7%AB%AF/SSM%E6%A1%86%E6%9E%B6/MyBatis3/%E5%9B%9B%E3%80%81%E6%9F%A5%E8%AF%A2%E7%BC%93%E5%AD%98.html","title":"四、查询缓存","lang":"zh-CN","frontmatter":{"readingTime":true,"autoNext":"五、Mybatis注解式开发","tag":["SSM框架","学习","MyBatis"],"description":"四、查询缓存 ​\\t查询缓存的使用，主要是为了 提高查询访问速度。将用户对同一数据的重复查询过程简化，不再每次均从数据库查询获取结果数据，从而提高访问速度。 ​\\tMyBatis的查询缓存机制，根据缓存区的作用域（生命周期）可划分为两种： 一级查询缓存 二级查询缓存 4.1 一级查询缓存 ​\\tMyBatis 一级查询缓存是基于 org.apache.ibatis.cache.impl.PerpetualCache 类的 HashMap 本地缓存，其作用域是 SqlSession。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/%E5%90%8E%E7%AB%AF/SSM%E6%A1%86%E6%9E%B6/MyBatis3/%E5%9B%9B%E3%80%81%E6%9F%A5%E8%AF%A2%E7%BC%93%E5%AD%98.html"}],["meta",{"property":"og:title","content":"四、查询缓存"}],["meta",{"property":"og:description","content":"四、查询缓存 ​\\t查询缓存的使用，主要是为了 提高查询访问速度。将用户对同一数据的重复查询过程简化，不再每次均从数据库查询获取结果数据，从而提高访问速度。 ​\\tMyBatis的查询缓存机制，根据缓存区的作用域（生命周期）可划分为两种： 一级查询缓存 二级查询缓存 4.1 一级查询缓存 ​\\tMyBatis 一级查询缓存是基于 org.apache.ibatis.cache.impl.PerpetualCache 类的 HashMap 本地缓存，其作用域是 SqlSession。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-12T04:21:01.000Z"}],["meta",{"property":"article:tag","content":"SSM框架"}],["meta",{"property":"article:tag","content":"学习"}],["meta",{"property":"article:tag","content":"MyBatis"}],["meta",{"property":"article:modified_time","content":"2023-03-12T04:21:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四、查询缓存\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-12T04:21:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"4.1 一级查询缓存","slug":"_4-1-一级查询缓存","link":"#_4-1-一级查询缓存","children":[{"level":3,"title":"4.1.1 一级查询缓存的存在性证明","slug":"_4-1-1-一级查询缓存的存在性证明","link":"#_4-1-1-一级查询缓存的存在性证明","children":[]},{"level":3,"title":"4.1.2 一级缓存读取数据的依据","slug":"_4-1-2-一级缓存读取数据的依据","link":"#_4-1-2-一级缓存读取数据的依据","children":[]},{"level":3,"title":"4.1.3 增删改对一级查询缓存的影响","slug":"_4-1-3-增删改对一级查询缓存的影响","link":"#_4-1-3-增删改对一级查询缓存的影响","children":[]}]},{"level":2,"title":"4.2 内置二级查询缓存","slug":"_4-2-内置二级查询缓存","link":"#_4-2-内置二级查询缓存","children":[{"level":3,"title":"4.2.1 二级缓存用法","slug":"_4-2-1-二级缓存用法","link":"#_4-2-1-二级缓存用法","children":[]},{"level":3,"title":"4.2.2 二级查询缓存的存在性证明","slug":"_4-2-2-二级查询缓存的存在性证明","link":"#_4-2-2-二级查询缓存的存在性证明","children":[]},{"level":3,"title":"4.2.3 增删改对二级查询缓存的影响","slug":"_4-2-3-增删改对二级查询缓存的影响","link":"#_4-2-3-增删改对二级查询缓存的影响","children":[]},{"level":3,"title":"4.2.4 二级缓存的关闭","slug":"_4-2-4-二级缓存的关闭","link":"#_4-2-4-二级缓存的关闭","children":[]},{"level":3,"title":"4.2.5 二级缓存的使用原则","slug":"_4-2-5-二级缓存的使用原则","link":"#_4-2-5-二级缓存的使用原则","children":[]}]},{"level":2,"title":"4.3 ehcache 二级查询缓存","slug":"_4-3-ehcache-二级查询缓存","link":"#_4-3-ehcache-二级查询缓存","children":[{"level":3,"title":"4.3.1导入Jar包","slug":"_4-3-1导入jar包","link":"#_4-3-1导入jar包","children":[]},{"level":3,"title":"4.3.2 添加 ehcache.xml","slug":"_4-3-2-添加-ehcache-xml","link":"#_4-3-2-添加-ehcache-xml","children":[]},{"level":3,"title":"4.3.3 启用 ehcache 缓存机制","slug":"_4-3-3-启用-ehcache-缓存机制","link":"#_4-3-3-启用-ehcache-缓存机制","children":[]},{"level":3,"title":"4.3.4 ehcache 个性化设置","slug":"_4-3-4-ehcache-个性化设置","link":"#_4-3-4-ehcache-个性化设置","children":[]}]}],"git":{"createdTime":1678594861000,"updatedTime":1678594861000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":12.31,"words":3693},"filePathRelative":"学习/后端/SSM框架/MyBatis3/四、查询缓存.md","localizedDate":"2023年3月12日","excerpt":"<h1> 四、查询缓存</h1>\\n<p>​\\t查询缓存的使用，主要是为了 <strong>提高查询访问速度</strong>。将用户对同一数据的重复查询过程简化，不再每次均从数据库查询获取结果数据，从而提高访问速度。</p>\\n<p>​\\tMyBatis的查询缓存机制，根据缓存区的作用域（生命周期）可划分为两种：</p>\\n<ul>\\n<li>一级查询缓存</li>\\n<li>二级查询缓存</li>\\n</ul>\\n<h2> 4.1 一级查询缓存</h2>\\n<p>​\\tMyBatis 一级查询缓存是基于 org.apache.ibatis.cache.impl.PerpetualCache 类的 HashMap 本地缓存，其作用域是 SqlSession。</p>","autoDesc":true}');export{e as data};
