import{_ as e,W as o,X as i,Y as n,Z as s,$ as t,a2 as l,C as p}from"./framework-0bc3c581.js";const c={},r=n("h1",{id:"六、junit测试",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#六、junit测试","aria-hidden":"true"},"#"),s(" 六、JUnit测试")],-1),u=n("h2",{id:"_6-1-下载-jar-包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_6-1-下载-jar-包","aria-hidden":"true"},"#"),s(" 6.1 下载 jar 包")],-1),d=n("p",null,"​ 使用 JUnit 进行测试，需要导入对于 Jar 包，。",-1),k={href:"https://junit.org/junit5/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://search.maven.org/search?q=g:junit%20AND%20a:junit",target:"_blank",rel:"noopener noreferrer"},v={href:"http://www.java2s.com/Code/Jar/h/Downloadhamcrestcore13jar.htm",target:"_blank",rel:"noopener noreferrer"},m=l(`<h2 id="_6-2-第一种使用方法" tabindex="-1"><a class="header-anchor" href="#_6-2-第一种使用方法" aria-hidden="true">#</a> 6.2 第一种使用方法</h2><p>​ 1. 右键 src，新建 JUnit 测试用例</p><img src="https://raw.githubusercontent.com/hahg2000/SSMPic/main/20210209164414.png" alt="新建Junit测试用例" style="zoom:75%;"><ol start="2"><li>然后勾上 setUp() 和 tearDown()</li></ol><ul><li>setUp() ：在测试之前执行，主要用于测试前的初始化，如连接数据库。</li><li>tearDown() ：在测试之后执行，主要用于资源释放，如关闭数据库连接等。</li></ul><ol start="3"><li>在 @Test 注解下可以放置需要测试的方法，可以有多个测试方法，但如果只需要测试一个方法，<span style="color:red;font-weight:bold;">需要将光标放置在该方法的方法名上</span>，否则会执行所有测试方法</li></ol><h2 id="_6-3-第二种使用方法" tabindex="-1"><a class="header-anchor" href="#_6-3-第二种使用方法" aria-hidden="true">#</a> 6.3 第二种使用方法</h2><p>​ 这种方法比上一种方法更常用，这种方法是在普通类中进行测试</p><ol><li>新建一个普通的类</li><li>导入 JUnit 和 hamcrest 的 Jar 包</li><li>根据需求添加注解 @Before 、@After 和 @Test</li><li>点击运行</li></ol><p><strong>MyTest02.java</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest02</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Before</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Before</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token annotation punctuation">@After</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">After</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;After&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
	<span class="token punctuation">}</span>
	
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function _(b,f){const a=p("ExternalLinkIcon");return o(),i("div",null,[r,u,d,n("ul",null,[n("li",null,[n("p",null,[s("JUnit 官网 [ "),n("a",k,[s("https://junit.org/junit5/"),t(a)]),s(" ]")])]),n("li",null,[n("p",null,[s("JUnit 下载地址 [ "),n("a",h,[s("https://search.maven.org/search?q=g:junit AND a:junit"),t(a)]),s(" ]")])]),n("li",null,[n("p",null,[s("hamcrest 下载地址 [ "),n("a",v,[s("http://www.java2s.com/Code/Jar/h/Downloadhamcrestcore13jar.htm"),t(a)]),s(" ]")])])]),m])}const j=e(c,[["render",_],["__file","六、JUnit测试.html.vue"]]);export{j as default};
