const e=JSON.parse('{"key":"v-dbfb9292","path":"/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%80.html","title":"Vue面试题一","lang":"zh-CN","frontmatter":{"description":"Vue面试题一 转载链接：https://github.com/sudheerj/vuejs-interview-questions#what-is-vuejs 一、什么是Vue 答：Vue.js 是一个开源的、渐进式框架，用于构建增量型的用户界面。Vue.js 专注于视图图层 view layer ，并易于与现有的项目和其他框架集成。","head":[["meta",{"property":"og:url","content":"https://hahg2000.github.io/%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%80.html"}],["meta",{"property":"og:title","content":"Vue面试题一"}],["meta",{"property":"og:description","content":"Vue面试题一 转载链接：https://github.com/sudheerj/vuejs-interview-questions#what-is-vuejs 一、什么是Vue 答：Vue.js 是一个开源的、渐进式框架，用于构建增量型的用户界面。Vue.js 专注于视图图层 view layer ，并易于与现有的项目和其他框架集成。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-12T04:21:01.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-12T04:21:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue面试题一\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-12T04:21:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、什么是Vue","slug":"一、什么是vue","link":"#一、什么是vue","children":[]},{"level":2,"title":"二、Vue的主要特点是什么？","slug":"二、vue的主要特点是什么","link":"#二、vue的主要特点是什么","children":[]},{"level":2,"title":"三、Vue.js 的生命周期方法有哪些？","slug":"三、vue-js-的生命周期方法有哪些","link":"#三、vue-js-的生命周期方法有哪些","children":[]},{"level":2,"title":"四、有哪些条件指令？","slug":"四、有哪些条件指令","link":"#四、有哪些条件指令","children":[]},{"level":2,"title":"五、v-show和v-if区别","slug":"五、v-show和v-if区别","link":"#五、v-show和v-if区别","children":[]},{"level":2,"title":"六、v-for 指令的作用是什么？","slug":"六、v-for-指令的作用是什么","link":"#六、v-for-指令的作用是什么","children":[]},{"level":2,"title":"七、什么是Vue实例","slug":"七、什么是vue实例","link":"#七、什么是vue实例","children":[]},{"level":2,"title":"八、如何实现有条件地显示一组元素","slug":"八、如何实现有条件地显示一组元素","link":"#八、如何实现有条件地显示一组元素","children":[]},{"level":2,"title":"九、如何使用key属性","slug":"九、如何使用key属性","link":"#九、如何使用key属性","children":[]},{"level":2,"title":"十、为什么不应该在同一个元素上同时使用 if 和 for 指令？","slug":"十、为什么不应该在同一个元素上同时使用-if-和-for-指令","link":"#十、为什么不应该在同一个元素上同时使用-if-和-for-指令","children":[]},{"level":2,"title":"十一、为什么需要在 for 指令上使用 key 属性？","slug":"十一、为什么需要在-for-指令上使用-key-属性","link":"#十一、为什么需要在-for-指令上使用-key-属性","children":[]},{"level":2,"title":"十二、突变方法有哪些？","slug":"十二、突变方法有哪些","link":"#十二、突变方法有哪些","children":[]},{"level":2,"title":"十三、非突变方法有哪些？","slug":"十三、非突变方法有哪些","link":"#十三、非突变方法有哪些","children":[]},{"level":2,"title":"十四、关于突变方法有哪些注意事项？","slug":"十四、关于突变方法有哪些注意事项","link":"#十四、关于突变方法有哪些注意事项","children":[]},{"level":2,"title":"十五、如何使用事件处理？","slug":"十五、如何使用事件处理","link":"#十五、如何使用事件处理","children":[]},{"level":2,"title":"十六、vue提供的事件修饰符有哪些？","slug":"十六、vue提供的事件修饰符有哪些","link":"#十六、vue提供的事件修饰符有哪些","children":[]},{"level":2,"title":"二十一、如何定义自定义键修饰符","slug":"二十一、如何定义自定义键修饰符","link":"#二十一、如何定义自定义键修饰符","children":[]},{"level":2,"title":"二十五、v-model支持哪些修饰符？","slug":"二十五、v-model支持哪些修饰符","link":"#二十五、v-model支持哪些修饰符","children":[]},{"level":2,"title":"三十、如何使用v-model父子通信","slug":"三十、如何使用v-model父子通信","link":"#三十、如何使用v-model父子通信","children":[]},{"level":2,"title":"三十七、什么是非props属性？","slug":"三十七、什么是非props属性","link":"#三十七、什么是非props属性","children":[]},{"level":2,"title":"三十九、如何定义自定义组件v-model","slug":"三十九、如何定义自定义组件v-model","link":"#三十九、如何定义自定义组件v-model","children":[]},{"level":2,"title":"四十四、如何使路由器参数更改为反应式？","slug":"四十四、如何使路由器参数更改为反应式","link":"#四十四、如何使路由器参数更改为反应式","children":[]},{"level":2,"title":"五十四、什么是插件","slug":"五十四、什么是插件","link":"#五十四、什么是插件","children":[]},{"level":2,"title":"五十五、如何创建插件","slug":"五十五、如何创建插件","link":"#五十五、如何创建插件","children":[]},{"level":2,"title":"六十二、什么是自定义指令","slug":"六十二、什么是自定义指令","link":"#六十二、什么是自定义指令","children":[]},{"level":2,"title":"六十三、如何自定义化指令","slug":"六十三、如何自定义化指令","link":"#六十三、如何自定义化指令","children":[]}],"git":{"createdTime":1678594861000,"updatedTime":1678594861000,"contributors":[{"name":"hahg2000","email":"61403802+hahg2000@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":14.23,"words":4269},"filePathRelative":"学习/前端/面试题一.md","localizedDate":"2023年3月12日","excerpt":"<h1> Vue面试题一</h1>\\n<p>转载链接：<a href=\\"https://github.com/sudheerj/vuejs-interview-questions#what-is-vuejs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/sudheerj/vuejs-interview-questions#what-is-vuejs</a></p>\\n<h2> 一、什么是Vue</h2>\\n<p>答：Vue.js 是一个开源的、渐进式框架，用于构建增量型的用户界面。Vue.js 专注于视图图层 <code>view layer</code> ，并易于与现有的项目和其他框架集成。</p>","autoDesc":true}');export{e as data};
